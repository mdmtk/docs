var docs = [{"key":"guide-about","name":" About MDM Toolkit","md":"# About MDM Toolkit\n\n## Overview\nThe MDM Toolkit provides a complete turn-key solution that allows skilled Android application developers to independently develop applications to manage Zebra EMC devices. Management of the devices is performed through a provisioning XML files that are submitted via MX framework APIs that reside on Zebra devices. MDM Clients do not have to be signed by Zebra in order to utilize this functionality. This document describes the components of the toolkit and contains the information on how to use the tool to generate the correct XML as well as code examples for interfacing with the MX framework from within the MDM client application.\n\nTo **Jump Right In**, follow the [Quick Start Guide](#guide-tutorials-quickstart) which walks through the process and tools you will be using.\n\n\n### Folder structure\n* **Documentation** : instructions for XML handling, CSP reference\n* **DSD To XML**: tool used for generating XML modules\n* **MX**: DSD files used by the DSDtoXML tool \n* **Samples**: Sample project code\n\n## Components\n\n### Documentation\nThis documentation contains information to get you started with interfacing with the MX framework from your MDM client. It also contains reference information for XML generation, submission as well as handling responses. The included CSP reference supplies important usage notes as well as device compatibility information. Be sure to check the [Using This Help](#guide-abouthelp) guide for more information on how to use this help system\n\n\n### DSDtoXML Tool\nThe DSDtoXMl tool is found in the `DSD To XML` folder of this toolkit. It allows you to create XML modules to perform certain actions with the MX framework. This tool takes in a DSD file for a given CSP and then outputs an XML file that will be used by the MDM client. Be sure to read more about [generating xml](#guide-xml-generate). \n\n### Sample Projects\nA few sample projects are included as part of the toolkit to get you started. These projects can be imported directly into your Android IDE and run on a supported device. The samples can be found in the `Samples` folder of this toolkit.\n\n\n## Supported Devices\nThis version of the MDM toolkit supports the following devices and versions of MX:\n\n* Devices\n\t* TC55\n\n* Operating Systems\n\t* KitKat Zebra Rebranded\n\n* MX\n\t* 4.3\n\n\n\n\n\n\n\n\n"},{"key":"guide-abouthelp","name":"About MDM Toolkit Help","md":"#About MDM Toolkit Help\n\n##Overview\n\nWelcome to the MDM Toolkit Documentation. This help system allows you to browse the MDM Toolkit documentation on your local computer and features many tools for navigating and searching through the content. \n\n### Downloading Updated Documentation\nFollow these instructions for updating your local documentation to be the latest.\n\n* [Download the latest documentation](https://s3.amazonaws.com/mdmtk/MDMTK.Latest.zip)\n* Unzip the contents of the download\n* Launch the `index.html` file found in the `Documentation` folder\n\n\n##Help Features\n\n###Table of Contents\n\nThe menu on the left hand side of the page can be used to navigate through the various documents contained inside this help application.  \n\n![img](images/about/toc1.jpg)\n\nThe documents are broken into categories that can be drilled down to.\n\n![img](images/about/toc3.jpg)\n\nThe menu icon will allow you to collapse and expand the \"Table of Contents\".\n\n![img](images/about/toc2.png)\n \n###Search\n\nAt the top of the page you will see a search box. \n\n![img](images/about/s1.jpg)\n\nThis box will search all documents in the system and highlight selected terms in the current document. You can switch between relevant documents by selecting the document in \"Search Results\". You can minimize the \"Search Results\" by clicking on the \"-\" icon. You can bring the \"Search Results back by click on the search bar. \n\n![img](images/about/s2.jpg)\n\nAt the bottom right hand side of the page you will see next and previous buttons that will allow you to move through the selected items. \n\n![img](images/about/s3.png)\n\nAfter searching, if you browse to another page the search terms will automatically be used to bring you to the first found entry. Clearing the search results field will prevent this behavior.\n\n###In This Document\n\nThe `In This Document` menu is a list of the main sections of the current document. When selecting a link, the document will scroll to the selected section, and show any sub sections (if they exist). \n\n![img](images/about/itd1.png)\n\n### Compatibility Matrix \n\nThe compatibility tool highlights the MDM features, devices and OS they are compatible with.  \n\n![img](images/about/comparabilitymatrix-01.png)\n\nYou can open the compatibility view in full screen by click on the link Icon. \n\n![img](images/about/comparabilitymatrix-02.png)\n\nYou can Change the MX Version by using the MX drop down. \n\n![img](images/about/comparabilitymatrix-03.png)\n\nYou can Change the CSP by using the CSP drop down.\n\n![img](images/about/comparabilitymatrix-04.png)\n\nYou can Change the OS Version compatibility by using the OS drop down.\n\n![img](images/about/comparabilitymatrix-05.png)\n\nYou can Change the Device compatibility by using the Device drop down.\n\n![img](images/about/comparabilitymatrix-06.png)\n\nYou can hover over a checkmark to see the full compatibility information, and any usage notes if applicable. \n\n![img](images/about/comparabilitymatrix-07.png)\n\n###Image Viewer:\n\nWhen you click on an image, the image will open up at 100% in a page pop up. If the image is bigger than your screen, you will be able to scroll the image inside the pop up. If you click on the image in the pop up it will open in a new tab. Clicking the [X] in the pop up or clicking outside the pop up will close it.\n\n![img](images/about/lb1.png)\n\n### External Links\n\nA document may contain links to external resources. If the document contains such content, the external url will be opened in a new tab of your browser.\n\n##Supported Web Browsers\n\n* Firefox 29 or newer\n* Google Chrome 35 or newer \n* Internet Explore 9 or newer"},{"key":"guide-csp-access","name":" AccessMgr","md":"# AccessMgr\n\n## About AccessMgr\n\n### Overview\n\nThe AccessMgr Feature Type enables the configuration of a device to control which user, or \"installable\", applications can be used on a given device as well as what those applications can do.\n\nA key concept within the AccessMgr Feature Type is the ability to turn Whitelisting on or off. By default, Whitelisting is turned off. When Whitelisting is turned off, no restrictions are imposed. When Whitelisting is turned on, using the AccessMgr Feature Type, various restrictions can be imposed.\n\nWhitelisting is a process which allows only applications to run which are explicitly specified in a list, which is called the \"white\" list. All other applications are prohibited from running. The AccessMgr Feature Type allows the \"white\" list of applications that are allowed to be installed and/or launched to be maintained. The AccessMgr Feature Type also allows control of which applications are allowed to submit XML for all of the Feature Types, including the AccessMgr Feature Type.\n\nWhitelisting only applies to user applications and will never have any effect on System applications. System applications are those applications that are built into the device and hence are always installed. Some control of System applications can be accomplished by using the AppMgr Feature Type.\n\nUser applications are those applications that are not built into the device and hence must be installed onto a device before they can be used. Whitelisting can be used to control whether a device user is allowed to install a user application, but cannot control whether an application can be installed programmatically by using the AppMgr Feature Type. Whitelisting can also be used to control whether a user application can be launched, via any means, once it is installed.\n\n>**Note:** It is important to understand that if a user application uses the AccessMgr Feature Type to turn on Whitelisting, then that application will become subject to Whitelisting. If the application does not add itself to the \"white\" list, then that application will no longer be allowed to run. Also, if such an application does not explicitly allow itself to submit XML, then it would not be able to alter the configuration once it was successfully applied.\n\nThe AccessMgr Feature Type also provides the option to control whether the device user can access a full or reduced version of in-device System Settings Menu.\n\n### Main Functionality\n\n* Turn Whitelisting on or off\n* Manage the \"white\" list of applications that a device user can install and that can be launched\n* Turn verification of application signatures on or off\n* Control which applications are allowed to submit XML\n* Select whether the device user can use Full or Reduced Settings\n* Set Application Verification Mode to Verify All App Signature\n\n##Parameter Notes\n### Operation Mode\nPivotal parm: Yes\n\nDescription: \n\n>Select the desired Operation Mode which will turn Whitelisting on or off. Whitelisting is turned off by default, and hence no restrictions are imposed on which applications device users can install or which applications can be launched.\n\n>Turning on Whitelisting allows a device to be made more secure by preventing a device user from installing applications that are not on the \"white\" list and by preventing all launching of applications that are not on the \"white\" list. Turning on Whitelisting also complicates the process of deploying applications since applications that are deployed and installed will have to also be added to the \"white\" list before they can be launched.\n\n<div class=\"parm-table\">\n <table class=\"table\">\n\t<tr>\n\t\t<th>Parm Option Name</th>\n\t\t<th>Parm Value</th>\n\t\t<th>Description</th>\n\t</tr>\n  <tr>\n    <td>Single User without Whitelist</td>\n    <td>\"1\"</td>\n\t<td>This value will cause Whitelisting to be turned off and hence disable all Whitelisting functionality.</td>\n  </tr>\n  <tr>\n    <td>Single User with Whitelist</td>\n    <td>\"2\"</td>\n\t<td>This value will cause Whitelisting to be turned on and hence enable Whitelisting functionality. The exact behavior of Whitelisting will depend on the configuration of the other parms.</td>\n  </tr>\n</table>\n</div>\t\n\n###System Settings Access\nSettable if: The Operation Mode is \"Single User With Whitelist\"\n\nPivotal parm: No\n\nParm name: SystemSettings\n\nDescription: \n\n>Select the level of system settings access to be allowed on the device's System Settings menu.\n\n<div class=\"parm-table\">\n <table class=\"table\">\n\t<tr>\n\t\t<th>Parm Option Name</th>\n\t\t<th>Parm Value</th>\n\t\t<th>Description</th>\n\t</tr>\n  <tr>\n    <td>Full Access</td>\n    <td>\"1\"</td>\n\t<td>This value will cause the device user to be allowed to access the full capabilities of the in-device System Settings Menu.</td>\n  </tr>\n  <tr>\n    <td>Reduced Access</td>\n    <td>\"2\"</td>\n\t<td>This value will cause the device user to be allowed to access only a reduced set of the capabilities of the in-device System Settings Menu (Display, Volume, About)</td>\n  </tr>\n</table>\n</div>\t\n\n###Application Verification Signing Mode\nSettable if: The Operation Mode is \"Single User With Whitelist\"\n\nPivotal parm: Yes\n\nDescription: \n\n>This parm allows you to control whether Whitelisting will verify the signatures of applications, and if so, which application signatures will be verified. Signature verification is turned off by default.\n\n>When Whitelisting is turned on but Signature verification is turned off, the determination of whether an application is on the \"white\" list is made solely by comparing the Android Package Name. This is insecure since it cannot prevent a potentially rogue application from setting it's Package Name to be one that is known to be on the \"white\" list, and hence circumvent Whitelisting by impersonating a trusted application.\n\n>To increase security, Signature verification can be turned on. When Signature verification is turned on, the determination of whether an application is on the \"white\" list will be based on both its Package Name and its Signature. For that to work, the Signature must be provided for every application that is added to the \"white\" list so it can be compared against the actual Signature of that application.\n\n>Signature verification is more secure since only a specific \"authentic\" version, as identified by its Signature, of a given application, whose Package Name is on the \"white\" list, will be allowed to be installed and launched.  Turning on Signature verification also complicates the process of deploying applications since a unique Signature will need to be configured for each application as part of adding that application to the \"white\" list.\n\n<div class=\"parm-table\">\n <table class=\"table\">\n\t<tr>\n\t\t<th>Parm Option Name</th>\n\t\t<th>Parm Value</th>\n\t\t<th>Description</th>\n\t</tr>\n  <tr>\n    <td>Do nothing</td>\n    <td>\"0\"</td>\n\t<td>This value (or the absence of this parm from the XML) will cause no change to whether Signature verification will occur or for which applications.</td>\n  </tr>\n  <tr>\n    <td>Do not verify app signature</td>\n    <td>\"1\"</td>\n\t<td>This value will cause Signature verification to be turned off, thus causing Package Names alone to be used in to determine if an application is on the \"white\" list.</td>\n  </tr>\n  <tr>\n    <td>Verify user app signature</td>\n    <td>\"2\"</td>\n\t<td>This value will cause Signature verification to be turned on, thus causing Signature verification to be used in addition to Package Names to determine if a user, or \"installable\", application is on the \"white\" list.</td>\n  </tr>\n  <tr>\n    <td>Verify all apps signature</td>\n    <td>\"3\"</td>\n\t<td>This value will cause Signature verification to be turned on, thus causing Signature verification to be used in addition to Package Names to determine if any application, \"built-in\" or \"installable\", is on the \"white\" list.</td>\n  </tr>\n</table>\n</div>\t\n\n### Delete Packages\nSettable if: The Operation Mode is \"Single User With Whitelist\"\n\nPivotal parm: Yes\n\nDescription: \n\n>Select whether or not to delete Packages from the Whitelist\n\n<div class=\"parm-table\">\n <table class=\"table\">\n\t<tr>\n\t\t<th>Parm Option Name</th>\n\t\t<th>Parm Value</th>\n\t\t<th>Description</th>\n\t</tr>\n  <tr>\n    <td>Delete NO Packages</td>\n    <td>\"0\"</td>\n\t<td>This value does not delete anything and hence does not affect the \"white\" list at all.</td>\n  </tr>\n  <tr>\n    <td>Delete specified Packages(s)</td>\n    <td>\"1\"</td>\n\t<td>This value will cause one or more selected Package Names to be deleted from the \"white list\", thus blocking user, or \"installable\", applications with those Package Names from being installed by the device user or launched.</td>\n  </tr>\n  <tr>\n    <td>Delete ALL Packages</td>\n    <td>\"2\"</td>\n\t<td>This value will cause all Package Names to be deleted from the \"white list\", thus blocking all user, or \"installable\",  applications from being installed by the device user or launched.</td>\n  </tr>  \n  <tr>\n    <td>Delete specified Signature(s)</td>\n    <td>\"3\"</td>\n\t<td>This value is meaningful only with Signature verification is turned on, in which case it deletes one or more Signatures from the \"white list\", thus blocking user, or \"installable\", applications with those Signatures from being installed by the device user or launched.</td>\n  </tr>  \n</table>\n</div>\t\n\n#### Delete Package Name(s)\nSettable if: The Operation Mode is \"Single User With Whitelist\" *AND* Delete Packages is \"Delete specified Packages(s)\"\n\nPivotal parm: No\n\nParm name: DeletePackageNames\n\nDescription: \n\n>Provide the Package Names to be deleted from the \"white\" list.\n\nParm value input rules: \n\n* String with a minimum size of 1 character\n* Package names must be separated by commas, such as \"com.mycompany.mypackage,com.mycompany2.mypackage2\" \n\n#### Delete Package Signature(s)\nSettable if: Delete Packages is \"Delete specified Signature(s)\" *AND* the Application Verification Signing Mode is \"Do not verify app signature\", \"Verify user app signature\", or \"Verify all apps signature\"\n\nPivotal parm: No\n\nParm name: DeletePackageSign\n\nDescription: \n\n>Provide the package signatures to be deleted. \n\nParm value input rules: \n\n* String with a minimum size of 1 character\n* The package signatures must be separated by commas\n\n### Add Packages\nSettable if: The Operation Mode is \"Single User With Whitelist\"\n\nPivotal parm: Yes\n\nDescription: \n\n>Select whether or not to add Packages to the \"white\" list. Adding an application to the \"white\" list using this parm does not allow the application to submit XML, that must be done using the separate parm \"Add Packages and Allow to Submit XML\".\n\n>**Note:** It is important to understand that if an application uses the AccessMgr Feature Type to turn on Whitelisting, then that application will become subject to Whitelisting. If the application does not add itself to the \"white\" list, then that application will no longer be allowed to run. Also, if such an application does not explicitly allow itself to submit XML, then it would not be able to alter the configuration once it was successfully applied.\n\n<div class=\"parm-table\">\n <table class=\"table\">\n\t<tr>\n\t\t<th>Parm Option Name</th>\n\t\t<th>Parm Value</th>\n\t\t<th>Description</th>\n\t</tr>\n  <tr>\n    <td>Add No Packages</td>\n    <td>\"0\"</td>\n\t<td>This value will not cause any Package Names to be added to the \"white\" list.</td>\n  </tr>\n  <tr>\n    <td>Add Specified Package(s)</td>\n    <td>\"1\"</td>\n\t<td>This value will cause the specified Package Names to be added the \"white\" list.</td>\n  </tr>\n</table>\n</div>\t\n\n#### Add Package Name(s)\nSettable if: The Operation Mode is \"Single User With Whitelist\" *AND* Add Packages is \"Add Specified Package(s)\"\n\nPivotal parm: No\n\nParm name: AddPackageNames\n\nDescription: \n\n> Provide the Package Names that should be added to the \"white\" list.\n\nParm value input rules: \n\n* String with a minimum size of 1 character\n* Package names must be separated by commas, such as \"com.mycompany.mypackage,com.mycompany2.mypackage2\" \n\n#### Add Package Signature(s)\nSettable if: The Application verification signing mode is \"Do not verify app signature\" or \"Verify user app signature\" *AND* Add Packages is \"Add Specified Package(s)\"\n\nPivotal parm: No\n\nParm name: AddPackageSign\n\nDescription: \n\n>Provide the Signatures that should be added to the \"white\" list. Specifying an empty (length of zero) value (or the absence of this parm from the XML) will cause no package signatures to be added.\n\n###Add Packages and Allow to Submit XML\nSettable if: The Operation Mode is \"Single User With Whitelist\"\n\nPivotal parm: Yes\n\nDescription: \n\n>Select whether or not to add Packages to the \"white\" list and allow them to submit XML.\n\n<div class=\"parm-table\">\n <table class=\"table\">\n\t<tr>\n\t\t<th>Parm Option Name</th>\n\t\t<th>Parm Value</th>\n\t\t<th>Description</th>\n\t</tr>\n  <tr>\n    <td>Add NO Packages</td>\n    <td>\"0\"</td>\n\t<td>This value (or the absence of this parm from the XML) will not cause any Package Names to be added to the \"white\" list and does not explicitly allow any applications to submit XML.</td>\n  </tr>\n  <tr>\n    <td>Add specified Package(s)</td>\n    <td>\"1\"</td>\n\t<td>This value will cause the specified Package Names to be added to the \"white\" list and also allows the applications identified by those Package Names to submit XML.</td>\n  </tr>\n</table>\n</div>\t\n\n####Add Package Name(s)\nSettable if: The Operation Mode is \"Single User With Whitelist\" *AND* Add Packages and Allow to Submit XML is \"Allow specified application(s)\"\n\nPivotal parm: No\n\nParm name: AddPackageNamesAllowXML\n\nDescription: \n\n>Provide the Package Names to be added to the \"white\" list and that should be allowed to submit XML. Specifying an empty (length of zero) value (or the absence of this parm from the XML) will cause no package names to be added and allowed to submit XML.\n\nParm value input rules: \n\n* String with a minimum size of 1 character\n* Package names must be separated by commas, such as \"com.mycompany.mypackage,com.mycompany2.mypackage2\" \n\n####Add Package Signature(s)\nSettable if: The Operation Mode is \"Single User With Whitelist\" *AND* Add Packages and Allow to Submit XML is \"Allow specified application(s)\" *AND* Application Verification Signing Mode is \"Do not verify app signature\", \"Verify user app signature\", or \"Verify all apps signature\"\n\nPivotal parm: No\n\nParm name: AddPackageSignAllowXML\n\nDescription: \n\n>Provide the Signatures that should be added to the \"white\" list. \n\nParm value input rules: \n\n* String with a minimum size of 1 character\n* Package signatures must be separated by commas\n\n### Allow the Application To Submit XML\nSettable if: The Operation Mode is \"Single User With Whitelist\"\n\nPivotal parm: Yes\n\nDescription: \n\n>Select whether or not to allow the application to submit XML. This will allow or restrict applications from submitting changes to the MX Framework. \n\n>**Note:** This feature is supported on devices that are running KitKat versions of Android like the TC70 and will only be used when the Whitelist feature is enabled.\n\n>**WARNING:** Be sure to always include the EMDK for Android service package name `com.symbol.emdkservice` when this feature is enabled. Otherwise Profile Features (excluding DataCapture) will not be able to be processed. \n\n<div class=\"parm-table\">\n <table class=\"table\">\n\t<tr>\n\t\t<th>Parm Option Name</th>\n\t\t<th>Parm Value</th>\n\t\t<th>Description</th>\n\t</tr>\n  <tr>\n    <td>Allow NO applications</td>\n    <td>\"0\"</td>\n\t<td>This value (or the absence of this parm from the XML) will not cause any changes and hence does not explicitly allow any applications to submit XML.</td>\n  </tr>\n  <tr>\n    <td>Allow specified application(s)</td>\n    <td>\"1\"</td>\n\t<td><p>This value will cause the applications identified by the specified list of Package Names to be allowed to submit XML.</p><p>This value also allows a list of Package Names to be specified that will NOT be allowed to submit XML, thus providing an option to specify \"these but not those\"</p>\n</td>\n  </tr>\n  <tr>\n    <td>Allow ALL applications that are permitted to be executed</td>\n    <td>\"2\"</td>\n\t<td><p>This value will cause all of the applications that are on the \"white\" list (i.e. that are allowed to be launched) to be allowed to submit XML.</p><p>This value also allows a list of Package Names to be specified that will NOT be allowed to submit XML, thus providing an option to specify \"all except these\"</p>\n</td>\n  </tr>  \n</table>\n</div>\t\n\n### Allow Package Name(s)\nSettable if: Allow the Application To Submit XML is \"Allow specified application(s)\"\n\nPivotal parm: No\n\nParm name: AllowSubmitXMLPackageNames\n\nDescription: \n\n>Provide the Package Names that should be allowed to submit XML. Specifying an empty (length of zero) value (or the absence of this parm from the XML) will cause no package names to be allowed to submit XML.\n\nParm value input rules: \n\n* String with a minimum size of 0 characters\n* Package names must be separated by commas, such as \"com.mycompany.mypackage,com.mycompany2.mypackage2\" \n\n### Disallow Package Name(s)\nSettable if: Allow the Application To Submit XML is \"Allow specified application(s)\" or \"Allow ALL applications that are permitted to be executed\"\n\nPivotal parm: No\n\nParm name: DisallowSubmitXMLPackageNames\n\nDescription: \n\n>Provide the Package Names that should be disallowed from submitting XML. Specifying an empty (length of zero) value (or the absence of this parm from the XML) will cause no package names to be disallowed from submitting XML.\n\nParm value input rules: \n\n* String with a minimum size of 0 characters\n* Package names must be separated by commas, such as \"com.mycompany.mypackage,com.mycompany2.mypackage2\" \n\n##Queries\n\n###Query the Package Names in the Whitelist, the Operation Mode, and the Application Verification Signing Mode\n\n\t:::XML\n\t<wap-provisioningdoc>\n\t\t<characteristic type=\"AccessMgr\" >\n\t\t\t<parm-query name=\"PackageNames\"/>  \n\t\t\t<parm-query name=\"OperationMode\"/>  \n\t\t\t<parm-query name=\"AppVerifySignMode\"/>  \n\t\t</characteristic>\n\t</wap-provisioningdoc>\n\n\n##Example XML\n\n###Add an Application to the \"white\" list\n\n\t:::XML\n\t<wap-provisioningdoc>\n\t\t<characteristic version=\"4.3\" type=\"AccessMgr\">\n\t\t\t<parm name=\"OperationMode\" value=\"2\" />\n\t\t\t<parm name=\"SystemSettings\" value=\"1\" />\n\t\t\t<parm name=\"DeletePackagesAction\" value=\"0\" />\n\t\t\t<parm name=\"AddPackagesAction\" value=\"1\" />\n\t\t\t<parm name=\"AddPackageNames\" value=\"com.mypackage\" />\n\t\t</characteristic>\n\t</wap-provisioningdoc>\n\n### Specify Applications to Allow and Disallow from Submitting XML\n\n\t:::XML\n\t<wap-provisioningdoc>\n\t\t<characteristic version=\"4.3\" type=\"AccessMgr\">\n\t\t\t<parm name=\"OperationMode\" value=\"2\" />\n\t\t\t<parm name=\"SystemSettings\" value=\"1\" />\n\t\t\t<parm name=\"DeletePackagesAction\" value=\"0\" />\n\t\t\t<parm name=\"AddPackagesAction\" value=\"0\" />\n\t\t\t<parm name=\"AllowSubmitXMLAction\" value=\"1\" />\n\t\t\t<parm name=\"AllowSubmitXMLPackageNames\" value=\"com.mypackage\" />\n\t\t\t<parm name=\"DisallowSubmitXMLPackageNames\" value=\"com.mypackage2\" />\n\t\t</characteristic>\n\t</wap-provisioningdoc>\n\n\t\n## Feature Compatibility\n\n<iframe src=\"compare.html#mx=4.3&csp=AccessMgr&os=JB&embed=true\"></iframe> \n\n"},{"key":"guide-csp-analytics","name":" AnalyticsMgr","md":"# AnalyticsMgr\n\n## About AnalyticsMgr\n\n### Overview\n\nZebra Android devices are equipped with an Analytics Engine that can collect information pertaining to the operation and health of a device. Collected data can be sent to the Cloud or stored locally on the device. Such data can be used to detect devices that need attention or potentially could be used to detect trends that could allow problems to be prevented through preventative action.\n\nThe AnalyticsMgr Feature Type allows you enable or disable collection of data, in the form of groups of metrics, by the Analytics Engine. It also allows you to control whether collected data is stored on the device or sent to the Cloud, and also provides some control over which data is collected and how often.\n\n### Main Functionality\n \n* Enable or Disable all data collection by the Analytics Engine\n* Control whether data is stored locally on the device or is sent to the Cloud\n* Control which data is collected by groups of metrics:\n\t* WWAN Performance\n\t* WLAN Performance\n\t* Battery and CPU Status\n\t* System Information\n\t* GPS Information\n* Control the frequency of data collection by levels:\n\t* None\n\t* Low\n\t* Medium\n\t* High\n\n##Parameter Notes\n###Analytics Action\nPivotal parm: No\n\nParm name: AnalyticsAction\n\nDescription: \n\n>This parm allows you to enable or disable the collection of data on the device by the Analytics Engine.\n\n<div class=\"parm-table\">\n <table class=\"table\">\n\t<tr>\n\t\t<th>Parm Option Name</th>\n\t\t<th>Parm Value</th>\n\t\t<th>Description</th>\n\t</tr>\n  <tr>\n    <td>Do not change</td>\n    <td>\"0\"</td>\n\t<td>This value (or the absence of this parm from the XML) will cause no change to whether the Analytics Engine collects data on the device.</td>\n  </tr>\n  <tr>\n    <td>Enable</td>\n    <td>\"1\"</td>\n\t<td>This value will cause the Analytics Engine to be enabled and hence to collect data on the device.</td>\n  </tr>  \n  <tr>\n    <td>Disable</td>\n    <td>\"2\"</td>\n\t<td>This value will cause the Analytics Engine to be disabled and hence to not collect data on the device.</td>\n  </tr>\n</table>\n</div>\t\n\n###Transport Method\nPivotal parm: No\n\nParm name: TransportMethod\n\nDescription: \n\n>This parm allows you to control whether data collected by the Analytics Engine is stored on the device or sent to the Cloud.\n\n<div class=\"parm-table\">\n <table class=\"table\">\n\t<tr>\n\t\t<th>Parm Option Name</th>\n\t\t<th>Parm Value</th>\n\t\t<th>Description</th>\n\t</tr>\n  <tr>\n    <td>Do not change</td>\n    <td>\"0\"</td>\n\t<td>This value (or the absence of this parm from the XML) will cause no change to whether data is stored on the device or sent to the Cloud by the Analytics Engine.</td>\n  </tr>\n  <tr>\n    <td>Select Cloud Transport</td>\n    <td>\"1\"</td>\n\t<td>This value will cause the Analytics Engine to send data to the Cloud. A corresponding client capable of performing the transport must be present on the device for this option to function properly.</td>\n  </tr>\n  <tr>\n    <td>Select File Transport</td>\n    <td>\"2\"</td>\n\t<td>This value will cause the Analytics Engine to store data locally on the device in a file in the device file system.</td>\n  </tr>\n</table>\n</div>\t\n\n###Group Action\nPivotal parm: Yes\n\nDescription: \n\n>This parm allows you to decide whether you want to configure which groups of metrics will be collected by the Analytics Engine and how frequently they are collected.\n\n>The setting of one or more groups would not affect any other group that is not selected. Also, previously selected settings would be retained on the device. For example, the Analytics CSP could be used to collect WWAN Performance metrics and the other groups could be set to \"Do not change\". Then at another time, the CSP could be used to collect WLAN Performance metrics and the other groups could be set to \"Do not change\". Both WWAN and WLAN Performance metrics would then be set to collect data.\n\n\n<div class=\"parm-table\">\n <table class=\"table\">\n\t<tr>\n\t\t<th>Parm Option Name</th>\n\t\t<th>Parm Value</th>\n\t\t<th>Description</th>\n\t</tr>\n  <tr>\n    <td>Do not change</td>\n    <td>\"0\"</td>\n\t<td>This value (or the absence of this parm from the XML) will cause no change to which groups of metrics are collected by the Analytics Engine or how often they are collected.</td>\n  </tr>\n  <tr>\n    <td>Configure Levels for Multiple Groups</td>\n    <td>\"1\"</td>\n\t<td>This value will allow configuration of the groups of metrics to be collected by the Analytics Engine. Each group can configured independently of other groups, but all metrics in a group must be collected or not collected as a set. If collected, all metrics in a group have the same frequency.</td>\n  </tr>\n</table>\n</div>\t\n\n####WWAN Performance\nSettable if: Group Action is \"Configure Levels for Multiple Groups\"\n\nPivotal parm: No\n\nParm name: WWANPerf\n\nDescription: \n\n>This parm allows you to control whether the Analytics Engine collects data for the metrics in the WWAN Performance Group and, if so, at what frequency.\n\n<div class=\"parm-table\">\n <table class=\"table\">\n\t<tr>\n\t\t<th>Parm Option Name</th>\n\t\t<th>Parm Value</th>\n\t\t<th>Description</th>\n\t</tr>\n  <tr>\n    <td>Do not change</td>\n    <td>\"0\"</td>\n\t<td>This value (or the absence of this parm from the XML) will cause no change to whether this group of metrics is collected by the Analytics Engine or how often it is collected.</td>\n  </tr>\n  <tr>\n    <td>None</td>\n    <td>\"1\"</td>\n\t<td>This value will cause the Analytics Engine to skip collecting data for all of the metrics in the group, meaning that data collection is disabled.</td>\n  </tr>\n  <tr>\n    <td>Low</td>\n    <td>\"2\"</td>\n\t<td>This value will cause the Analytics Engine to collect data for all of the metrics in the group at low frequency. Data is collected at a 60 minute interval.</td>\n  </tr>\n  <tr>\n    <td>Medium</td>\n    <td>\"3\"</td>\n\t<td>This value will cause the Analytics Engine to collect data for all of the metrics in the group at medium frequency. Data is collected at a 30 minute interval</td>\n  </tr>\n  <tr>\n    <td>High</td>\n    <td>\"4\"</td>\n\t<td>This value will cause the Analytics Engine to collect data for all of the metrics in the group at high frequency. Data is collected at a 10 minute interval.</td>\n  </tr>\n</table>\n</div>\n\n####WLAN Performance\nSettable if: Group Action is \"Configure Levels for Multiple Groups\"\n\nPivotal parm: No\n\nParm name: WLANPerf\n\nDescription: \n\n>This parm allows you to control whether the Analytics Engine collects data for the metrics in the WLAN Performance Group and, if so, at what frequency.\n\n<div class=\"parm-table\">\n <table class=\"table\">\n\t<tr>\n\t\t<th>Parm Option Name</th>\n\t\t<th>Parm Value</th>\n\t\t<th>Description</th>\n\t</tr>\n  <tr>\n    <td>Do not change</td>\n    <td>\"0\"</td>\n\t<td>This value (or the absence of this parm from the XML) will cause no change to whether this group of metrics is collected by the Analytics Engine or how often it is collected.</td>\n  </tr>\n  <tr>\n    <td>None</td>\n    <td>\"1\"</td>\n\t<td>This value will cause the Analytics Engine to skip collecting data for all of the metrics in the group, meaning that data collection is disabled.</td>\n  </tr>\n  <tr>\n    <td>Low</td>\n    <td>\"2\"</td>\n\t<td>This value will cause the Analytics Engine to collect data for all of the metrics in the group at low frequency. Data is collected at a 60 minute interval.</td>\n  </tr>\n  <tr>\n    <td>Medium</td>\n    <td>\"3\"</td>\n\t<td>This value will cause the Analytics Engine to collect data for all of the metrics in the group at medium frequency. Data is collected at a 30 minute interval</td>\n  </tr>\n  <tr>\n    <td>High</td>\n    <td>\"4\"</td>\n\t<td>This value will cause the Analytics Engine to collect data for all of the metrics in the group at high frequency. Data is collected at a 10 minute interval.</td>\n  </tr>\n</table>\n</div>\t\n\n####Battery and CPU Status\nSettable if: Group Action is \"Configure Levels for Multiple Groups\"\n\nPivotal parm: No\n\nParm name: SmartBattery\n\nDescription: \n\n>This parm allows you to control whether the Analytics Engine collects data for the metrics in the Battery and CPU Status Group and, if so, at what frequency.\n\n<div class=\"parm-table\">\n <table class=\"table\">\n\t<tr>\n\t\t<th>Parm Option Name</th>\n\t\t<th>Parm Value</th>\n\t\t<th>Description</th>\n\t</tr>\n  <tr>\n    <td>Do not change</td>\n    <td>\"0\"</td>\n\t<td>This value (or the absence of this parm from the XML) will cause no change to whether this group of metrics is collected by the Analytics Engine or how often it is collected.</td>\n  </tr>\n  <tr>\n    <td>None</td>\n    <td>\"1\"</td>\n\t<td>This value will cause the Analytics Engine to skip collecting data for all of the metrics in the group, meaning that data collection is disabled.</td>\n  </tr>\n  <tr>\n    <td>Low</td>\n    <td>\"2\"</td>\n\t<td>This value will cause the Analytics Engine to collect data for all of the metrics in the group at low frequency. Data is collected at a 60 minute interval.</td>\n  </tr>\n  <tr>\n    <td>Medium</td>\n    <td>\"3\"</td>\n\t<td>This value will cause the Analytics Engine to collect data for all of the metrics in the group at medium frequency. Data is collected at a 30 minute interval</td>\n  </tr>\n  <tr>\n    <td>High</td>\n    <td>\"4\"</td>\n\t<td>This value will cause the Analytics Engine to collect data for all of the metrics in the group at high frequency. Data is collected at a 10 minute interval.</td>\n  </tr>\n</table>\n</div>\n\n####System Information\nSettable if: Group Action is \"Configure Levels for Multiple Groups\"\n\nPivotal parm: No\n\nParm name: SystemInfo\n\nDescription: \n\n>This parm allows you to control whether the Analytics Engine collects data for the metrics in the System Information Group and, if so, at what frequency.\n\n<div class=\"parm-table\">\n <table class=\"table\">\n\t<tr>\n\t\t<th>Parm Option Name</th>\n\t\t<th>Parm Value</th>\n\t\t<th>Description</th>\n\t</tr>\n  <tr>\n    <td>Do not change</td>\n    <td>\"0\"</td>\n\t<td>This value (or the absence of this parm from the XML) will cause no change to whether this group of metrics is collected by the Analytics Engine or how often it is collected.</td>\n  </tr>\n  <tr>\n    <td>None</td>\n    <td>\"1\"</td>\n\t<td>This value will cause the Analytics Engine to skip collecting data for all of the metrics in the group, meaning that data collection is disabled.</td>\n  </tr>\n  <tr>\n    <td>Low</td>\n    <td>\"2\"</td>\n\t<td>This value will cause the Analytics Engine to collect data for all of the metrics in the group at low frequency. Data is collected at a 60 minute interval.</td>\n  </tr>\n  <tr>\n    <td>Medium</td>\n    <td>\"3\"</td>\n\t<td>This value will cause the Analytics Engine to collect data for all of the metrics in the group at medium frequency. Data is collected at a 30 minute interval</td>\n  </tr>\n  <tr>\n    <td>High</td>\n    <td>\"4\"</td>\n\t<td>This value will cause the Analytics Engine to collect data for all of the metrics in the group at high frequency. Data is collected at a 10 minute interval.</td>\n  </tr>\n</table>\n</div>\t\n\n####GPS Information\nSettable if: Group Action is \"Configure Levels for Multiple Groups\"\n\nPivotal parm: No\n\nParm name: GPSInfo\n\nDescription: \n\n>This parm allows you to control whether the Analytics Engine collects data for the metrics in the GPS Information Group and, if so, at what frequency.\n\n<div class=\"parm-table\">\n <table class=\"table\">\n\t<tr>\n\t\t<th>Parm Option Name</th>\n\t\t<th>Parm Value</th>\n\t\t<th>Description</th>\n\t</tr>\n  <tr>\n    <td>Do not change</td>\n    <td>\"0\"</td>\n\t<td>This value (or the absence of this parm from the XML) will cause no change to whether this group of metrics is collected by the Analytics Engine or how often it is collected.</td>\n  </tr>\n  <tr>\n    <td>None</td>\n    <td>\"1\"</td>\n\t<td>This value will cause the Analytics Engine to skip collecting data for all of the metrics in the group, meaning that data collection is disabled.</td>\n  </tr>\n  <tr>\n    <td>Low</td>\n    <td>\"2\"</td>\n\t<td>This value will cause the Analytics Engine to collect data for all of the metrics in the group at low frequency. Data is collected at a 60 minute interval.</td>\n  </tr>\n  <tr>\n    <td>Medium</td>\n    <td>\"3\"</td>\n\t<td>This value will cause the Analytics Engine to collect data for all of the metrics in the group at medium frequency. Data is collected at a 30 minute interval</td>\n  </tr>\n  <tr>\n    <td>High</td>\n    <td>\"4\"</td>\n\t<td>This value will cause the Analytics Engine to collect data for all of the metrics in the group at high frequency. Data is collected at a 10 minute interval.</td>\n  </tr>\n</table>\n</div>\n\n## Feature Compatibility\n\n<iframe src=\"compare.html#mx=4.3&csp=AnalyticsMgr&os=JB&embed=true\"></iframe> "},{"key":"guide-csp-app","name":" AppMgr","md":"# AppMgr\n\n## About AppMgr\n\n### Overview\n\nThe AppMgr Feature Type allows you manage the set of user applications that are installed on the device. On consumer Android devices, application management requires a device user to interact with UI presented on the device. In scenarios where a device is being managed by an MDM, it is often important for the MDM to tightly control which user applications are installed, without the need to involve a device user and without the consent or approval of a device user. The primary purpose of the AppMgr Feature Type is to manage user applications programmatically and silently. This enables an MDM to take full control of the set of user applications that are installed on the device.\n\nThe AppMgr Feature Type allows you to Install, Uninstall, Upgrade, and Turn On and Off the launching of applications. It also allows you to designate an application as the Default Launcher, which is the application that is invoked when the device user presses the HOME Key, and perform other tasks related to the management of applications.\n\nWhen considering the capabilities of the AppMgr Feature Type, it is important to understand that applications can be divided into two classes: System applications and User applications. System applications are those applications that are built-into the device and hence are always installed. User applications are those applications that are not built-into the device and hence must be installed onto a device before they can be used. Some functions of the AppMgr Feature Type apply only to System applications, some apply only to User applications, and some apply to both. Each function will identify the classes of applications to which it applies.\n\n### Main Functionality\n\n* Install, Uninstall, and Upgrade User applications (with no device user involvement)\n* Set an application to be the Default Launcher\n* Turn On and Off the Launching of an application (Blacklisting)\n* Clear the Recent Application List\n* Enable and Disable Access to Application Info\n\n##Parameter Notes\n### Action\nPivotal parm: Yes\n\nDescription: \n\n>Specify the application action to perform.\n\n<div class=\"parm-table\">\n <table class=\"table\">\n\t<tr>\n\t\t<th>Parm Option Name</th>\n\t\t<th>Parm Value</th>\n\t\t<th>Description</th>\n\t</tr>\n  <tr>\n    <td>Do nothing</td>\n    <td>\"Do nothing\"</td>\n\t<td>This value (or the absence of this parm from the XML) will not make any change to the applications on the device.</td>\n  </tr>\n  <tr>\n    <td>Install</td>\n    <td>\"Install\"</td>\n\t<td><p>This value will cause a User application contained within an APK file in the specified path on the device to be Installed on the device. If for any reason the requested application cannot be installed, then an error will be returned in the Result XML document.</p><p><b>Note:</b> If an attempt is made to install an application with the same Package Name as an application that is already installed on the device, then an error will be returned in the Result XML document. To replace an application that is already installed on the device with a different version with the same Package Name, use the value \"Upgrade\" instead.</p>\n  </tr>\n  <tr>\n    <td>Uninstall</td>\n    <td>\"Uninstall\"</td>\n\t<td><p>This value will cause a User application with the specified Package Name to be Uninstalled from the device. If for any reason the requested application cannot be uninstalled, then an error will be returned in the Result XML document.</p>\n\t\n\t<p><b>Note:</b> If no User application with the specified Package Name is installed on the device then an error will be returned in the Result XML document.</p>\n\t\n\t<p><b>Note:</b> When an application is Uninstalled, data that is stored in sandbox areas owned by that application will be automatically removed. If the application is later Installed again, it will need to recreate such data.</p>\n\t\n\t</td>\t\n  </tr>\n  <tr>\n    <td>Upgrade</td>\n    <td>\"Upgrade\"</td>\n\t<td>\n\t<p>This value will cause a User application contained within an APK file in the specified path on the device to Upgrade another version of the application with the same Package Name that is already on the device. If for any reason the requested application cannot be upgraded, then an error will be returned in the Result XML document.</p>\n\t\n\t<p><b>Note:</b> If an attempt is made to upgrade an application with a Package Name that does not match any Package Names that are on the device already, then an error will be returned in the Result XML document. To install an application that is not already installed on the device, use the value \"Install\" instead.</p>\n\t\n\t<p><b>Note:</b> When an application is upgraded, the data for that application is maintained. This allows the new version of the application to access (and possibly convert) data created by the old version.</p>\n\n\t<p><b>Note:</b> In devices running the Jelly Bean version of Android, an Upgrade can replace any version of an application with any other version of the same application. However, in devices running the KitKat or higher version of Android, an Upgrade can only replace an application with a higher (numerically greater) version of the same application. This change was made to reduce issues where an older version of an application maybe unable to understand data produced by a newer version.</p>\n\t</td>\n  </tr>\n  <tr>\n    <td>Set as Default Launcher</td>\n    <td>\"SetDefaultLauncher\"</td>\n\t<td>This value will cause the application with the specified Package Name to be made the new Default Launcher. The specified application must already be installed on the device and generally should be designed to be a Launcher, per relevant Android documentation. If no application with the specified Package Name is installed on the device then an error will be returned in the Result XML document.</td>\n  </tr>\n  <tr>\n    <td>Enable Application</td>\n    <td>\"EnableApplication\"</td>\n\t<td>This value will cause the System application with the specified Package Name to be Enabled, and therefore will allow it to be launched. If no System application with the specified Package Name is built-into the device then an error will be returned in the Result XML document.</td>\n  </tr>\n  <tr>\n    <td>Disable Application</td>\n    <td>\"DisableApplication\"</td>\n\t<td>This value will cause the System application with the specified Package Name to be Disabled, and therefore will prevent it from being launched. If no System application with the specified Package Name is built-into the device then an error will be returned in the Result XML document.</td>\n  </tr>\n  <tr>\n    <td>Clear Recent Apps List</td>\n    <td>\"ClearRecentApps\"</td>\n\t<td>This value will cause the Android Recent Applications List, which allows a user to see and launch apps that have recently been used, to be cleared.</td>\n  </tr>\n</table>\n</div>\t\n\n####APK Path and Name\nSettable if: The Action is \"Install\" or \"Upgrade\"\n\nPivotal parm: No\n\nParm name: APK\n\nDescription: \n\n>Provide the path and name of the Android application APK file within the device file system that will be installed or upgraded.\n\n>**Note:** An APK file can only be used to Install a User application because any application being installed from an APK file is not built-into the device and is therefore, by definition, a User Application. But an APK could be used to Upgrade either a System application or a User application. In order for any Upgrade to work, the APK file must be signed with the same developer certificate as the application it is trying to replace. If the APK file is not signed with the same developer certificate then an error will be returned in the Result XML document. This means that a System application can only be replaced using an APK file produced by the same developer that produced the built-in System application. If a System application is successfully Upgraded using an APK, the new version of the application is granted the same permissions as the version that was replaced. This allows the new version of the application to successfully perform the same operations as the original System application even though it is actually a User application. Since the new version is not built-into the device the device will revert to the old built-in version of the application whenever data is cleared.\n\nParm value input rules: \n\n* String containing the full path and name of an APK that resides on the device. For example, '/storage/sdcard1/Herald.apk'.\n* The minimum length is 1 character and the maximum length is 255 characters\n\n####Package Name\nSettable if: The Action is \"Uninstall\", \"Set as Default Launcher\", \"Enable Application\", or \"Disable Application\"\n\n**Note:** To perform the above listed Actions on an application, the Package Name of that application must be known and specified. The Package Name can be acquired from the application developer, by looking up the Package Name on a device, or using developer tools to extract the Package Name from the APK file.\n\nPivotal parm: No\n\nParm name: Package\n\nDescription: \n\n>Provide the Package Name of the application for the application action.\n\nParm value input rules: \n\n* String containing the valid name of the package. For example, 'com.mycompany.mypackage'.\n* The minimum length is 1 character and the maximum length is 255 characters\n* The package names must be separated by commas\n\n### Protected List Action\nPivotal parm: Yes\n\nDescription: \n\n>The Protected List is a feature that allows certain applications to be exempted from certain constraints that are imposed on applications when Multi-User Mode is enabled. In particular, applications whose Package Names are on the Protected List will:\n\n>* Be allowed to launch when no device user is logged in\n>* Not be terminated when a device user logs out\n>* Have only one copy of its data for all users, even if Multi-User Data Separation is enabled\n\n>**Note:** Multi-User Mode is supported on all Zebra Android devices that support Zebra MX functionality, but the AccessMgr Feature Type currently does not support enabling Multi-User Mode. Multi-User Mode can be enabled on devices that support it, but only using unsupported tools or mechanisms that do not scale to large deployments. For this reason, the ability to use the AppMgr Feature Type to manage the Protected List may provide little or no immediate benefit. In the future, when the AccessMgr Feature Type is enhanced to support enabling Multi-User Mode, the ability to use the AppMgr Feature Type to manage the Protected List will likely be more meaningful.\n\n<div class=\"parm-table\">\n <table class=\"table\">\n\t<tr>\n\t\t<th>Parm Option Name</th>\n\t\t<th>Parm Value</th>\n\t\t<th>Description</th>\n\t</tr>\n  <tr>\n    <td>Do nothing</td>\n    <td>\"Do nothing\"</td>\n\t<td>This value (or the absence of this parm from the XML) will not cause any changes to the Protected List.</td>\n  </tr>\n  <tr>\n    <td>Add Application to Protected List</td>\n    <td>\"AddAppToProtectedList\"</td>\n\t<td>This value will cause the Package Name of an application to be Added to the Protected List.</td>\n  </tr>\n  <tr>\n    <td>Remove Application from Protected List</td>\n    <td>\"RemoveAppFromProtectedList\"</td>\n\t<td>This value will cause the Package Name of an application to be Removed from the Protected List.</td>\n  </tr>\n  <tr>\n    <td>Remove All Application from Protected List</td>\n    <td>\"ClearProtectedList\"</td>\n\t<td>This value will cause all Package Names to be Removed from the Protected List.</td>\n  </tr>\n</table>\n</div>\t\n\n####Package Name\nSettable if: The Protected List Action is \"Add Application to Protected List\" or \"Remove Application from Protected List\"\n\nPivotal parm: No\n\nParm name: ProtectedListPackage\n\nDescription: \n\n>Provide the Package Name of the application that should be Added to or Removed from the Protected List.\n\nParm value input rules: \n\n* String containing the valid name of the package. For example, 'com.mycompany.mypackage'.\n* The minimum length is 1 character and the maximum length is 255 characters\n* The package names must be separated by commas\n\n### Access to App Info Action\n\nPivotal parm: No\n\nParm name: AccessAppInfoAction\n\nDescription: \n\n>Since the AppMgr Feature Type allows control of which applications are installed, it may be of concern that a device user can use the App Info section of the in-device System Settings Menu to impact an installed application.  A device user might terminate an application (Force Stop), remove application data (Clear Data), etc.  A device user might also Uninstall the application completely.  If an MDM is being used to tightly control the set of installed applications on a device, such activities by a device user might be undesirable.\n\n>This may be compounded by the fact that the App Info section of the System Settings Menu may be reached from a variety of places in the device UI, not just from the main System Settings Menu.  For example, App Info can be reached for an application from the Android Recent Applications List or from a notification related to the application in the Android Notification Area.\n\n>To prevent device users from using App Info to alter the configured set of installed applications, it may be desirable to prevent the device user from accessing App Info altogether.  Of course, you could use the AppMgr Feature Type to disable launching of the System Settings Menu application, which would prevent access to App Info.  But that would also prevent access to all other aspects of the System Settings Menu.  A more targeted approach would be to block only App Info.\n\n>This allows you to enable or disable all access to App Info for all applications without blocking access to other parts of the System Settings Menu.  By disabling App Info, you can prevent the device user from getting to App Info and using it to interfere with the configured set of installed applications.\n\n>**Note:** This parm is supported only on devices that are running the Kit Kat version of Android.  This is because this parm depends on modifications made to the System Settings Menu application, and those modifications are found only on Kit Kat devices.\n\n<div class=\"parm-table\">\n <table class=\"table\">\n\t<tr>\n\t\t<th>Parm Option Name</th>\n\t\t<th>Parm Value</th>\n\t\t<th>Description</th>\n\t</tr>\n  <tr>\n    <td>Do nothing</td>\n    <td>\"Do nothing\"</td>\n\t<td>This value (or the absence of this parm from the XML) will cause no changes to be made.</td>\n  </tr>\n  <tr>\n    <td>Enable Access to App Info for all applications</td>\n    <td>\"EnableAccessAllInfo\"</td>\n\t<td>This value will cause access to App Info to be enabled if access to the System Settings Menu application is enabled.</td>\n  </tr>\n  <tr>\n    <td>Disable Access to App Info for all applications</td>\n    <td>\"DisableAccessAllInfo\"</td>\n\t<td>This value will cause all access to App Info to be disabled.</td>\n  </tr>\n</table>\n</div>\t\n\n\n## Example XML\n###Install An Application\n\t:::xml\n\t<!-- Silently install Clock.apk from the /enterprise/usr/persist folder -->\n\t<wap-provisioningdoc>\n\t\t<characteristic version=\"4.2\" type=\"AppMgr\">\n\t\t\t<parm name=\"Action\" value=\"Install\" />\n\t\t\t<parm name=\"APK\" value=\"/enterprise/usr/persist/Clock.apk\" />\n\t\t</characteristic>\n\t</wap-provisioningdoc>\n\n\n###Upgrade An Application\n\t:::xml\n\t<!-- Silently upgrade Clock.apk from the /enterprise/usr/persist folder -->\n\t<wap-provisioningdoc>\n\t\t<characteristic type=\"AppMgr\" version=\"4.2\" >\n\t\t\t<parm name=\"Action\" value=\"Upgrade\"/>\n\t\t\t<parm name=\"APK\" value=\"/enterprise/usr/persist/Clock.apk\"/>\n\t\t</characteristic>\n\t</wap-provisioningdoc>\n\n###Disable An Application\n\t:::XML\n\t<wap-provisioningdoc>\n\t\t<characteristic version=\"4.2\" type=\"AppMgr\">\n\t\t\t<parm name=\"Action\" value=\"DisableApplication\" />\n\t\t\t<parm name=\"Package\" value=\"com.mypackagename\" />\n\t\t</characteristic>\n\t</wap-provisioningdoc>\n\n###Uninstall An Application\n\t:::XML\n\t<wap-provisioningdoc>\n\t\t<characteristic version=\"4.2\" type=\"AppMgr\">\n\t\t\t<parm name=\"Action\" value=\"Uninstall\" />\n\t\t\t<parm name=\"Package\" value=\"com.packagename\" />\n\t\t</characteristic>\n\t</wap-provisioningdoc>\n\n###Start An Application After Installing it\n\t:::XML\n\t<wap-provisioningdoc>\n\t\t<characteristic version=\"4.2\" type=\"AppMgr\">\n\t\t\t<parm name=\"Action\" value=\"Install\" />\n\t\t\t<parm name=\"APK\" value=\"/sdcard/myapp.apk\" />\n\t\t</characteristic>\n\t\t<characteristic version=\"4.3\" type=\"Intent\">\n\t\t\t<parm name=\"Action\" value=\"StartActivity\" />\n\t\t\t<parm name=\"ActionName\" value=\"android.intent.action.MAIN\" />\n\t\t\t<parm name=\"Package\" value=\"com.mypackage\" />\n\t\t\t<parm name=\"Class\" value=\"com.mypackage.myactivity\" />\n\t\t</characteristic>\n\t</wap-provisioningdoc>\n\n\t\n## Feature Compatibility\n\n<iframe src=\"compare.html#mx=4.3&csp=AppMgr&os=JB&embed=true\"></iframe> "},{"key":"guide-csp-audiovoluimgr","name":" AudioVolUIMgr","md":"# AudioVolUIMgr\n\n## About AudioVolUIMgr\n\n### Overview\nMany Zebra Android devices contains a Zebra Audio Volume Control UI (ZVC) that allows a device user to adjust the volumes of various Audio Streams in the device. An Audio Stream is a channel via which audio can generated and physically output (e.g. to a speaker, headset, etc.). The number of Audio Streams that can be supported by an Android device is generally fixed. But the number of possible purposes for which audio could be generated is theoretically unlimited. As a result, a particular Audio Stream might be used for a purpose other than that for which that Audio Stream is normally used in Android or a given Audio Stream might need to be used for multiple purposes.\n\nThe standard Android Audio Volume Control UI identifies each Audio Stream that can be controlled in a fixed manner that is predefined for each Audio Stream. Such identification might or might not accurately reflect the actual purposes for which a given Audio Stream is being used. This can produce a less than optimal user experience since the device user might change the volume of an Audio Stream without realizing what it might affect.\n\nThe ZVC allows configuration of the manner in which Audio Streams are identified to the device user, thus allowing the user experience to be customized. The ZVC also provides even more control over the user experience by allowing configuration of the minimum, maximum, and preset values for a given Audio Stream. For example, the minimum volume for an Audio Stream could be set greater than zero to prevent a device user from turning it off completely and potentially missing important audio notifications that are performed on that Audio Stream.\n\nThe ZVC also provides support for Audio Profiles which define different scenarios or use cases in which one or more Audio Streams can be used. Each Audio Profile can configure the behavior of ZVC for some or all of the available Audio Streams. By selecting a defined Audio Profile, the configuration of ZVC for multiple Audio Streams can be configured in a single operation. For example, there might be one Audio Profile for working in a quiet office and another for working in a noisy warehouse.\n\nThe AudioVolUIMgr Feature Type allows you to add, delete, and replace Audio Profiles and to select the current Audio Profile that will be in effect on the device. It also allows you to modify the \"Factory Preset\" Audio Profile, which cannot be deleted. The AudioVolUIMgr Feature Type also allows you to directly control the Mute and Vibrate states of the device, which are independent of all Audio Streams and Audio Profiles.\n\nThe ZVC can be invoked by a device user by pressing the physical volume control buttons on a device (when available) or by selecting the Sound->Volumes screen from the Android System Settings Menu. The UI presented by the ZVC when it is invoked by the device user will be determined based on the most recent configuration applied to ZVC using the AudioVolUIMgr Feature Type, in particular the set of defined Audio Profiles and the currently selected Audio Profile. The following Audio Streams are supported:\n\n* STREAM_MUSIC - The Android audio stream typically used for music playback.\n* STREAM_RING - The Android audio stream typically used for the incoming call notification.\n* STREAM_NOTIFICATION - The Android audio stream typically used for other notifications.\n* STREAM_SYSTEM - The Android audio stream for typically used by system sounds.\n* STREAM_ALARM - The Android audio stream typically used for alarms.\n* STREAM_VOICE_CALL - The Android audio stream typically used for phone calls.\n* Decode Beep Virtual Volume Scale - This is a special stream used on Zebra devices to produce an audible notification for barcode scanning.\n\nAn Audio Profile can be defined to configure the following settings for any or all of the above Audio Streams:\n\n* Label - The text label. This will be displayed by the ZVC to visually identify the Audio Stream to the device user.\n* Icon - The graphical icon. This will be displayed by the ZVC to visually identify the Audio Stream to the device user.\n* Visibility - This will control whether the ZVC will allow the device user to view and modify the volume settings for the Audio Stream. For example, this could be used to prevent a device user from making any changes to the volume of the Audio Stream used for incoming call notification.\n\nAn Audio Profile can also configure the volume levels for each of four audio modes: Speaker, Receiver, Wired headset, and Bluetooth headset. The specified modes are determined based on the physical output path to which an Audio Stream is directed. For each mode, the following volume levels can be specified.\n\n* Minimum volume level - This will cause the ZVC to prevent a device user from changing the volume of the Audio Stream to a value that is below the specified value. For example, this could be used to prevent the user from setting the Audio Stream used for notifications too low in noisy environments.\n* Maximum volume level - This will cause the ZVC to prevent a device user from changing the volume of the Audio Stream to a value that is above the specified value. For example, this could be used to prevent the user from setting the Audio Stream used for music playback too high in quiet environments.\n* Preset volume level - This will cause the ZVC to set the volume of the Audio Stream to the specified value when this Audio Profile becomes selected as the current Audio Profile.\n\n>**Note:** The ZVC is only available on selected Zebra Android devices running the Kit Kat version of Android, as listed in the Feature Compatibility table.  Since the AudioVolUIMgr Feature Type configures the ZVC, it is only supported on Zebra Android devices that include the ZVC.\n\n### Main Functionality\n* Create a new Audio Profile\n* Delete a created Audio Profile\n* Set an Audio Profile to be the current Audio Profile\n* Set the Factory Preset Audio Profile to be the current Audio Profile\n* Change the volume levels to be the Preset volume levels of the current Audio Profile\n* Directly control the global Mute and Vibrate states of the device\n\n##Parameter Notes\n###Mute/Vibrate State\nPivotal parm: No\n\nParm name: MuteVibrateState\n\nDescription: \n\n>Select whether to mute the device, set the device to vibrate, or unmute the device.\n\n<div class=\"parm-table\">\n <table class=\"table\">\n\t<tr>\n\t\t<th>Parm Option Name</th>\n\t\t<th>Parm Value</th>\n\t\t<th>Description</th>\n\t</tr>\n  <tr>\n    <td>Do not change</td>\n    <td>\"0\"</td>\n\t<td>This value (or the absence of this parm from the XML) will make no changes to the Mute and Vibrate states of the device.</td>\n  </tr>\n  <tr>\n    <td>Mute - Turn off audible sounds</td>\n    <td>\"1\"</td>\n\t<td>This value will cause the global Mute state of the device to be enabled, thus silencing the output of all Audio Streams.</td>\n  </tr>\n  <tr>\n    <td>Vibrate - Turn off audible sounds and turn on vibrate</td>\n    <td>\"2\"</td>\n\t<td>This value will cause the global Mute and Vibrate states of the device to be enabled, thus silencing the output of all Audio Streams and enabling haptic feedback (vibrate).</td>\n  </tr>\n  <tr>\n    <td>UnMute - Turn on audible sounds</td>\n    <td>\"3\"</td>\n\t<td>This value will cause the global Mute and Vibrate states of the device to be disabled, thus re-enabling the output of all Audio Streams and disabling haptic feedback (vibrate).</td>\n  </tr>\n</table>\n</div>\t\n\n###Current Active Profile Action\nPivotal parm: Yes\n\nDescription: \n\n>This parm is used to set a previously-created Audio Profile or the Factory Preset Audio Profile to be the current Audio Profile. It can also be used to force the volumes of all Audio Streams back to the Preset volumes specified for the current Audio Profile.\n\n<div class=\"parm-table\">\n <table class=\"table\">\n\t<tr>\n\t\t<th>Parm Option Name</th>\n\t\t<th>Parm Value</th>\n\t\t<th>Description</th>\n\t</tr>\n  <tr>\n    <td>Do nothing</td>\n    <td>\"0\"</td>\n\t<td>This value (or the absence of this parm from the XML) will cause no change to the currently selected Audio Profile or the volume levels of any Audio Streams.</td>\n  </tr>\n  <tr>\n    <td>Set an Audio UI Profile as the current Profile</td>\n    <td>\"1\"</td>\n\t<td>This value will cause a previously-created named Audio Profile to be made the new current Audio Profile.</td>\n  </tr>\n  <tr>\n    <td>Adjust to the Preset volume level of the current Profile</td>\n    <td>\"2\"</td>\n\t<td>This value will cause no change to the currently selected Audio Profile but will cause the volume levels of all Audio Streams to be reset to the Preset volume levels configured for the current Audio Profile.</td>\n  </tr>\n  <tr>\n    <td>Set the FactoryPreset Profile as the current Profile</td>\n    <td>\"3\"</td>\n\t<td><p>This value will cause the Factory Preset Audio Profile to be made the new current Audio Profile.</p><p><b>Note:</b> Since the configuration of the Factory Preset Audio Profile may have been modified, this may not always result in \"Factory Defined\" settings.</p></td>\n  </tr>\n</table>\n</div>\t\n\n####Name of the Current Audio UI Profile\nSettable if: The Current Active Profile Action is \"Set an Audio UI Profile as the current Profile\"\n\nPivotal parm: No\n\nParm name: CurrentProfileName\n\nDescription: \n\n>This parm specifies the name of the previously-created Audio Profile that will be set as the new current Audio Profile. If the specified name does not match the name of a currently defined Audio Profile, then an error will be returned in the Result XML document.\n\nParm value input rules: \n\n* String that has a minimum size of 1 character and a maximum size of 255 characters\n\n####Adjust current audio volume\nSettable if: The Current Active Profile Action is \"Set an Audio UI Profile as the current Profile\"\n\nPivotal parm: No\n\nParm name: SetCurrentProfileOption\n\nDescription: \n\n>This parm specifies whether the current volume levels of all Audio Streams affected by the Audio Profile should be set to the Preset volume levels of that Audio Profile.\n\n<div class=\"parm-table\">\n <table class=\"table\">\n\t<tr>\n\t\t<th>Parm Option Name</th>\n\t\t<th>Parm Value</th>\n\t\t<th>Description</th>\n\t</tr>\n  <tr>\n    <td>Do not adjust the volume level</td>\n    <td>\"1\"</td>\n\t<td><p>This value will cause the Preset volume levels specified for all Audio Streams in the new current Audio Profile to be ignored.</p><p>If the current volume level of an Audio Stream is less than the minimum, then it will be changed to the minimum and if the current volume level of an Audio Stream is greater than the minimum, then it will be changed to the maximum.  Otherwise, the current volume level of an Audio Stream will be unchanged.</p></td>\n  </tr>\n  <tr>\n    <td>Adjust the volume level</td>\n    <td>\"2\"</td>\n\t<td><p>This value will cause the Preset volume levels specified for all Audio Streams in the new Audio Profile to be made the new current volumes for those Audio Streams.</p><p>This option ensures that a specific set of volumes will be in effect after setting a new current Audio Profile. This should be used with caution since it could have a noticeable impact on current or future audio output.</p></td>\n  </tr>\n</table>\n</div>\t\n\n###Audio UI Profile Action\nPivotal parm: Yes\n\nDescription: \n\n>This parm allows you to Create a new Audio Profile, Modify a previously created Audio Profile, Modify the Factory Present Audio Profile, or Delete a previously-created Audio Profile.\n\n<div class=\"parm-table\">\n <table class=\"table\">\n\t<tr>\n\t\t<th>Parm Option Name</th>\n\t\t<th>Parm Value</th>\n\t\t<th>Description</th>\n\t</tr>\n  <tr>\n    <td>Do nothing</td>\n    <td>\"0\"</td>\n\t<td>This value (or the absence of this parm from the XML) will cause no change to the set of defined Audio Profiles or the Factory Preset Audio Profile.</td>\n  </tr>\n  <tr>\n    <td>Add an Audio UI Profile</td>\n    <td>\"1\"</td>\n\t<td><p>This value will cause a new Audio Profile to be created, a previously created Audio Profile to be modified, or the Factory Preset Audio Profile to be modified.</p><p><b>Note:</b> If an Audio Profile with the specified name exists in the device, then it will be replaced by the new definition.</p></td>\n  </tr>\n  <tr>\n    <td>Remove an Audio UI Profile</td>\n    <td>\"2\"</td>\n\t<td><p>This value will cause a previously-created Audio Profile to be deleted.</p><p><b>Note:</b> If no Audio Profile with the specified name exists in the device, then an error will be returned in the Result XML document.</p>\n</td>\n  </tr>\n</table>\n</div>\t\n\n####Name of the Audio UI Profile\nSettable if: The Audio UI Profile Action is \"Add an Audio UI Profile\" or \"Remove an Audio UI Profile\"\n\nPivotal parm: No\n\nParm name: ProfileName\n\nDescription: \n\n>This parm specifies the name of the Audio Profile that will be Created, Modified, or Deleted. This name must be the same name supplied for the parm CurrentProfileName when setting an Audio Profile to be the new current Audio Profile.\n\n>**Note:** This value cannot be \"FactoryPreset\" since this is a reserved name for the FactoryPreset Profile that is built into the device.\n\nParm value input rules: \n\n* String that has a minimum size of 1 character and a maximum size of 255 characters\n\n####UI Label of STREAM_MUSIC\nSettable if: The Audio UI Profile Action is \"Add an Audio UI Profile\"\n\nPivotal parm: No\n\nParm name: STREAM_MUSIC_Label\n\nDescription: \n\n>This parm allows you to set a customized label that the ZVC will display to visually identify the Audio Stream that is typically used for music playback. \n\n>**Note:** If the value of this parm is empty (a length of 0), then no customized label will be specified for the Audio Stream. This will cause ZVC to display not label the Audio Stream.\n\nParm value input rules: \n\n* String that has a minimum size of 0 character and a maximum size of 255 characters\n\n####UI Icon of STREAM_MUSIC \nSettable if: The Audio UI Profile Action is \"Add an Audio UI Profile\"\n\nPivotal parm: No\n\nParm name: STREAM_MUSIC_Icon\n\nDescription: \n\n>This parm allows you to set a customized icon that the ZVC will display to visually identify the Audio Stream that is typically used for music playback. If specified, the value must be the full path and file name of an icon file in PNG format that resides in the device file system. An icon size of 48x48 pixels is recommended. \n\n>**Note:** If the value of this parm is empty (a length of 0), or if the value provided does not reference an icon file, then no customized icon will be specified for the Audio Stream. This will cause ZVC to display the default icon defined for the Audio Stream.\n\nParm value input rules: \n\n* String that has a minimum size of 0 character and a maximum size of 255 characters\n\n####Control Parameters of STREAM_MUSIC\nSettable if: The Audio UI Profile Action is \"Add an Audio UI Profile\"\n\nPivotal parm: No\n\nParm name: STREAM_MUSIC_Ctrl\n\nDescription: \n\n>This parm allows you to control whether the ZVC allow the device user to view and modify the volume settings for the Audio Stream that is typically used for music playback. Specifying an empty (length of zero) value (or the absence of this parm from the XML) will cause no change to this Audio Stream's visibility. \n\nParm value input rules: \n\n* String that has a minimum size of 0 character and a maximum size of 255 characters\n* The value that is entered must be either \"1\", which will make the stream visible, or \"0\", which will make the Audio Stream hidden.\n\n####Minimum, Maximum and Preset Volume Level for Speaker Mode\nSettable if: The Audio UI Profile Action is \"Add an Audio UI Profile\"\n\nPivotal parm: No\n\nParm name: STREAM_MUSIC_SPK_LEVEL\n\nDescription: \n\n>This will set the minimum, maximum, and preset volume levels for the Audio Stream that is typically used for music playback when the device is in speaker mode. The user will not be able to lower or raise the volume outside of the minimum/maximum range that is set. If the music volume level was outside of this range at the time that this range is set, then the volume of this stream will be equal to the minimum or maximum level depending on whether it was below or above this volume range.\n\n>The preset volume level is a third volume level that must be greater than or equal to the minimum volume level and less than or equal to the maximum volume level. If the preset volume is outside of the minimum/maximum range, then this value will be be equal to the minimum or maximum level depending on whether it was below or above this volume range. This will be used by the SetCurrentProfileOption feature to adjust the volume of the Audio Stream that is typically used for music playback to this set level. \n\n>Specifying an empty (length of zero) value (or the absence of this parm from the XML) will cause no change to the volume levels.\n\nParm value input rules: \n\n* String that contains the minimum, maximum, and preset volumes in this order and separated by commas. For example, \"1,5,3\"\n* The volume levels must be positive integers that are less than 256.\n\n####Minimum, Maximum and Preset Volume Level for Receiver Mode\nSettable if: The Audio UI Profile Action is \"Add an Audio UI Profile\"\n\nPivotal parm: No\n\nParm name: STREAM_MUSIC_RCVR_LEVEL\n\nDescription: \n\n>This will set the minimum, maximum, and preset volume levels for the Audio Stream that is typically used for music playback when the device is in receiver mode. The user will not be able to lower or raise the volume outside of the minimum/maximum range that is set. If the music volume level was outside of this range at the time that this range is set, then the volume of this stream will be equal to the minimum or maximum level depending on whether it was below or above this volume range.\n\n>The preset volume level is a third volume level that must be greater than or equal to the minimum volume level and less than or equal to the maximum volume level. If the preset volume is outside of the minimum/maximum range, then this value will be be equal to the minimum or maximum level depending on whether it was below or above this volume range. This will be used by the SetCurrentProfileOption feature to adjust the volume of the Audio Stream that is typically used for music playback to this set level. \n\n>Specifying an empty (length of zero) value (or the absence of this parm from the XML) will cause no change to the volume levels.\n\nParm value input rules: \n\n* String that contains the minimum, maximum, and preset volumes in this order and separated by commas. For example, \"1,5,3\"\n* The volume levels must be positive integers that are less than 256.\n\n####Minimum, Maximum and Preset Volume Level for Wired Headset Mode\nSettable if: The Audio UI Profile Action is \"Add an Audio UI Profile\"\n\nPivotal parm: No\n\nParm name: STREAM_MUSIC_WHS_LEVEL\n\nDescription: \n\n>This will set the minimum, maximum, and preset volume levels for the Audio Stream that is typically used for music playback when the device is in wired headset mode. The user will not be able to lower or raise the volume outside of the minimum/maximum range that is set. If the music volume level was outside of this range at the time that this range is set, then the volume of this stream will be equal to the minimum or maximum level depending on whether it was below or above this volume range.\n\n>The preset volume level is a third volume level that must be greater than or equal to the minimum volume level and less than or equal to the maximum volume level. If the preset volume is outside of the minimum/maximum range, then this value will be be equal to the minimum or maximum level depending on whether it was below or above this volume range. This will be used by the SetCurrentProfileOption feature to adjust the volume of the Audio Stream that is typically used for music playback to this set level. \n\n>Specifying an empty (length of zero) value (or the absence of this parm from the XML) will cause no change to the volume levels.\n\nParm value input rules: \n\n* String that contains the minimum, maximum, and preset volumes in this order and separated by commas. For example, \"1,5,3\"\n* The volume levels must be positive integers that are less than 256.\n\n####Minimum, Maximum and Preset Volume Level for Bluetooth Headset Mode\nSettable if: The Audio UI Profile Action is \"Add an Audio UI Profile\"\n\nPivotal parm: No\n\nParm name: STREAM_MUSIC_BTHS_LEVEL\n\nDescription: \n\n>This will set the minimum, maximum, and preset volume levels for the Audio Stream that is typically used for music playback when the device is in bluetooth headset mode mode. The user will not be able to lower or raise the volume outside of the minimum/maximum range that is set. If the music volume level was outside of this range at the time that this range is set, then the volume of this stream will be equal to the minimum or maximum level depending on whether it was below or above this volume range.\n\n>The preset volume level is a third volume level that must be greater than or equal to the minimum volume level and less than or equal to the maximum volume level. If the preset volume is outside of the minimum/maximum range, then this value will be be equal to the minimum or maximum level depending on whether it was below or above this volume range. This will be used by the SetCurrentProfileOption feature to adjust the volume of the Audio Stream that is typically used for music playback to this set level. \n\n>Specifying an empty (length of zero) value (or the absence of this parm from the XML) will cause no change to the volume levels.\n\nParm value input rules: \n\n* String that contains the minimum, maximum, and preset volumes in this order and separated by commas. For example, \"1,5,3\"\n* The volume levels must be positive integers that are less than 256.\n\n####UI Label of STREAM_RING\nSettable if: The Audio UI Profile Action is \"Add an Audio UI Profile\"\n\nPivotal parm: No\n\nParm name: STREAM_RING_Label\n\nDescription: \n\n>This parm allows you to set a customized label that the ZVC will display to visually identify the Audio Stream that is typically used for the incoming call notification. \n\n>**Note:** If the value of this parm is empty (a length of 0), then no customized label will be specified for the Audio Stream. This will cause ZVC to display not label the Audio Stream.\n\nParm value input rules: \n\n* String that has a minimum size of 0 character and a maximum size of 255 characters\n\n####UI Icon of STREAM_RING\nSettable if: The Audio UI Profile Action is \"Add an Audio UI Profile\"\n\nPivotal parm: No\n\nParm name: STREAM_RING_Icon\n\nDescription: \n\n>This parm allows you to set a customized icon that the ZVC will display to visually identify the Audio Stream that is typically used for the incoming call notification. If specified, the value must be the full path and file name of an icon file in PNG format that resides in the device file system. An icon size of 48x48 pixels is recommended. \n\n>**Note:** If the value of this parm is empty (a length of 0), or if the value provided does not reference an icon file, then no customized icon will be specified for the Audio Stream. This will cause ZVC to display the default icon defined for the Audio Stream.\n\nParm value input rules: \n\n* String that has a minimum size of 0 character and a maximum size of 255 characters\n\n####Control Parameters of STREAM_RING\nSettable if: The Audio UI Profile Action is \"Add an Audio UI Profile\"\n\nPivotal parm: No\n\nParm name: STREAM_RING_Ctrl\n\nDescription: \n\n>This parm allows you to control whether the ZVC allow the device user to view and modify the volume settings for the Audio Stream that is typically used for the typically used for the incoming call notification. Specifying an empty (length of zero) value (or the absence of this parm from the XML) will cause no change to this Audio Stream's visibility. \n\nParm value input rules: \n\n* String that has a minimum size of 0 character and a maximum size of 255 characters\n* The value that is entered must be either \"1\", which will make the stream visible, or \"0\", which will make the Audio Stream hidden.\n\n####Minimum, Maximum and Preset Volume Level for Speaker Mode\nSettable if: The Audio UI Profile Action is \"Add an Audio UI Profile\"\n\nPivotal parm: No\n\nParm name: STREAM_RING_SPK_LEVEL\n\nDescription: \n\n>This will set the minimum, maximum, and preset volume levels for the Audio Stream that is typically used for the incoming call notification when the device is in speaker mode. The user will not be able to lower or raise the volume outside of the minimum/maximum range that is set. If the ring tone volume level was outside of this range at the time that this range is set, then the volume of this stream will be equal to the minimum or maximum level depending on whether it was below or above this volume range.\n\n>The preset volume level is a third volume level that must be greater than or equal to the minimum volume level and less than or equal to the maximum volume level. If the preset volume is outside of the minimum/maximum range, then this value will be be equal to the minimum or maximum level depending on whether it was below or above this volume range. This will be used by the SetCurrentProfileOption feature to adjust the volume of the Audio Stream that is typically used for the incoming call notification to this set level. \n\n>Specifying an empty (length of zero) value (or the absence of this parm from the XML) will cause no change to the volume levels.\n\nParm value input rules: \n\n* String that contains the minimum, maximum, and preset volumes in this order and separated by commas. For example, \"1,5,3\"\n* The volume levels must be positive integers that are less than 256.\n\n####Minimum, Maximum and Preset Volume Level for Receiver Mode\nSettable if: The Audio UI Profile Action is \"Add an Audio UI Profile\"\n\nPivotal parm: No\n\nParm name: STREAM_RING_RCVR_LEVEL\n\nDescription: \n\n>This will set the minimum, maximum, and preset volume levels for the Audio Stream that is typically used for the incoming call notification when the device is in receiver mode. The user will not be able to lower or raise the volume outside of the minimum/maximum range that is set. If the ring tone volume level was outside of this range at the time that this range is set, then the volume of this stream will be equal to the minimum or maximum level depending on whether it was below or above this volume range.\n\n>The preset volume level is a third volume level that must be greater than or equal to the minimum volume level and less than or equal to the maximum volume level. If the preset volume is outside of the minimum/maximum range, then this value will be be equal to the minimum or maximum level depending on whether it was below or above this volume range. This will be used by the SetCurrentProfileOption feature to adjust the volume of the Audio Stream that is typically used for the incoming call notification to this set level. \n\n>Specifying an empty (length of zero) value (or the absence of this parm from the XML) will cause no change to the volume levels.\n\nParm value input rules: \n\n* String that contains the minimum, maximum, and preset volumes in this order and separated by commas. For example, \"1,5,3\"\n* The volume levels must be positive integers that are less than 256.\n\n####Minimum, Maximum and Preset Volume Level for Wired Headset Mode\nSettable if: The Audio UI Profile Action is \"Add an Audio UI Profile\"\n\nPivotal parm: No\n\nParm name: STREAM_RING_WHS_LEVEL\n\nDescription: \n\n>This will set the minimum, maximum, and preset volume levels for the Audio Stream that is typically used for the incoming call notification when the device is in wired headset mode. The user will not be able to lower or raise the volume outside of the minimum/maximum range that is set. If the ring tone volume level was outside of this range at the time that this range is set, then the volume of this stream will be equal to the minimum or maximum level depending on whether it was below or above this volume range.\n\n>The preset volume level is a third volume level that must be greater than or equal to the minimum volume level and less than or equal to the maximum volume level. If the preset volume is outside of the minimum/maximum range, then this value will be be equal to the minimum or maximum level depending on whether it was below or above this volume range. This will be used by the SetCurrentProfileOption feature to adjust the volume of the Audio Stream that is typically used for the incoming call notification to this set level. \n\n>Specifying an empty (length of zero) value (or the absence of this parm from the XML) will cause no change to the volume levels.\n\nParm value input rules: \n\n* String that contains the minimum, maximum, and preset volumes in this order and separated by commas. For example, \"1,5,3\"\n* The volume levels must be positive integers that are less than 256.\n\n####Minimum, Maximum and Preset Volume Level for Bluetooth Headset Mode\nSettable if: The Audio UI Profile Action is \"Add an Audio UI Profile\"\n\nPivotal parm: No\n\nParm name: STREAM_RING_BTHS_LEVEL\n\nDescription: \n\n>This will set the minimum, maximum, and preset volume levels for the Audio Stream that is typically used for the incoming call notification when the device is in bluetooth headset mode mode. The user will not be able to lower or raise the volume outside of the minimum/maximum range that is set. If the ring tone volume level was outside of this range at the time that this range is set, then the volume of this stream will be equal to the minimum or maximum level depending on whether it was below or above this volume range.\n\n>The preset volume level is a third volume level that must be greater than or equal to the minimum volume level and less than or equal to the maximum volume level. If the preset volume is outside of the minimum/maximum range, then this value will be be equal to the minimum or maximum level depending on whether it was below or above this volume range. This will be used by the SetCurrentProfileOption feature to adjust the volume of the Audio Stream that is typically used for the incoming call notification to this set level. \n\n>Specifying an empty (length of zero) value (or the absence of this parm from the XML) will cause no change to the volume levels.\n\nParm value input rules: \n\n* String that contains the minimum, maximum, and preset volumes in this order and separated by commas. For example, \"1,5,3\"\n* The volume levels must be positive integers that are less than 256.\n\n####UI Label of STREAM_NOTIFICATION\nSettable if: The Audio UI Profile Action is \"Add an Audio UI Profile\"\n\nPivotal parm: No\n\nParm name: STREAM_NOTIFICATION_Label\n\nDescription: \n\n>This parm allows you to set a customized label that the ZVC will display to visually identify the Audio Stream that is typically used for other notifications. \n\n>**Note:** If the value of this parm is empty (a length of 0), then no customized label will be specified for the Audio Stream. This will cause ZVC to display not label the Audio Stream.\n\nParm value input rules: \n\n* String that has a minimum size of 0 character and a maximum size of 255 characters\n\n####UI Icon of STREAM_NOTIFICATION\nSettable if: The Audio UI Profile Action is \"Add an Audio UI Profile\"\n\nPivotal parm: No\n\nParm name: \n\nDescription: \n\n>This parm allows you to set a customized icon that the ZVC will display to visually identify the Audio Stream that is typically used for other notifications. If specified, the value must be the full path and file name of an icon file in PNG format that resides in the device file system. An icon size of 48x48 pixels is recommended. \n\n>**Note:** If the value of this parm is empty (a length of 0), then no customized label will be specified for the Audio Stream. This will cause ZVC to display not label the Audio Stream.\n\nParm value input rules: \n\n* String that has a minimum size of 0 character and a maximum size of 255 characters\n\n####Control Parameters of STREAM_NOTIFICATION\nSettable if: The Audio UI Profile Action is \"Add an Audio UI Profile\"\n\nPivotal parm: No\n\nParm name: STREAM_NOTIFICATION_Ctrl\n\nDescription: \n\n>This parm allows you to control whether the ZVC allow the device user to view and modify the volume settings for the Audio Stream that is typically used for other notifications. Specifying an empty (length of zero) value (or the absence of this parm from the XML) will cause no change to this Audio Stream's visibility. \n\nParm value input rules: \n\n* String that has a minimum size of 0 character and a maximum size of 255 characters\n* The value that is entered must be either \"1\", which will make the stream visible, or \"0\", which will make the Audio Stream hidden.\n\n####Minimum, Maximum and Preset Volume Level for Speaker Mode\nSettable if: The Audio UI Profile Action is \"Add an Audio UI Profile\"\n\nPivotal parm: No\n\nParm name: STREAM_NOTIFICATION_SPK_LEVEL\n\nDescription: \n\n>This will set the minimum, maximum, and preset volume levels for the Audio Stream that is typically used for other notifications when the device is in speaker mode. The user will not be able to lower or raise the volume outside of the minimum/maximum range that is set. If the notification volume level was outside of this range at the time that this range is set, then the volume of this stream will be equal to the minimum or maximum level depending on whether it was below or above this volume range.\n\n>The preset volume level is a third volume level that must be greater than or equal to the minimum volume level and less than or equal to the maximum volume level. If the preset volume is outside of the minimum/maximum range, then this value will be be equal to the minimum or maximum level depending on whether it was below or above this volume range. This will be used by the SetCurrentProfileOption feature to adjust the volume of the Audio Stream that is typically used for other notifications to this set level. \n\n>Specifying an empty (length of zero) value (or the absence of this parm from the XML) will cause no change to the volume levels.\n\nParm value input rules: \n\n* String that contains the minimum, maximum, and preset volumes in this order and separated by commas. For example, \"1,5,3\"\n* The volume levels must be positive integers that are less than 256.\n\n####Minimum, Maximum and Preset Volume Level for Receiver Mode\nSettable if: The Audio UI Profile Action is \"Add an Audio UI Profile\"\n\nPivotal parm: No\n\nParm name: STREAM_NOTIFICATION_RCVR_LEVEL\n\nDescription: \n\n>This will set the minimum, maximum, and preset volume levels for the Audio Stream that is typically used for other notifications when the device is in receiver mode. The user will not be able to lower or raise the volume outside of the minimum/maximum range that is set. If the notification volume level was outside of this range at the time that this range is set, then the volume of this stream will be equal to the minimum or maximum level depending on whether it was below or above this volume range.\n\n>The preset volume level is a third volume level that must be greater than or equal to the minimum volume level and less than or equal to the maximum volume level. If the preset volume is outside of the minimum/maximum range, then this value will be be equal to the minimum or maximum level depending on whether it was below or above this volume range. This will be used by the SetCurrentProfileOption feature to adjust the volume of the Audio Stream that is typically used for other notifications to this set level. \n\n>Specifying an empty (length of zero) value (or the absence of this parm from the XML) will cause no change to the volume levels.\n\nParm value input rules: \n\n* String that contains the minimum, maximum, and preset volumes in this order and separated by commas. For example, \"1,5,3\"\n* The volume levels must be positive integers that are less than 256.\n\n####Minimum, Maximum and Preset Volume Level for Wired Headset Mode\nSettable if: The Audio UI Profile Action is \"Add an Audio UI Profile\"\n\nPivotal parm: No\n\nParm name: STREAM_NOTIFICATION_WHS_LEVEL\n\nDescription: \n\n>This will set the minimum, maximum, and preset volume levels for the Audio Stream that is typically used for other notifications when the device is in wired headset mode. The user will not be able to lower or raise the volume outside of the minimum/maximum range that is set. If the notification volume level was outside of this range at the time that this range is set, then the volume of this stream will be equal to the minimum or maximum level depending on whether it was below or above this volume range.\n\n>The preset volume level is a third volume level that must be greater than or equal to the minimum volume level and less than or equal to the maximum volume level. If the preset volume is outside of the minimum/maximum range, then this value will be be equal to the minimum or maximum level depending on whether it was below or above this volume range. This will be used by the SetCurrentProfileOption feature to adjust the volume of the Audio Stream that is typically used for other notifications to this set level. \n\n>Specifying an empty (length of zero) value (or the absence of this parm from the XML) will cause no change to the volume levels.\n\nParm value input rules: \n\n* String that contains the minimum, maximum, and preset volumes in this order and separated by commas. For example, \"1,5,3\"\n* The volume levels must be positive integers that are less than 256.\n\n####Minimum, Maximum and Preset Volume Level for Bluetooth Headset Mode\nSettable if: The Audio UI Profile Action is \"Add an Audio UI Profile\"\n\nPivotal parm: No\n\nParm name: STREAM_NOTIFICATION_BTHS_LEVEL\n\nDescription: \n\n>This will set the minimum, maximum, and preset volume levels for the Audio Stream that is typically used for other notifications when the device is in bluetooth headset mode mode. The user will not be able to lower or raise the volume outside of the minimum/maximum range that is set. If the notification volume level was outside of this range at the time that this range is set, then the volume of this stream will be equal to the minimum or maximum level depending on whether it was below or above this volume range.\n\n>The preset volume level is a third volume level that must be greater than or equal to the minimum volume level and less than or equal to the maximum volume level. If the preset volume is outside of the minimum/maximum range, then this value will be be equal to the minimum or maximum level depending on whether it was below or above this volume range. This will be used by the SetCurrentProfileOption feature to adjust the volume of the Audio Stream that is typically used for other notifications to this set level. \n\n>Specifying an empty (length of zero) value (or the absence of this parm from the XML) will cause no change to the volume levels.\n\nParm value input rules: \n\n* String that contains the minimum, maximum, and preset volumes in this order and separated by commas. For example, \"1,5,3\"\n* The volume levels must be positive integers that are less than 256.\n\n####UI Label of STREAM_SYSTEM\nSettable if: The Audio UI Profile Action is \"Add an Audio UI Profile\"\n\nPivotal parm: No\n\nParm name: STREAM_SYSTEM_Label\n\nDescription: \n\n>This parm allows you to set a customized label that the ZVC will display to visually identify the Audio Stream that is typically used by system sounds. \n\n>**Note:** If the value of this parm is empty (a length of 0), then no customized label will be specified for the Audio Stream. This will cause ZVC to display not label the Audio Stream.\n\nParm value input rules: \n\n* String that has a minimum size of 0 character and a maximum size of 255 characters\n\n####UI Icon of STREAM_SYSTEM\nSettable if: The Audio UI Profile Action is \"Add an Audio UI Profile\"\n\nPivotal parm: No\n\nParm name: STREAM_SYSTEM_Icon\n\nDescription: \n\n>This parm allows you to set a customized icon that the ZVC will display to visually identify the Audio Stream that is typically used by system sounds. If specified, the value must be the full path and file name of an icon file in PNG format that resides in the device file system. An icon size of 48x48 pixels is recommended. \n\n>**Note:** If the value of this parm is empty (a length of 0), or if the value provided does not reference an icon file, then no customized icon will be specified for the Audio Stream. This will cause ZVC to display the default icon defined for the Audio Stream.\n\nParm value input rules: \n\n* String that has a minimum size of 0 character and a maximum size of 255 characters\n\n####Control Parameters of STREAM_SYSTEM\nSettable if: The Audio UI Profile Action is \"Add an Audio UI Profile\"\n\nPivotal parm: No\n\nParm name: STREAM_SYSTEM_Ctrl\n\nDescription: \n\n>This parm allows you to control whether the ZVC allow the device user to view and modify the volume settings for the Audio Stream that is typically used by system sounds. Specifying an empty (length of zero) value (or the absence of this parm from the XML) will cause no change to this Audio Stream's visibility. \n\nParm value input rules: \n\n* String that has a minimum size of 0 character and a maximum size of 255 characters\n* The value that is entered must be either \"1\", which will make the stream visible, or \"0\", which will make the Audio Stream hidden.\n\n####Minimum, Maximum and Preset Volume Level for Speaker Mode\nSettable if: The Audio UI Profile Action is \"Add an Audio UI Profile\"\n\nPivotal parm: No\n\nParm name: STREAM_SYSTEM_SPK_LEVEL\n\nDescription: \n\n>This will set the minimum, maximum, and preset volume levels for the Audio Stream that is typically used by system sounds when the device is in speaker mode. The user will not be able to lower or raise the volume outside of the minimum/maximum range that is set. If the system volume level was outside of this range at the time that this range is set, then the volume of this stream will be equal to the minimum or maximum level depending on whether it was below or above this volume range.\n\n>The preset volume level is a third volume level that must be greater than or equal to the minimum volume level and less than or equal to the maximum volume level. If the preset volume is outside of the minimum/maximum range, then this value will be be equal to the minimum or maximum level depending on whether it was below or above this volume range. This will be used by the SetCurrentProfileOption feature to adjust the volume of the Audio Stream that is typically used by system sounds to this set level. \n\n>Specifying an empty (length of zero) value (or the absence of this parm from the XML) will cause no change to the volume levels.\n\nParm value input rules: \n\n* String that contains the minimum, maximum, and preset volumes in this order and separated by commas. For example, \"1,5,3\"\n* The volume levels must be positive integers that are less than 256.\n\n####Minimum, Maximum and Preset Volume Level for Receiver Mode\nSettable if: The Audio UI Profile Action is \"Add an Audio UI Profile\"\n\nPivotal parm: No\n\nParm name: STREAM_SYSTEM_RCVR_LEVEL\n\nDescription: \n\n>This will set the minimum, maximum, and preset volume levels for the Audio Stream that is typically used by system sounds when the device is in receiver mode. The user will not be able to lower or raise the volume outside of the minimum/maximum range that is set. If the system volume level was outside of this range at the time that this range is set, then the volume of this stream will be equal to the minimum or maximum level depending on whether it was below or above this volume range.\n\n>The preset volume level is a third volume level that must be greater than or equal to the minimum volume level and less than or equal to the maximum volume level. If the preset volume is outside of the minimum/maximum range, then this value will be be equal to the minimum or maximum level depending on whether it was below or above this volume range. This will be used by the SetCurrentProfileOption feature to adjust the volume of the Audio Stream that is typically used by system sounds to this set level. \n\n>Specifying an empty (length of zero) value (or the absence of this parm from the XML) will cause no change to the volume levels.\n\nParm value input rules: \n\n* String that contains the minimum, maximum, and preset volumes in this order and separated by commas. For example, \"1,5,3\"\n* The volume levels must be positive integers that are less than 256.\n\n####Minimum, Maximum and Preset Volume Level for Wired Headset Mode\nSettable if: The Audio UI Profile Action is \"Add an Audio UI Profile\"\n\nPivotal parm: No\n\nParm name: STREAM_SYSTEM_WHS_LEVEL\n\nDescription: \n\n>This will set the minimum, maximum, and preset volume levels for the Audio Stream that is typically used by system sounds when the device is in wired headset mode. The user will not be able to lower or raise the volume outside of the minimum/maximum range that is set. If the system volume level was outside of this range at the time that this range is set, then the volume of this stream will be equal to the minimum or maximum level depending on whether it was below or above this volume range.\n\n>The preset volume level is a third volume level that must be greater than or equal to the minimum volume level and less than or equal to the maximum volume level. If the preset volume is outside of the minimum/maximum range, then this value will be be equal to the minimum or maximum level depending on whether it was below or above this volume range. This will be used by the SetCurrentProfileOption feature to adjust the volume of the Audio Stream that is typically used by system sounds to this set level. \n\n>Specifying an empty (length of zero) value (or the absence of this parm from the XML) will cause no change to the volume levels.\n\nParm value input rules: \n\n* String that contains the minimum, maximum, and preset volumes in this order and separated by commas. For example, \"1,5,3\"\n* The volume levels must be positive integers that are less than 256.\n\n####Minimum, Maximum and Preset Volume Level for Bluetooth Headset Mode\nSettable if: The Audio UI Profile Action is \"Add an Audio UI Profile\"\n\nPivotal parm: No\n\nParm name: STREAM_SYSTEM_BTHS_LEVEL\n\nDescription: \n\n>This will set the minimum, maximum, and preset volume levels for the Audio Stream that is typically used by system sounds when the device is in bluetooth headset mode mode. The user will not be able to lower or raise the volume outside of the minimum/maximum range that is set. If the system volume level was outside of this range at the time that this range is set, then the volume of this stream will be equal to the minimum or maximum level depending on whether it was below or above this volume range.\n\n>The preset volume level is a third volume level that must be greater than or equal to the minimum volume level and less than or equal to the maximum volume level. If the preset volume is outside of the minimum/maximum range, then this value will be be equal to the minimum or maximum level depending on whether it was below or above this volume range. This will be used by the SetCurrentProfileOption feature to adjust the volume of the Audio Stream that is typically used by system sounds to this set level. \n\n>Specifying an empty (length of zero) value (or the absence of this parm from the XML) will cause no change to the volume levels.\n\nParm value input rules: \n\n* String that contains the minimum, maximum, and preset volumes in this order and separated by commas. For example, \"1,5,3\"\n* The volume levels must be positive integers that are less than 256.\n\n####UI Label of STREAM_ALARM\nSettable if: The Audio UI Profile Action is \"Add an Audio UI Profile\"\n\nPivotal parm: No\n\nParm name: STREAM_ALARM_Label\n\nDescription: \n\n>This parm allows you to set a customized label that the ZVC will display to visually identify the Audio Stream that is typically used for alarms. \n\n>**Note:** If the value of this parm is empty (a length of 0), then no customized label will be specified for the Audio Stream. This will cause ZVC to display not label the Audio Stream.\n\nParm value input rules: \n\n* String that has a minimum size of 0 character and a maximum size of 255 characters\n\n####UI Icon of STREAM_ALARM\nSettable if: The Audio UI Profile Action is \"Add an Audio UI Profile\"\n\nPivotal parm: No\n\nParm name: STREAM_ALARM_Icon\n\nDescription: \n\n>This parm allows you to set a customized icon that the ZVC will display to visually identify the Audio Stream that is typically used for alarms. If specified, the value must be the full path and file name of an icon file in PNG format that resides in the device file system. An icon size of 48x48 pixels is recommended. \n\n>**Note:** If the value of this parm is empty (a length of 0), or if the value provided does not reference an icon file, then no customized icon will be specified for the Audio Stream. This will cause ZVC to display the default icon defined for the Audio Stream.\n\nParm value input rules: \n\n* String that has a minimum size of 0 character and a maximum size of 255 characters\n\n####Control Parameters of STREAM_ALARM\nSettable if: The Audio UI Profile Action is \"Add an Audio UI Profile\"\n\nPivotal parm: No\n\nParm name: STREAM_ALARM_Ctrl\n\nDescription: \n\n>This parm allows you to control whether the ZVC allow the device user to view and modify the volume settings for the Audio Stream that is typically used for alarms. Specifying an empty (length of zero) value (or the absence of this parm from the XML) will cause no change to this Audio Stream's visibility. \n\nParm value input rules: \n\n* String that has a minimum size of 0 character and a maximum size of 255 characters\n* The value that is entered must be either \"1\", which will make the stream visible, or \"0\", which will make the Audio Stream hidden.\n\n####Minimum, Maximum and Preset Volume Level for Speaker Mode\nSettable if: The Audio UI Profile Action is \"Add an Audio UI Profile\"\n\nPivotal parm: No\n\nParm name: STREAM_ALARM_SPK_LEVEL\n\nDescription: \n\n>This will set the minimum, maximum, and preset volume levels for the Audio Stream that is typically used for alarms when the device is in speaker mode. The user will not be able to lower or raise the volume outside of the minimum/maximum range that is set. If the alarm volume level was outside of this range at the time that this range is set, then the volume of this stream will be equal to the minimum or maximum level depending on whether it was below or above this volume range.\n\n>The preset volume level is a third volume level that must be greater than or equal to the minimum volume level and less than or equal to the maximum volume level. If the preset volume is outside of the minimum/maximum range, then this value will be be equal to the minimum or maximum level depending on whether it was below or above this volume range. This will be used by the SetCurrentProfileOption feature to adjust the volume of the Audio Stream that is typically used for alarms to this set level. \n\n>Specifying an empty (length of zero) value (or the absence of this parm from the XML) will cause no change to the volume levels.\n\nParm value input rules: \n\n* String that contains the minimum, maximum, and preset volumes in this order and separated by commas. For example, \"1,5,3\"\n* The volume levels must be positive integers that are less than 256.\n\n####Minimum, Maximum and Preset Volume Level for Receiver Mode\nSettable if: The Audio UI Profile Action is \"Add an Audio UI Profile\"\n\nPivotal parm: No\n\nParm name: STREAM_ALARM_RCVR_LEVEL\n\nDescription: \n\n>This will set the minimum, maximum, and preset volume levels for the Audio Stream that is typically used for alarms when the device is in receiver mode. The user will not be able to lower or raise the volume outside of the minimum/maximum range that is set. If the alarm volume level was outside of this range at the time that this range is set, then the volume of this stream will be equal to the minimum or maximum level depending on whether it was below or above this volume range.\n\n>The preset volume level is a third volume level that must be greater than or equal to the minimum volume level and less than or equal to the maximum volume level. If the preset volume is outside of the minimum/maximum range, then this value will be be equal to the minimum or maximum level depending on whether it was below or above this volume range. This will be used by the SetCurrentProfileOption feature to adjust the volume of the Audio Stream that is typically used for alarms to this set level. \n\n>Specifying an empty (length of zero) value (or the absence of this parm from the XML) will cause no change to the volume levels.\n\nParm value input rules: \n\n* String that contains the minimum, maximum, and preset volumes in this order and separated by commas. For example, \"1,5,3\"\n* The volume levels must be positive integers that are less than 256.\n\n####Minimum, Maximum and Preset Volume Level for Wired Headset Mode\nSettable if: The Audio UI Profile Action is \"Add an Audio UI Profile\"\n\nPivotal parm: No\n\nParm name: STREAM_ALARM_WHS_LEVEL\n\nDescription: \n\n>This will set the minimum, maximum, and preset volume levels for the Audio Stream that is typically used for alarms when the device is in wired headset mode. The user will not be able to lower or raise the volume outside of the minimum/maximum range that is set. If the system volume level was outside of this range at the time that this range is set, then the volume of this stream will be equal to the minimum or maximum level depending on whether it was below or above this volume range.\n\n>The preset volume level is a third volume level that must be greater than or equal to the minimum volume level and less than or equal to the maximum volume level. If the preset volume is outside of the minimum/maximum range, then this value will be be equal to the minimum or maximum level depending on whether it was below or above this volume range. This will be used by the SetCurrentProfileOption feature to adjust the volume of the Audio Stream that is typically used for alarms to this set level. \n\n>Specifying an empty (length of zero) value (or the absence of this parm from the XML) will cause no change to the volume levels.\n\nParm value input rules: \n\n* String that contains the minimum, maximum, and preset volumes in this order and separated by commas. For example, \"1,5,3\"\n* The volume levels must be positive integers that are less than 256.\n\n####Minimum, Maximum and Preset Volume Level for Bluetooth Headset Mode\nSettable if: The Audio UI Profile Action is \"Add an Audio UI Profile\"\n\nPivotal parm: No\n\nParm name: STREAM_ALARM_BTHS_LEVEL\n\nDescription: \n\n>This will set the minimum, maximum, and preset volume levels for the Audio Stream that is typically used for alarms when the device is in bluetooth headset mode mode. The user will not be able to lower or raise the volume outside of the minimum/maximum range that is set. If the system volume level was outside of this range at the time that this range is set, then the volume of this stream will be equal to the minimum or maximum level depending on whether it was below or above this volume range.\n\n>The preset volume level is a third volume level that must be greater than or equal to the minimum volume level and less than or equal to the maximum volume level. If the preset volume is outside of the minimum/maximum range, then this value will be be equal to the minimum or maximum level depending on whether it was below or above this volume range. This will be used by the SetCurrentProfileOption feature to adjust the volume of the Audio Stream that is typically used for alarms to this set level. \n\n>Specifying an empty (length of zero) value (or the absence of this parm from the XML) will cause no change to the volume levels.\n \nParm value input rules: \n\n* String that contains the minimum, maximum, and preset volumes in this order and separated by commas. For example, \"1,5,3\"\n* The volume levels must be positive integers that are less than 256.\n\n####UI Label of STREAM_VOICECALL\nSettable if: The Audio UI Profile Action is \"Add an Audio UI Profile\"\n\nPivotal parm: No\n\nParm name: STREAM_VOICECALL_Label\n\nDescription: \n\n>This parm allows you to set a customized label that the ZVC will display to visually identify the Audio Stream that is typically used for phone calls. \n\n>**Note:** If the value of this parm is empty (a length of 0), then no customized label will be specified for the Audio Stream. This will cause ZVC to display not label the Audio Stream.\n\nParm value input rules: \n\n* String that has a minimum size of 0 character and a maximum size of 255 characters\n\n####UI Icon of STREAM_VOICECALL\nSettable if: The Audio UI Profile Action is \"Add an Audio UI Profile\"\n\nPivotal parm: No\n\nParm name: STREAM_VOICECALL_Icon\n\nDescription: \n\n>This parm allows you to set a customized icon that the ZVC will display to visually identify the Audio Stream that is typically used for phone calls. If specified, the value must be the full path and file name of an icon file in PNG format that resides in the device file system. An icon size of 48x48 pixels is recommended. \n\n>**Note:** If the value of this parm is empty (a length of 0), or if the value provided does not reference an icon file, then no customized icon will be specified for the Audio Stream. This will cause ZVC to display the default icon defined for the Audio Stream.\n\nParm value input rules: \n\n* String that has a minimum size of 0 character and a maximum size of 255 characters\n\n####Control Parameters of STREAM_VOICECALL\nSettable if: The Audio UI Profile Action is \"Add an Audio UI Profile\"\n\nPivotal parm: No\n\nParm name: STREAM_VOICECALL_Ctrl\n\nDescription: \n\n>This parm allows you to control whether the ZVC allow the device user to view and modify the volume settings for the Audio Stream that is typically used for phone calls. Specifying an empty (length of zero) value (or the absence of this parm from the XML) will cause no change to this Audio Stream's visibility. \n\nParm value input rules: \n\n* String that has a minimum size of 0 character and a maximum size of 255 characters\n* The value that is entered must be either \"1\", which will make the stream visible, or \"0\", which will make the Audio Stream hidden.\n\n####Minimum, Maximum and Preset Volume Level for Speaker Mode\nSettable if: The Audio UI Profile Action is \"Add an Audio UI Profile\"\n\nPivotal parm: No\n\nParm name: STREAM_VOICECALL_SPK_LEVEL\n\nDescription: \n\n>This will set the minimum, maximum, and preset volume levels for the Audio Stream that is typically used for phone calls when the device is in speaker mode. The user will not be able to lower or raise the volume outside of the minimum/maximum range that is set. If the voice call volume level was outside of this range at the time that this range is set, then the volume of this stream will be equal to the minimum or maximum level depending on whether it was below or above this volume range.\n\n>The preset volume level is a third volume level that must be greater than or equal to the minimum volume level and less than or equal to the maximum volume level. If the preset volume is outside of the minimum/maximum range, then this value will be be equal to the minimum or maximum level depending on whether it was below or above this volume range. This will be used by the SetCurrentProfileOption feature to adjust the volume of the Audio Stream that is typically used for phone calls to this set level. \n\n>Specifying an empty (length of zero) value (or the absence of this parm from the XML) will cause no change to the volume levels.\n\nParm value input rules: \n\n* String that contains the minimum, maximum, and preset volumes in this order and separated by commas. For example, \"1,5,3\"\n* The volume levels must be positive integers that are less than 256.\n\n####Minimum, Maximum and Preset Volume Level for Receiver Mode\nSettable if: The Audio UI Profile Action is \"Add an Audio UI Profile\"\n\nPivotal parm: No\n\nParm name: STREAM_VOICECALL_RCVR_LEVEL\n\nDescription: \n\n>This will set the minimum, maximum, and preset volume levels for the Audio Stream that is typically used for phone calls when the device is in receiver mode. The user will not be able to lower or raise the volume outside of the minimum/maximum range that is set. If the voice call volume level was outside of this range at the time that this range is set, then the volume of this stream will be equal to the minimum or maximum level depending on whether it was below or above this volume range.\n\n>The preset volume level is a third volume level that must be greater than or equal to the minimum volume level and less than or equal to the maximum volume level. If the preset volume is outside of the minimum/maximum range, then this value will be be equal to the minimum or maximum level depending on whether it was below or above this volume range. This will be used by the SetCurrentProfileOption feature to adjust the volume of the Audio Stream that is typically used for phone calls to this set level. \n\n>Specifying an empty (length of zero) value (or the absence of this parm from the XML) will cause no change to the volume levels.\n\nParm value input rules: \n\n* String that contains the minimum, maximum, and preset volumes in this order and separated by commas. For example, \"1,5,3\"\n* The volume levels must be positive integers that are less than 256.\n\n####Minimum, Maximum and Preset Volume Level for Wired Headset Mode\nSettable if: The Audio UI Profile Action is \"Add an Audio UI Profile\"\n\nPivotal parm: No\n\nParm name: STREAM_VOICECALL_WHS_LEVEL\n\nDescription: \n\n>This will set the minimum, maximum, and preset volume levels for the Audio Stream that is typically used for phone calls when the device is in wired headset mode. The user will not be able to lower or raise the volume outside of the minimum/maximum range that is set. If the voice call volume level was outside of this range at the time that this range is set, then the volume of this stream will be equal to the minimum or maximum level depending on whether it was below or above this volume range.\n\n>The preset volume level is a third volume level that must be greater than or equal to the minimum volume level and less than or equal to the maximum volume level. If the preset volume is outside of the minimum/maximum range, then this value will be be equal to the minimum or maximum level depending on whether it was below or above this volume range. This will be used by the SetCurrentProfileOption feature to adjust the volume of the Audio Stream that is typically used for phone calls to this set level. \n\n>Specifying an empty (length of zero) value (or the absence of this parm from the XML) will cause no change to the volume levels.\n\nParm value input rules: \n\n* String that contains the minimum, maximum, and preset volumes in this order and separated by commas. For example, \"1,5,3\"\n* The volume levels must be positive integers that are less than 256.\n\n####Minimum, Maximum and Preset Volume Level for Bluetooth Headset Mode\nSettable if: The Audio UI Profile Action is \"Add an Audio UI Profile\"\n\nPivotal parm: No\n\nParm name: STREAM_VOICECALL_BTHS_LEVEL\n\nDescription: \n\n>This will set the minimum, maximum, and preset volume levels for the Audio Stream that is typically used for phone calls when the device is in bluetooth headset mode mode. The user will not be able to lower or raise the volume outside of the minimum/maximum range that is set. If the voice call volume level was outside of this range at the time that this range is set, then the volume of this stream will be equal to the minimum or maximum level depending on whether it was below or above this volume range.\n\n>The preset volume level is a third volume level that must be greater than or equal to the minimum volume level and less than or equal to the maximum volume level. If the preset volume is outside of the minimum/maximum range, then this value will be be equal to the minimum or maximum level depending on whether it was below or above this volume range. This will be used by the SetCurrentProfileOption feature to adjust the volume of the Audio Stream that is typically used for phone calls to this set level. \n\n>Specifying an empty (length of zero) value (or the absence of this parm from the XML) will cause no change to the volume levels.\n\nParm value input rules: \n\n* String that contains the minimum, maximum, and preset volumes in this order and separated by commas. For example, \"1,5,3\"\n* The volume levels must be positive integers that are less than 256.\n\n####UI Label of Decode Beep Virtual Volume Scale\nSettable if: The Audio UI Profile Action is \"Add an Audio UI Profile\"\n\nPivotal parm: No\n\nParm name: STREAM_VVS_Label\n\nDescription: \n\n>This parm allows you to set a customized label that the ZVC will display to visually identify the decode beep virtual volume stream. \n\n>**Note:** If the value of this parm is empty (a length of 0), then no customized label will be specified for the Audio Stream. This will cause ZVC to display not label the Audio Stream.\n\nParm value input rules: \n\n* String that has a minimum size of 0 character and a maximum size of 255 characters\n\n####UI Icon of Decode Beep Virtual Volume Scale\nSettable if: The Audio UI Profile Action is \"Add an Audio UI Profile\"\n\nPivotal parm: No\n\nParm name: STREAM_VVS_Icon\n\nDescription: \n\n>This parm allows you to set a customized icon that the ZVC will display to visually identify the decode beep virtual volume stream. If specified, the value must be the full path and file name of an icon file in PNG format that resides in the device file system. An icon size of 48x48 pixels is recommended. \n\n>**Note:** If the value of this parm is empty (a length of 0), or if the value provided does not reference an icon file, then no customized icon will be specified for the Audio Stream. This will cause ZVC to display the default icon defined for the Audio Stream.\n\nParm value input rules: \n\n* String that has a minimum size of 0 character and a maximum size of 255 characters\n\n####Control Parameters of STREAM_VVS\nSettable if: The Audio UI Profile Action is \"Add an Audio UI Profile\"\n\nPivotal parm: No\n\nParm name: STREAM_VVS_Ctrl\n\nDescription: \n\n>This parm allows you to control whether the ZVC allow the device user to view and modify the volume settings for the decode beep virtual volume stream. Specifying an empty (length of zero) value (or the absence of this parm from the XML) will cause no change to this Audio Stream's visibility. \n\nParm value input rules: \n\n* String that has a minimum size of 0 character and a maximum size of 255 characters\n* The value that is entered must be either \"1\", which will make the stream visible, or \"0\", which will make the Audio Stream hidden.\n\n####Minimum, Maximum and Preset Volume Level for Speaker Mode\nSettable if: The Audio UI Profile Action is \"Add an Audio UI Profile\"\n\nPivotal parm: No\n\nParm name: STREAM_VVS_SPK_LEVEL\n\nDescription: \n\n>This will set the minimum, maximum, and preset volume levels for the decode beep virtual stream when the device is in speaker mode. The user will not be able to lower or raise the volume outside of the minimum/maximum range that is set. If the decode beep virtual volume level was outside of this range at the time that this range is set, then the volume of this stream will be equal to the minimum or maximum level depending on whether it was below or above this volume range.\n\n>The preset volume level is a third volume level that must be greater than or equal to the minimum volume level and less than or equal to the maximum volume level. If the preset volume is outside of the minimum/maximum range, then this value will be be equal to the minimum or maximum level depending on whether it was below or above this volume range. This will be used by the SetCurrentProfileOption feature to adjust the volume of the decode beep virtual stream to this set level. \n\n>Specifying an empty (length of zero) value (or the absence of this parm from the XML) will cause no change to the volume levels.\n\nParm value input rules: \n\n* String that contains the minimum, maximum, and preset volumes in this order and separated by commas. For example, \"1,5,3\"\n* The volume levels must be positive integers that are less than 256.\n\n####Minimum, Maximum and Preset Volume Level for Receiver Mode\nSettable if: The Audio UI Profile Action is \"Add an Audio UI Profile\"\n\nPivotal parm: No\n\nParm name: STREAM_VVS_RCVR_LEVEL\n\nDescription: \n\n>This will set the minimum, maximum, and preset volume levels for the decode beep virtual stream when the device is in receiver mode. The user will not be able to lower or raise the volume outside of the minimum/maximum range that is set. If the decode beep virtual volume level was outside of this range at the time that this range is set, then the volume of this stream will be equal to the minimum or maximum level depending on whether it was below or above this volume range.\n\n>The preset volume level is a third volume level that must be greater than or equal to the minimum volume level and less than or equal to the maximum volume level. If the preset volume is outside of the minimum/maximum range, then this value will be be equal to the minimum or maximum level depending on whether it was below or above this volume range. This will be used by the SetCurrentProfileOption feature to adjust the volume of the decode beep virtual stream to this set level. \n\n>Specifying an empty (length of zero) value (or the absence of this parm from the XML) will cause no change to the volume levels.\n\nParm value input rules: \n\n* String that contains the minimum, maximum, and preset volumes in this order and separated by commas. For example, \"1,5,3\"\n* The volume levels must be positive integers that are less than 256.\n\n####Minimum, Maximum and Preset Volume Level for Wired Headset Mode\nSettable if: The Audio UI Profile Action is \"Add an Audio UI Profile\"\n\nPivotal parm: No\n\nParm name: STREAM_VVS_WHS_LEVEL\n\nDescription: \n\n>This will set the minimum, maximum, and preset volume levels for the decode beep virtual stream when the device is in wired headset mode. The user will not be able to lower or raise the volume outside of the minimum/maximum range that is set. If the decode beep virtual volume level was outside of this range at the time that this range is set, then the volume of this stream will be equal to the minimum or maximum level depending on whether it was below or above this volume range.\n\n>The preset volume level is a third volume level that must be greater than or equal to the minimum volume level and less than or equal to the maximum volume level. If the preset volume is outside of the minimum/maximum range, then this value will be be equal to the minimum or maximum level depending on whether it was below or above this volume range. This will be used by the SetCurrentProfileOption feature to adjust the volume of the decode beep virtual stream to this set level. \n\n>Specifying an empty (length of zero) value (or the absence of this parm from the XML) will cause no change to the volume levels.\n\nParm value input rules: \n\n* String that contains the minimum, maximum, and preset volumes in this order and separated by commas. For example, \"1,5,3\"\n* The volume levels must be positive integers that are less than 256.\n\n####Minimum, Maximum and Preset Volume Level for Bluetooth Headset Mode\nSettable if: The Audio UI Profile Action is \"Add an Audio UI Profile\"\n\nPivotal parm: No\n\nParm name: STREAM_VVS_BTHS_LEVEL\n\nDescription: \n\n>This will set the minimum, maximum, and preset volume levels for the decode beep virtual stream when the device is in bluetooth headset mode mode. The user will not be able to lower or raise the volume outside of the minimum/maximum range that is set. If the decode beep virtual volume level was outside of this range at the time that this range is set, then the volume of this stream will be equal to the minimum or maximum level depending on whether it was below or above this volume range.\n\n>The preset volume level is a third volume level that must be greater than or equal to the minimum volume level and less than or equal to the maximum volume level. If the preset volume is outside of the minimum/maximum range, then this value will be be equal to the minimum or maximum level depending on whether it was below or above this volume range. This will be used by the SetCurrentProfileOption feature to adjust the volume of the decode beep virtual stream to this set level. \n\n>Specifying an empty (length of zero) value (or the absence of this parm from the XML) will cause no change to the volume levels.\n\nParm value input rules: \n\n* String that contains the minimum, maximum, and preset volumes in this order and separated by commas. For example, \"1,5,3\"\n* The volume levels must be positive integers that are less than 256.\n\n##Example XML\n\n###Add a New Audio Profile\n\n\t:::XML\n\t<wap-provisioningdoc>\n\t\t<characteristic type=\"AudioVolUIMgr\" version=\"4.4\" >\n\t\t\t<parm name=\"UIProfileAction\" value=\"1\"/>\n\t\t\t<characteristic type=\"UIProfile\">\n\t\t\t\t<parm name=\"ProfileName\" value=\"Test2\"/>\n\t\t\t\t<characteristic type=\"UIProfile-streamconfig\">\n\t\t\t\t\t<parm name=\"STREAM_MUSIC_Label\" value=\"MUSIC\"/>\n\t\t\t\t\t<parm name=\"STREAM_MUSIC_Icon\" value=\"/internal/xmltest/in/Speaker.png\"/>\n\t\t\t\t\t<parm name=\"STREAM_MUSIC_Ctrl\" value=\"1\"/>\n\t\t\t\t\t<parm name=\"STREAM_MUSIC_SPK_LEVEL\" value=\"1,14,8\"/>\n\t\t\t\t\t<parm name=\"STREAM_MUSIC_RCVR_LEVEL\" value=\"2,13,8\"/>\n\t\t\t\t\t<parm name=\"STREAM_MUSIC_WHS_LEVEL\" value=\"3,12,8\"/>\n\t\t\t\t\t<parm name=\"STREAM_MUSIC_BTHS_LEVEL\" value=\"4,11,8\"/>\n\t\t\t\t\t<parm name=\"STREAM_RING_Label\" value=\"RING\"/>\n\t\t\t\t\t<parm name=\"STREAM_RING_Icon\" value=\"/internal/xmltest/in/Ring.png\"/>\n\t\t\t\t\t<parm name=\"STREAM_RING_Ctrl\" value=\"1\"/>\n\t\t\t\t\t<parm name=\"STREAM_RING_SPK_LEVEL\" value=\"1,14,8\"/>\n\t\t\t\t\t<parm name=\"STREAM_RING_RCVR_LEVEL\" value=\"2,13,8\"/>\n\t\t\t\t\t<parm name=\"STREAM_RING_WHS_LEVEL\" value=\"3,12,8\"/>\n\t\t\t\t\t<parm name=\"STREAM_RING_BTHS_LEVEL\" value=\"4,11,8\"/>\n\t\t\t\t\t<parm name=\"STREAM_NOTIFICATION_Label\" value=\"NOTIFY\"/>\n\t\t\t\t\t<parm name=\"STREAM_NOTIFICATION_Icon\" value=\"/internal/xmltest/in/Notify.png\"/>\n\t\t\t\t\t<parm name=\"STREAM_NOTIFICATION_Ctrl\" value=\"1\"/>\n\t\t\t\t\t<parm name=\"STREAM_NOTIFICATION_SPK_LEVEL\" value=\"1,14,8\"/>\n\t\t\t\t\t<parm name=\"STREAM_NOTIFICATION_RCVR_LEVEL\" value=\"2,13,8\"/>\n\t\t\t\t\t<parm name=\"STREAM_NOTIFICATION_WHS_LEVEL\" value=\"3,12,8\"/>\n\t\t\t\t\t<parm name=\"STREAM_NOTIFICATION_BTHS_LEVEL\" value=\"4,11,8\"/>\n\t\t\t\t\t<parm name=\"STREAM_SYSTEM_Label\" value=\"SYSTEM\"/>\n\t\t\t\t\t<parm name=\"STREAM_SYSTEM_Icon\" value=\"/internal/xmltest/in/System.png\"/>\n\t\t\t\t\t<parm name=\"STREAM_SYSTEM_Ctrl\" value=\"1\"/>\n\t\t\t\t\t<parm name=\"STREAM_SYSTEM_SPK_LEVEL\" value=\"1,14,8\"/>\n\t\t\t\t\t<parm name=\"STREAM_SYSTEM_RCVR_LEVEL\" value=\"2,13,8\"/>\n\t\t\t\t\t<parm name=\"STREAM_SYSTEM_WHS_LEVEL\" value=\"3,12,8\"/>\n\t\t\t\t\t<parm name=\"STREAM_SYSTEM_BTHS_LEVEL\" value=\"4,11,8\"/>\n\t\t\t\t\t<parm name=\"STREAM_ALARM_Label\" value=\"ALARM\"/>\n\t\t\t\t\t<parm name=\"STREAM_ALARM_Icon\" value=\"/internal/xmltest/in/ALARM.png\"/>\n\t\t\t\t\t<parm name=\"STREAM_ALARM_Ctrl\" value=\"1\"/>\n\t\t\t\t\t<parm name=\"STREAM_ALARM_SPK_LEVEL\" value=\"1,14,8\"/>\n\t\t\t\t\t<parm name=\"STREAM_ALARM_RCVR_LEVEL\" value=\"2,13,8\"/>\n\t\t\t\t\t<parm name=\"STREAM_ALARM_WHS_LEVEL\" value=\"3,12,8\"/>\n\t\t\t\t\t<parm name=\"STREAM_ALARM_BTHS_LEVEL\" value=\"4,11,8\"/>\n\t\t\t\t\t<parm name=\"STREAM_VOICECALL_Label\" value=\"PHONE\"/>\n\t\t\t\t\t<parm name=\"STREAM_VOICECALL_Icon\" value=\"/internal/xmltest/in/Phone.png\"/>\n\t\t\t\t\t<parm name=\"STREAM_VOICECALL_Ctrl\" value=\"1\"/>\n\t\t\t\t\t<parm name=\"STREAM_VOICECALL_SPK_LEVEL\" value=\"1,14,8\"/>\n\t\t\t\t\t<parm name=\"STREAM_VOICECALL_RCVR_LEVEL\" value=\"2,13,8\"/>\n\t\t\t\t\t<parm name=\"STREAM_VOICECALL_WHS_LEVEL\" value=\"3,12,8\"/>\n\t\t\t\t\t<parm name=\"STREAM_VOICECALL_BTHS_LEVEL\" value=\"4,11,8\"/>\n\t\t\t\t\t<parm name=\"STREAM_VVS_Label\" value=\"SCAN\"/>\n\t\t\t\t\t<parm name=\"STREAM_VVS_Icon\" value=\"/internal/xmltest/in/ScanGun.png\"/>\n\t\t\t\t\t<parm name=\"STREAM_VVS_Ctrl\" value=\"1\"/>\n\t\t\t\t\t<parm name=\"STREAM_VVS_SPK_LEVEL\" value=\"1,14,8\"/>\n\t\t\t\t\t<parm name=\"STREAM_VVS_RCVR_LEVEL\" value=\"2,13,8\"/>\n\t\t\t\t\t<parm name=\"STREAM_VVS_WHS_LEVEL\" value=\"3,12,8\"/>\n\t\t\t\t\t<parm name=\"STREAM_VVS_BTHS_LEVEL\" value=\"4,11,8\"/>\n\t\t\t\t</characteristic>\n\t\t\t</characteristic>\n\t\t</characteristic>\n\t</wap-provisioningdoc>\n\n\n## Feature Compatibility\n\n<iframe src=\"compare.html#mx=4.3&csp=AudioVolUIMgr&os=JB&embed=true\"></iframe> "},{"key":"guide-csp-batch","name":" BatchMgr","md":"# BatchMgr\n\n## About BatchMgr\n\n### Overview\n\nThe Batch Manager feature allows you to  TBD\n\n### Main Functionality\n\n* [List] TBD\n\n\n## Feature Compatibility\n\n<iframe src=\"compare.html#mx=4.3&csp=BatchMgr&os=JB&embed=true\"></iframe> "},{"key":"guide-csp-batterymgr","name":" BatteryMgr","md":"# BatteryMgr\n\n## About BatteryMgr\n\n### Overview\n\nZebra Android devices can support three classes of batteries: Regular (dumb), Smart, and Gifted. Regular batteries provide only basic support for battery level. Smart Batteries add capabilities to identify batteries uniquely and to track battery provenance and usage history. Gifted Batteries add capabilities that can be used to provide more accurate gas gauging, monitor battery charging, and track battery health.\n\nA key capability that is lacking for Regular batteries but is provided for both Smart and Gifted Batteries is the ability to determine when a battery is nearing the end of its useful lifetime and needs to be decommissioned (replaced). In the case of Smart Batteries, decommissioning must be based strictly on the charge history of the device. In the case of Gifted Batteries, which have more robust capabilities to track battery health, decommissioning can be based on the actual condition of the battery. In either case, the determination of when a battery needs to be decommissioned is configurable, to account for different demands that are likely to be placed batteries in different environments.\n\nThe BatteryMgr Feature Type allows you to configure the thresholds that will be used to determine when a battery needs to be decommissioned. These values, once configured, will be used by battery management software, along with other battery parameters, to determine the value of the decommission flag that will be stored in, and that will thereafter be carried with, a Smart or Gifted Battery.\n\nThe supported thresholds are:\n\n* Battery Usage Decommission Threshold\n\t* A battery is considered to be decommissioned if the battery usage number is greater than or equal to Battery Usage Decommission Threshold.\n\t* Battery Usage Decommission Threshold is applicable for Smart Batteries, TC50 batteries, and TC75 batteries.\n\t* **Note:** Battery usage number is Aggregatecharge/RatedCapacity of the battery.\n* Percent Decommission Threshold\n\t* A battery is considered to be decommissioned if the Health percentage of the battery is less than or equal to Percent Decommission Threshold.\n\t* Percent Decommission Threshold is applicable for Gifted Batteries.\n\t* **Note:** Health percentage is the ratio of \"present_capacity\" to \"design_capacity\" at a discharge rate of \"design_capacity\".\n\nThe values that are set for the threshold values are persisted across reboots by the use of shared preferences which will save the configuration data. The configured threshold values will also be persisted across an enterprise reset.\n\nAn error will be reported if the OS does not support the battery decommission feature, which will be determined by whether or not the syfs files, either batteryusage_decommission_threshold or percent_decommission_threshold, are present on the device.\n\n### Main Functionality\n \n* Set the Battery Usage Decommission Threshold for Smart Batteries\n* Set the Battery Percentage Decommission Threshold Gifted Batteries\n\n##Parameter Notes\n###Battery Usage Decommissioned Threshold\nPivotal parm: No\n\nParm name: SetBatteryUsageDecommissionThreshold\n\nDescription: \n\n>This parm allows you to set the Battery Usage Decommissioned Threshold on devices that have support for Smart Batteries.\n\n>Smart Batteries accumulate the total amount of charge that is placed into the battery over time. This accumulation is referred to as Aggregated Charge. Over time, the Aggregated Charge will grow, and it is a reasonable expectation that a battery with a larger Aggregated Charge has a shorter remaining useful lifetime than a device with a smaller Aggregated Charge.\n\n>Dividing the Aggregated Charge of a Smart Battery by its Rated Capacity results in what is called the Battery Usage Number. The Battery Usage Number is stored in the battery and can be used to approximate (pro-rate) the number of \"full discharge/charge\" cycles that battery has undergone. This can only be an approximation since in most cases the device will have actually experienced only partial discharge/charge cycles.\n\n>A Smart Battery is considered to be ready to be decommissioned if the Battery Usage Number is greater than or equal to the currently configured Battery Usage Decommissioned Threshold. The default value for the Battery Usage Decommissioned Threshold is 400, indicating that a Smart Battery should be decommissioned once it has undergone an approximate of 400 \"full discharge/charge\" cycles.\n\n>**Note:** This parm can be used on a Zebra Android device that has the ability to support Smart Batteries, whether or not a Smart Battery is currently present in the device. For example, a device could support both Regular and Smart Batteries. In such a case, this parm could be used to configure how the device will handle a Smart Battery in the future, should one be inserted, even if the device currently has a Regular Battery inserted. If this parm is on a device that does not support Smart Batteries, then an error will be returned in the Result XML document.\n\nParm value input rules: \n\n* The input value must be an integer between 0 and 65535\n* Setting this parm to 0 (or the absence of this parm from the XML) indicates no change or not applicable\n\n###Battery Percentage Decommissioned Threshold\nPivotal parm: No\n\nParm name: SetPercentDecommissionThreshold\n\nDescription: \n\n>This parm allows you to set the Battery Percentage Decommissioned Threshold on devices that have support for Gifted Batteries.\n\n>Gifted Batteries have the ability to determine their Actual Capacity under specific discharge conditions. Based on this, Gifted Batteries can estimate their Battery Health as the percentage the Actual Capacity is of the Rated Capacity. Over time, both the Actual Capacity and the Battery Health will reduce and it is a reasonable expectation that a battery with a lower Battery Health has a shorter remaining useful lifetime than a device with a larger Battery Health.\n\n>A Gifted Battery is considered to be ready to be decommissioned if the Battery Health is less than the currently configured Battery Percentage Decommissioned Threshold. The default value for the Battery Percentage Decommissioned Threshold is 75, indicating that a Smart Battery should be decommissioned once its Actual Capacity is less than 75% of its original Rated Capacity.\n\n>**Note:** This parm can be used on a Zebra Android device that has the ability to support Gifted Batteries, whether or not a Gifted Battery is currently present in the device. For example, a device could support both Smart and Gifted Batteries. In such a case, this parm could be used to configure how the device will handle a Gifted Battery in the future, should one be inserted, even if the device currently has a Smart Battery inserted. If this parm is on a device that does not support Gifted Batteries, then an error will be returned in the Result XML document.\n\nParm value input rules: \n\n* The input value must be an integer between 0 and 100\n* Setting this parm to 0 (or the absence of this parm from the XML) indicates no change or not applicable\n\n## Feature Compatibility\n\n<iframe src=\"compare.html#mx=4.3&csp=BatteryMgr&os=JB&embed=true\"></iframe> "},{"key":"guide-csp-browser","name":" BrowserMgr","md":"# BrowserMgr\n\n## About BrowserMgr\n\n### Overview\n\nMany Zebra Android devices include a default Web Browser that is derived from the stock Android Open Source Project (AOSP) Web Browser source code. The key changes made are to enable configurability of selected settings. The BrowserMgr Feature Type is used to configure these settings.\n\n**Note:** Multi-User Mode is supported on all Zebra Android devices that support Zebra MX functionality, but the AccessMgr Feature Type currently does not support enabling Multi-User Mode. Multi-User Mode can be enabled on devices that support it, but only using unsupported tools or mechanisms that do not scale to large deployments. For this reason, the ability to use the AppMgr Feature Type to manage the Protected List may provide little or no immediate benefit. In the future, when the AccessMgr Feature Type is enhanced to support enabling Multi-User Mode, the ability to use the AppMgr Feature Type to manage the Protected List will likely be more meaningful.\n\n### Main Functionality\n\n* Set the Default Home Page\n* Turn the Remember Passwords Option On/Off \n* Turn the Save Form Data Option On/Off \n\n##Parameter Notes\n###Set Default Home Page\nPivotal parm: No\n\nParm name: SetDefaultHomepage\n\nDescription: \n\n>This parm allows you to set the Default Home Page URI of the Default Android Web Browser. Each time the Default Android Web Browser is opened without an explicitly requested URI, it will use to the URI to the Default Home Page URI. To produce successful results, a full, valid URI to a desired web page should be supplied, such as \"www.google.com\". This could be used to launch a specific web-based application or to direct users to an internal company web site or portal as a starting point for browsing. Specifying an empty (length of zero) value (or the absence of this parm from the XML) will cause no change to the current Default Home Page.\n\nParm value input rules: \n\n* String with a minimum size of 0 characters and a maximum size of 2000 characters\n\n###Turn On/Off Remember Passwords\nPivotal parm: No\n\nParm name: SetRememberPasswords\n\nDescription: \n\n>This parm will allow you to turn the Remember Passwords Option of the Default Android Web Browser On or Off.\n\n>Turning the Remember Passwords Option On can make browsing more convenient by eliminating the need for the device user to enter the same password later. Turning the Remember Passwords Option Off is generally more secure, especially on a device that might be shared, since it would prevent an unauthorized user from logging in using a password that was previously entered by an authorized user.\n\n<div class=\"parm-table\">\n <table class=\"table\">\n\t<tr>\n\t\t<th>Parm Option Name</th>\n\t\t<th>Parm Value</th>\n\t\t<th>Description</th>\n\t</tr>\n  <tr>\n    <td>Do not change</td>\n    <td>\"0\"</td>\n\t<td>This value (or the absence of this parm from the XML) will cause no change to whether the Remember Passwords Option is turned On or Off.</td>\n  </tr>\n  <tr>\n    <td>Turn on</td>\n    <td>\"1\"</td>\n\t<td>This value will turn the Remember Passwords Option On, which will cause the user to be prompted, following password entry, as to whether or not they would like to save the password.</td>\n  </tr>\n  <tr>\n    <td>Turn off</td>\n    <td>\"2\"</td>\n\t<td>This value will turn the Remember Passwords Option Off, which will prevent any saving of passwords.</td>\n  </tr>\n</table>\n</div>\t\n\n###Turn On/Off Save Form Data\nPivotal parm: No\n\nParm name: SetSaveFormData\n\nDescription: \n\n>This parm will allow you to turn the Save Form Data Option of the Default Android Web Browser On or Off.\n\n>Turning the Save Form Data Option On can make browsing more convenient by eliminating the need for the device user to re-enter the same information into the same form later. Turning the Save Form Data Option Off is generally more secure, especially on a device that might be shared, since it would prevent an unauthorized user viewing or re-entering sensitive information that was previously entered by an authorized user.\n\n<div class=\"parm-table\">\n <table class=\"table\">\n\t<tr>\n\t\t<th>Parm Option Name</th>\n\t\t<th>Parm Value</th>\n\t\t<th>Description</th>\n\t</tr>\n  <tr>\n    <td>Do not change</td>\n    <td>\"0\"</td>\n\t<td>This value (or the absence of this parm from the XML) will cause no change to whether or the Save Form Data Option is turned On or Off.</td>\n  </tr>\n  <tr>\n    <td>Turn on</td>\n    <td>\"1\"</td>\n\t<td>This value will turn the Save Form Data Option On, which will give the device user the option to save form data so it can be automatically re-entered into the same form later.</td>\n  </tr>\n  <tr>\n    <td>Turn off</td>\n    <td>\"2\"</td>\n\t<td>This value will turn the Save Form Data Option Off, which prevent any saving of form data.</td>\n  </tr>\n</table>\n</div>\t\n\n\n## Queries\n\n### Get All Browser Settings\n\n#### Input \n\n    :::XML\n    <wap-provisioningdoc>\n        <characteristic-query type = \"BrowserMgr\"/>\n    </wap-provisioningdoc>\n\n\n#### Output\n\n    :::XML\n    <wap-provisioningdoc>\n        <characteristic type=\"BrowserMgr\" version=\"4.3\">\n            <parm name=\"SetDefaultHomepage\" value=\"www.google.com\"/>\n            <parm name=\"SetRememberPasswords\" value=\"1\"/>\n            <parm name=\"SetSaveFormData\" value=\"1\"/>\n        </characteristic>\n    </wap-provisioningdoc>\n\n\n### Get Default Homepage Setting\n\n#### Input \n\n    :::XML\n    <wap-provisioningdoc>\n        <characteristic type = \"BrowserMgr\">\n            <parm-query name=\"SetDefaultHomepage\"/>\n        </characteristic>\t\n    </wap-provisioningdoc>\n\n#### Output\n\n    :::XML\n    <wap-provisioningdoc>\n        <characteristic type=\"BrowserMgr\" version=\"4.3\">\n            <parm name=\"SetDefaultHomepage\" value=\"www.google.com\"/>\n        </characteristic>\n    </wap-provisioningdoc>\n\n### Get Remember Password Setting\n\n#### Input \n\n    :::XML\n    <wap-provisioningdoc>\n        <characteristic type = \"BrowserMgr\">\n            <parm-query name=\"SetRememberPasswords\"/>\n        </characteristic>\t\n    </wap-provisioningdoc>\n\n#### Output\n\n    :::XML\n    <wap-provisioningdoc>\n        <characteristic type=\"BrowserMgr\" version=\"4.3\">\n            <parm name=\"SetRememberPasswords\" value=\"1\"/>\n        </characteristic>\n    </wap-provisioningdoc>\n\n### Get Save Forum Data Setting\n\n#### Input \n\n    :::XML\n    <wap-provisioningdoc>\n        <characteristic type = \"BrowserMgr\">\n            <parm-query name=\"SetSaveFormData\"/>\n        </characteristic>\t\n    </wap-provisioningdoc>\n\n#### Output\n\n    :::XML\n    <wap-provisioningdoc>\n        <characteristic type=\"BrowserMgr\" version=\"4.3\">\n            <parm name=\"SetSaveFormData\" value=\"1\"/>\n        </characteristic>\n    </wap-provisioningdoc>\n\n## Feature Compatibility\n\n<iframe src=\"compare.html#mx=4.3&csp=BrowserMgr&os=JB&embed=true\"></iframe> "},{"key":"guide-csp-camera","name":" CameraMgr","md":"# CameraMgr\n\n## About CameraMgr\n\n### Overview\n\nMany Zebra Android devices are equipped with mechanisms that may be used to take pictures, scan barcodes, and/or capture documents. Some Zebra Android devices may also be equipped with special-purpose mechanisms, such as lasers or imagers, which are optimized to scan barcodes. In some sensitive environments, it may be necessary to restrict the use of devices from taking pictures or capturing documents to avoid potential security risks.\n\nThe CameraMgr Feature Type allows you to control which of the mechanisms supported by a device can be used by the device user to take pictures or capture documents, and hence are considered to be cameras. For example you could prevent the device user from using all cameras on the device or selectively control which cameras the device user can use.\n\n**Note:** If a device is equipped with a mechanism that can be used to take pictures or capture documents, then that mechanism will be considered to be a camera, for the purposes of the CameraMgr Feature Type. For example, if a device is equipped with a CCD-based imager that is primarily designed to scan barcodes but also supports the ability to take pictures or capture documents, then that imager will be considered to be a camera and hence will need to support enable and disable. But if no method was available to use that imager to take pictures or capture documents, then it would not be considered a cameras, since it would not introduce the same camera-oriented security risks.\n\n### Main Functionality\n\n* Enable or disable the use of all Cameras\n* Enable or disable the use of the Front Facing Camera\n* Enable or disable the use of the Rear Facing Camera\n\n##Parameter Notes\n###All Cameras\nPivotal parm: Yes\n\nDescription: \n\n>This parm will enable or disable use of all of the cameras that are on the device, which may affect cameras that are not explicitly listed. In other words, this will globally allow or disallow all camera support.\n\n>**Note:** Enabling or disabling all cameras will affect all mechanism that are considered cameras that are supported on a device. This will be the case even if that device has more cameras than can be individually controlled on that device using the CameraMgr Feature Type. For example, if a device had a front facing camera, a rear facing, and a side-facing imager that can capture documents, all three would be considered cameras would be enabled or disabled together. This would be the cases even the side facing imager could not be enabled or disabled individually. Enabling or disabling all cameras may override prior enabling or disabling of individual cameras using the CameraMgr Feature Type or may be overridden for individual cameras by subsequent use of the CameraMgr Feature Type.\n\n<div class=\"parm-table\">\n <table class=\"table\">\n\t<tr>\n\t\t<th>Parm Option Name</th>\n\t\t<th>Parm Value</th>\n\t\t<th>Description</th>\n\t</tr>\n  <tr>\n    <td>Control Individual Cameras</td>\n    <td>\"0\"</td>\n\t<td>This value (or the absence of this parm from the XML) will cause no changes to whether any of the device's cameras can be used.</td>\n  </tr>\n  <tr>\n    <td>Enable ALL Cameras</td>\n    <td>\"1\"</td>\n\t<td>This value will cause use of all the device's cameras to be enabled, thus allowing the device user to use any of those cameras to take pictures, if an application exists on the device to do so.</td>\n  </tr>\n  <tr>\n    <td>Disable ALL Cameras</td>\n    <td>\"2\"</td>\n\t<td>This value will cause use of all the device's cameras to be disabled, thus preventing the device user from using any of those cameras to take pictures, even if an application exists on the device to do so.</td>\n  </tr>\n</table>\n</div>\t\n\n###Front Camera\nSettable if: The \"All Cameras\" parm is set to \"Control Individual Cameras\"\n\nPivotal parm: No\n\nParm name: UseFrontCamera\n\nDescription: \n\n>This parm will enable or disable the use of the device's front facing camera, which means that the user will be allowed or disallowed from using this camera.\n\n>If the device does not have a front facing camera, then an error will be returned in the Result XML document.\n\n<div class=\"parm-table\">\n <table class=\"table\">\n\t<tr>\n\t\t<th>Parm Option Name</th>\n\t\t<th>Parm Value</th>\n\t\t<th>Description</th>\n\t</tr>\n  <tr>\n    <td>Do not change</td>\n    <td>\"0\"</td>\n\t<td>This value (or the absence of this parm from the XML) will cause no changes to whether the device's front facing camera can be used.</td>\n  </tr>\n  <tr>\n    <td>Enable</td>\n    <td>\"1\"</td>\n\t<td>This value will cause use of the device's front facing camera to be enabled, thus allowing the device user to use that camera to take pictures, if an application exists on the device to do so.</td>\n  </tr>\n  <tr>\n    <td>Disable</td>\n    <td>\"2\"</td>\n\t<td>This value will cause use of the device's front facing camera to be disabled, thus preventing the device user from using that camera to take pictures, even if an application exists on the device to do so.</td>\n  </tr>\n</table>\n</div>\t\n\n###Rear Camera\nSettable if: The \"All Cameras\" parm is set to \"Control Individual Cameras\"\n\nPivotal parm: No\n\nParm name: UseRearCamera\n\nDescription: \n\n>This parm will enable or disable the use of the device's rear facing camera, which means that the user will be allowed or disallowed from using this camera.\n\n>If the device does not have a rear facing camera, then an error will be returned in the Result XML document.\n\n\n<div class=\"parm-table\">\n <table class=\"table\">\n\t<tr>\n\t\t<th>Parm Option Name</th>\n\t\t<th>Parm Value</th>\n\t\t<th>Description</th>\n\t</tr>\n  <tr>\n    <td>Do not change</td>\n    <td>\"0\"</td>\n\t<td>This value (or the absence of this parm from the XML) will cause no changes to whether the device's rear facing camera can be used.</td>\n  </tr>\n  <tr>\n    <td>Enable</td>\n    <td>\"1\"</td>\n\t<td>This value will cause use of the device's rear facing camera to be enabled, thus allowing the device user to use that camera to take pictures, if an application exists on the device to do so.</td>\n  </tr>\n  <tr>\n    <td>Disable</td>\n    <td>\"2\"</td>\n\t<td>This value will cause use of the device's rear facing camera to be disabled, thus preventing the device user from using that camera to take pictures, even if an application exists on the device to do so.</td>\n  </tr>\n</table>\n</div>\t\n\n##Example XML\n\n###Enable the Front Facing Camera\n\n\t:::XML\n\t<wap-provisioningdoc>\n\t\t<characteristic type=\"CameraMgr\" version=\"4.3\" >\n\t\t\t<parm name=\"UseFrontCamera\" value=\"1\"/>\n\t\t</characteristic>\n\t</wap-provisioningdoc>\n\n###Disable the Rear Facing Camera\n\n\t:::XML\n\t<wap-provisioningdoc>\n\t\t<characteristic type=\"CameraMgr\" version=\"4.3\" >\n\t\t\t<parm name=\"UseRearCamera\" value=\"2\"/>\n\t\t</characteristic>\n\t</wap-provisioningdoc>\n\n###Disable the Front Facing Camera and Enable the Rear Facing Camera\n\n\t:::XML\n\t<wap-provisioningdoc>\n\t\t<characteristic type=\"CameraMgr\" version=\"4.3\" >\n\t\t\t<parm name=\"UseFrontCamera\" value=\"2\"/>\n\t\t\t<parm name=\"UseRearCamera\" value=\"1\"/>\n\t\t</characteristic>\n\t</wap-provisioningdoc>\n\n###Enable All Cameras\n\n\t:::XML\n\t<wap-provisioningdoc>\n\t\t<characteristic type=\"CameraMgr\" version=\"4.3\" >\n\t\t\t<parm name=\"UseAllCameras\" value=\"1\"/>\n\t\t</characteristic>\n\t</wap-provisioningdoc>\n\n###Disable All Cameras\n\n\t:::XML\n\t<wap-provisioningdoc>\n\t\t<characteristic type=\"CameraMgr\" version=\"4.3\" >\n\t\t\t<parm name=\"UseAllCameras\" value=\"2\"/>\n\t\t</characteristic>\n\t</wap-provisioningdoc>\n\n\n## Queries\n\n### Get Use All Cameras\n\n#### Input \n\n    :::XML\n    <wap-provisioningdoc>\n        <characteristic type=\"CameraMgr\" >\n            <parm-query name=\"UseAllCameras\"/>\n        </characteristic>\n    </wap-provisioningdoc>\n\n#### Output\n\n    :::XML\n    <wap-provisioningdoc>\n        <characteristic type=\"CameraMgr\" version=\"4.3\" >\n            <parm name=\"UseAllCameras\" value=\"1\"/>\n        </characteristic>\n    </wap-provisioningdoc>\n\t\n### Get Use Front Camera\n\n#### Input \n\n    :::XML\n    <wap-provisioningdoc>\n        <characteristic type=\"CameraMgr\" >\n            <parm-query name=\"UseFrontCamera\"/>\n        </characteristic>\n    </wap-provisioningdoc>\n\n#### Output\n\n    :::XML\n    <wap-provisioningdoc>\n        <characteristic type=\"CameraMgr\" version=\"4.3\" >\n            <parm name=\"UseFrontCamera\" value=\"1\"/>\n        </characteristic>\n    </wap-provisioningdoc>\n\n### Get Use Rear Camera\n\n#### Input \n\n    :::XML\n    <wap-provisioningdoc>\n        <characteristic type=\"CameraMgr\" >\n            <parm-query name=\"UseRearCamera\"/>\n        </characteristic>\n    </wap-provisioningdoc>\n\n#### Output\n\n    :::XML\n    <wap-provisioningdoc>\n        <characteristic type=\"CameraMgr\" version=\"4.3\" >\n            <parm name=\"UseRearCamera\" value=\"1\"/>\n        </characteristic>\n    </wap-provisioningdoc>\n\n## Feature Compatibility\n\n<iframe src=\"compare.html#mx=4.3&csp=CameraMgr&os=JB&embed=true\"></iframe> \n"},{"key":"guide-csp-cellular","name":" CellularMgr","md":"# CellularMgr\n\n## About CellularMgr\n\n### Overview\n\nThe CellularMgr Feature Type allows you to control how a device's Cellular data connection is used. The CellularMgr Feature Type is supported only on Zebra Android devices that are equipped with Wireless Wide Area Network (WWAN) network adapters that enable access to a Cellular data network.\n\n**Note:** If a device does not have a Wireless Wide Area Network (WWAN) network adapter, then it will not support the Cellular data connections and hence will not support the CellularMgr Feature Type. Attempting to use the CellularMgr Feature Type on such a device will cause an error to be returned in the Result XML document.\n\nThe CellularMgr Feature Type provides the ability to change the state of various options On or Off, thus controlling whether the capability is operational. The CellularMgr Feature Type also provides the ability to enable or disable use of the same options. Disabling an option means that the option cannot be turned On or Off by the device user or programmatically, using the CellularMgr Feature Type. Enabling an option means that the option can be turned On or Off by the device user or programmatically, using the CellularMgr Feature Type. You can think of Turn On/Off as being like a switch and the Enable/Disable as being like a cover over the switch. When the cover is closed, the position of the switch cannot be changed.\n\nIn Android, the Data Roaming Option determines whether a device is allowed to communicate over Cellular data networks other than the one provided by its configured \"home\" mobile operator. Communicating over such \"foreign\" networks is called roaming and can be quite convenient, allowing a device user to operate seamlessly in many different locations.  But, depending on the networks involved and the terms of a specific Cellular data service plan, turning on the Data Roaming Option significantly increase telecom expenses. Turning off the Data Roaming Option can help limit such costs but limiting Cellular data connections to the \"home\" network.\n\nIn Android, the Background Data Option determines whether applications that are capable of performing communications in the background (i.e. while they are not the current visible running foreground application) should do so over a Cellular data network. Turning on the Background Data Option allows background communications over a Cellular data network and can improve the experience of the device user by allowing applications to have data ready \"when you ask for it\". For example, an email application might download emails while the device user is using another application or when the device's screen is turned off. Turning off the Background Data Option tells applications to utilize Cellular data connections only when running in the foreground.\n\n### Main Functionality\n\n* Enable or disable Data Roaming\n* Enable or disable Background Data\n* Turn Data Roaming On or Off  \n* Turn Background Data On or Off\n\n##Parameter Notes\n###Set the state of Data Roaming\nPivotal parm: No\n\nParm name: DataRoamingState\n\nDescription: \n\n>This parm allows you to change the state of the Data Roaming Option to On or Off.\n\n<div class=\"parm-table\">\n <table class=\"table\">\n\t<tr>\n\t\t<th>Parm Option Name</th>\n\t\t<th>Parm Value</th>\n\t\t<th>Description</th>\n\t</tr>\n  <tr>\n    <td>Do not change</td>\n    <td>\"0\"</td>\n\t<td>This value (or the absence of this parm from the XML) will cause no change to the current state of the Data Roaming Option.</td>\n  </tr>\n  <tr>\n    <td>Turn On</td>\n    <td>\"1\"</td>\n\t<td>This value will cause the Data Roaming Option to be turned On, thus allowing Cellular data connections when roaming.</td>\n  </tr>\n  <tr>\n    <td>Turn Off</td>\n    <td>\"2\"</td>\n\t<td>This value will cause the Data Roaming Option to be turned Off, thus disallowing Cellular data connections when roaming.</td>\n  </tr>\n</table>\n</div>\t\n\n###Set the state of Background Data\nPivotal parm: No\n\nParm name: BackgroundDataState\n\nDescription: \n\n>This parm allows you to change the state of the Background Data Option to On or Off.\n\n<div class=\"parm-table\">\n <table class=\"table\">\n\t<tr>\n\t\t<th>Parm Option Name</th>\n\t\t<th>Parm Value</th>\n\t\t<th>Description</th>\n\t</tr>\n  <tr>\n    <td>Do not change</td>\n    <td>\"0\"</td>\n\t<td>This value (or the absence of this parm from the XML) will cause no change to the current state of the Background Data Option.</td>\n  </tr>\n  <tr>\n    <td>Turn On</td>\n    <td>\"1\"</td>\n\t<td>This value will cause the Background Data Option to be turned On, thus allowing applications to communicate in the background over Cellular data connections.</td>\n  </tr>\n  <tr>\n    <td>Turn Off</td>\n    <td>\"2\"</td>\n\t<td>This value will cause the Background Data Option to be turned Off, thus disallowing applications from communicating in the background over Cellular data connections.</td>\n  </tr>\n</table>\n</div>\t\n\n###Enable/Disable Data Roaming\nPivotal parm: No\n\nParm name: DataRoamingUsage\n\nDescription: \n\n>This parm allows you to control whether the state of the Data Roaming Option can be changed.\n\n<div class=\"parm-table\">\n <table class=\"table\">\n\t<tr>\n\t\t<th>Parm Option Name</th>\n\t\t<th>Parm Value</th>\n\t\t<th>Description</th>\n\t</tr>\n  <tr>\n    <td>Do not change</td>\n    <td>\"0\"</td>\n\t<td>This value (or the absence of this parm from the XML) will cause no change to whether the state of the Data Roaming Option can be changed.</td>\n  </tr>\n  <tr>\n    <td>Enable</td>\n    <td>\"1\"</td>\n\t<td>This value will cause the state of the Data Roaming Option to be unlocked allowing it to be changed, either by the device user or by the CellularMgr Feature Type.</td>\n  </tr>\n  <tr>\n    <td>Disable</td>\n    <td>\"2\"</td>\n\t<td>This value will cause the state of the Data Roaming Option to be locked, preventing it from being changed, either by the device user or by the CellularMgr Feature Type.</td>\n  </tr>\n</table>\n</div>\t\n\n###Enable/Disable Background Data\nPivotal parm: No\n\nParm name: BackgroundDataUsage\n\nDescription: \n\n>This parm allows you to control whether the state of the Background Data Option can be changed.\n\n<div class=\"parm-table\">\n <table class=\"table\">\n\t<tr>\n\t\t<th>Parm Option Name</th>\n\t\t<th>Parm Value</th>\n\t\t<th>Description</th>\n\t</tr>\n  <tr>\n    <td>Do not change</td>\n    <td>\"0\"</td>\n\t<td>This value (or the absence of this parm from the XML) will cause no change to whether the state of the Background Data Option can be changed.</td>\n  </tr>\n  <tr>\n    <td>Enable</td>\n    <td>\"1\"</td>\n\t<td>This value will cause the state of the Background Data Option to be unlocked allowing it to be changed, either by the device user or by the CellularMgr Feature Type.</td>\n  </tr>\n  <tr>\n    <td>Disable</td>\n    <td>\"2\"</td>\n\t<td>This value will cause the state of the Background Data Option to be locked, preventing it from being changed, either by the device user or by the CellularMgr Feature Type.</td>\n  </tr>\n</table>\n</div>\t\n\n##Example XML\n### Turn Off Data Roaming and Background Data\n\t:::xml\n\t<wap-provisioningdoc>\n\t\t<characteristic type=\"CellularMgr\" version=\"4.3\" >\n\t\t\t<parm name=\"DataRoamingState\" value=\"2\"/>\n\t\t\t<parm name=\"BackgroundDataState\" value=\"2\"/>\n\t\t</characteristic>\n\t</wap-provisioningdoc>\n\n\n## Feature Compatibility\n\n<iframe src=\"compare.html#mx=4.3&csp=CellularMgr&os=JB&embed=true\"></iframe> "},{"key":"guide-csp-cert","name":" CertMgr","md":"# CertMgr\n\n## About CertMgr\n\n### Overview\n\nA Digital Certificate is an electronic document that can be used to prove an asserted identity. By possessing a valid Public Certificate and its matching Private Key, an entity can assert an identity and then, through Certificate Validation, prove to other entities that it is entitled to assert that identity. Certificate Validation is based on verification that an entity possesses the Private Key that is associated with the valid Public Certificate for the asserted identity and that was issued by a trusted Certificate Authority (CA).\n\nTo acquire a Public Certificate, an entity first generates a Public/Private Key pair. The entity then submits the Public Key along with identity information to a Certificate Authority (CA). The CA verifies the identity information provided by the requestor, issues a Public Certificate that contains the submitted Public Key and identity information, and signs the Public Certificate using its own Private Key. By signing a Public Certificate with its own Private Key, the CA enables other entities that trust that CA to trust the Public Certificate once they verify that it was signed by that CA. Signing also enables entities to verify that the Public Certificate is genuine and has not been modified since it was signed by the CA.\n\nDigital Certificates are issued for a specific duration, commonly called their Validity Window. A Certificate is not generally considered valid unless the current date is within the Validity Window for that Certificates. This requirement has two key implications. First, it means that entities that utilize Digital Certificates, especially those that perform Certificate Validation, need to know the correct date. Second, it means that entities that use Digital Certificates will need to periodically refresh them by replacing a soon-to-expire Certificate (where the current date is near the end of its Validity Window) with a newer, but compatible Certificate (where the identity information is the same but the current date is further from the end of its Validity Window).\n\nDigital Certificates are most commonly used in Android devices in two primary ways:\n\n* A Public Certificate can be used to establish trust by a device of some other entity, such as a server. The most common use of Public Certificates alone is to establish trust of a CA and hence of all Certificates issued by that CA. Such a Public Certificate is generally referred to as a CA Certificate. In addition, a Public Certificate could be used to verify that an application to be run on the device came from a trusted developer or to verify that a Server being accessed by the device is authentic.\n* Second, a Public Certificate can be paired with a Private Key to allow the device to assert and prove an identity to another entity. Such a pairing of a Public Certificate with a Private Key is often referred to as a Client Certificate because it is commonly used by a Client on device to prove an identity that it asserts to a Server. A Client Certificate might be used to authenticate the device to a Wireless Local Area Network (e.g. EAP-TLS) or to a Web Server (e.g. HTTPS).\n\nZebra Android devices can store Digital Certificates in two primary areas:\n\n* The Trusted Store is a protected area of the device that can only hold CA Certificates. The Trusted Store is present in the device by default and contains CA Certificates for many well-known and universally trusted CAs. The Trusted Store allows various System Applications to establish trust of CAs that issue other Certificates.\n* The Android Keystore is a protected area of the device that can hold both CA Certificates and Client Certificates. The Android Keystore must be initialized before it can be used and starts out empty. By adding CA Certificates to the Android Keystore, trust of additional CAs and Servers may be established. By adding Client Certificates to the Android Keystore, the device can be provided with the ability to assert and prove various identities.\n\nDigital Certificates are commonly acquired in the form of Certificate Files of various formats. Distinguished Encoding Rules (DER) is a standard scheme used to encode Digital Certificates. DER can be used directly to encode a Certificate as a binary Certificate File, which will usually have a file extension of .CER, but may also have a file extension of .CRT or .DER. DER can also be used in conjunction with Base64 encoding to produce a text Certificate File according to the Privacy-enhanced Electronic Mail (PEM) standard. Certificate Files only encode Public Certificates, never Private Keys.\n\nPrivate Keys are commonly generated or acquired in the form of a text Key File encoded according to the PEM standard. A common practice for Client Certificates is to combine a Public Certificate and a matching Private Key into a Container Files using the Public-Key Cryptography Standards (PKCS) standard PKCS12. PKCS12 is an archive file format for storing multiple cryptography objects as a single binary file, usually with a file extension of .PKCS12, .P12, or .PFX. Container Files constructed according to the PKCS12 standard are typically encrypted based on a password to protect the Private Key contained therein. Encrypted Container Files would require the original password to be supplied before they could be processed.\n\nThe CertMgr Feature Type allows you to initialize the Android Keystore, install or uninstall CA Certificates to the Trusted Store and Android Keystore and the install or uninstalled CA and/or Client Certificates to the Android Keystore.\n\n### Main Functionality\n\n* Initialize Android Keystore\n* Install or uninstall CA Certificates\n* Install or uninstall Client Certificates\n\n##Parameter Notes\n###Certificate Action\nPivotal parm: Yes\n\nDescription: \n\n>This parm allows you to specify whether to initialize the Android Keystore, Install a Certificate, or Uninstall a Certificate.\n\n<div class=\"parm-table\">\n <table class=\"table\">\n\t<tr>\n\t\t<th>Parm Option Name</th>\n\t\t<th>Parm Value</th>\n\t\t<th>Description</th>\n\t</tr>\n  <tr>\n    <td>Install certificate</td>\n    <td>\"1\"</td>\n\t<td>This value will cause a specified certificate to be installed on the device.</td>\n  </tr>\n  <tr>\n    <td>Uninstall certificate</td>\n    <td>\"2\"</td>\n\t<td>This value will cause a specified certificate to be uninstalled from the device.</td>\n  </tr>\n  <tr>\n    <td>Initialize Android Keystore</td>\n    <td>\"4\"</td>\n\t<td><p>This value will cause a new Android Keystore to be initialized.</p><b>Note:</b> Initializing the Android Keystore can only be done once. If an attempt is made to Initialize the Android Keystore when it has previously been initialized, via the CertMgr Feature Type or by the device user via the System Settings Menu, then an error will be returned in the Result XML. No method is currently provided, aside from an Enterprise Reset (which can be performed using the PowerMgr Feature Type) to return the Android Keystore to an uninitialized state or to re-initialize the Android Keystore.</p></td>\n  </tr>\n</table>\n</div>\t\n\n###Certificate Alias\nSettable if: The Certificate Action is \"Install certificate\" or \"Uninstall certificate\"\n\nPivotal parm: No\n\nParm name: CertAlias\n\nDescription: \n\n>This parm allows you to specify the Alias to be used to identify a Certificate. When installing a Certificate, the specified Alias is associated with the Certificate (and the corresponding Private Key for a Client Certificate). If a Certificate with the same Alias is already present, it will be replaced. When uninstalling a Certificate, the Alias associated with a previously installed Certificate should be specified. If a match is found, the matching Certificate will be removed. If an attempt is made to uninstall a Certificate for which no match is found, then an error will be returned in the Result XML.\n\nParm value input rules: \n\n* String with a minimum size of 1 character\n\n###Certificate Type\nSettable if: The Certificate Action is \"Install certificate\"\n\nPivotal parm: Yes\n\nDescription: \n\n>This parm is used to specify the type of Certificate to be installed.\n\n>**Note:** The Android Keystore must be initialized exactly once before the CertMgr Feature Type can be used to Install or Uninstall Certificates. The Android Keystore may be initialized using the CertMgr Feature Type or by a device user via the System Settings Menu.\n\n<div class=\"parm-table\">\n <table class=\"table\">\n\t<tr>\n\t\t<th>Parm Option Name</th>\n\t\t<th>Parm Value</th>\n\t\t<th>Description</th>\n\t</tr>\n  <tr>\n    <td>CA Certificate (.PEM file)</td>\n    <td>\"5\"</td>\n\t<td>This value indicates that the Certificate to be installed is a CA Certificate (contained within a .PEM or .CER file) that will be added to both the Trusted Store and Android Keystore.</td>\n  </tr>\n  <tr>\n    <td>Client Certificate (.PEM file)</td>\n    <td>\"6\"</td>\n\t<td>This value indicates that the Certificate to be installed is the Public Certificate only (contained within a .PEM or .CER file) for a Client Certificate that will be added only to the Android Keystore.</td>\n  </tr>\n  <tr>\n    <td>Client Certificate and Private Key (.PFX file)</td>\n    <td>\"8\"</td>\n\t<td>This value indicates that the Certificate to be installed is a Public Certificate and Private Key (contained within a .PFX file) for a Client Certificate that will be added only to the Android Keystore.</td>\n  </tr>\n  <tr>\n    <td>Client Certificate and Private Key (.P12 file)</td>\n    <td>\"9\"</td>\n\t<td>This value indicates that the Certificate to be installed is a Public Certificate and Private Key (contained within a .P12 file) for a Client Certificate that will be added only to the Android Keystore.</td>\n  </tr>\n  <tr>\n    <td>Client Certificate and Private Key (.PKCS12 file)</td>\n    <td>\"10\"</td>\n\t<td>This value indicates that the Certificate to be installed is a Public Certificate and Private Key (contained within a .PKCS12 file) for a Client Certificate that will be added only to the Android Keystore.</td>\n  </tr>\n</table>\n</div>\t\n\n###Certificate Method\nSettable if: The Certificate Action is \"Install certificate\"\n\nPivotal parm: Yes\n\nDescription: \n\n>This parm is used to specify the method to use to install the certificate.\n\n<div class=\"parm-table\">\n <table class=\"table\">\n\t<tr>\n\t\t<th>Parm Option Name</th>\n\t\t<th>Parm Value</th>\n\t\t<th>Description</th>\n\t</tr>\n  <tr>\n    <td>Reference certificate file</td>\n    <td>\"2\"</td>\n\t<td>This value indicates that the data for the Certificate to be Installed is contained with a file that exists in the device file system.</td>\n  </tr>\n  </table>\n</div>\t\n\n###Certificate File\nPivotal parm: No \n\nDescription: \n\n>This parm allows you to specify the path and name of the file in the device file system that contains the data for the Certificate to be installed. If an attempt is made to Install a Certificate using a path and name of a file that does not exist, is not readable, or that does not represent a contain the data for a valid Certificate of the specified type, then an error will be returned in the Result XML.\n\nIf the Certificate Action is \"Install certificate\" AND the Certificate Method is \"Reference certificate file\" AND the Certificate Type is \"CA Certificate (.PEM file)\"\n\n* Parm name: CertFileCA\n\nIf the Certificate Action is \"Install certificate\" AND the Certificate Method is \"Reference certificate file\" AND the Certificate Type is \"Client Certificate (.PEM file)\" or \"Client Certificate and Private Key (.PFX file)\" or \"Client Certificate and Private Key (.P12 file)\" or \"Client Certificate and Private Key (.PKCS12 file)\"\n\n* Parm name: CertFileClient\n\nParm value input rules: \n\n* String with a minimum size of 1 character and a maximum size of 255 characters\n\t\n###Adjust Clock?\nSettable if: The Certificate Action is \"Install certificate\"\n\nPivotal parm: No\n\nParm name: CertAdjustClock\n\nDescription: \n\n>This parm allows you to specify whether or not to the device clock should be adjusted automatically when the Certificate is installed if the current date on the device is outside of the Validity Window for the Certificate.\n\n>**Note:** This option allows you to solve the issue where a device may be unable to use a Certificate to get on a network (e.g. EAP-TLS) because the date on the device is not set properly (as it may not be on a fresh-out-of-the-box device) and hence the Certificate appears to be invalid (expired or not yet valid). If this parm has a value of \"true\", then if the date is outside the Validity Window for a Certificate that is being installed, the date of the device will be changed to the start date of the Validity Window for a Certificate. A common use case is to use this option to allow a Certificate to be used to join a network and then acquire the real date and time via that network (see [Clock Feature Type](#guide-csp-clock)).\n\nParm value input rules:\n\n* String with a value of \"true\" or \"false\".\n\n###Private Key Password\nSettable if: The Certificate Action is \"Install certificate\" *AND* the Certificate Type is \"Client Certificate and Private Key (.PFX file)\" or \"Client Certificate and Private Key (.P12 file)\" or \"Client Certificate and Private Key (.PKCS12 file)\"\n\nPivotal parm: No\n\nParm name: PrivateKeyPassword\n\nDescription: \n\n>This parm allows you to specify the password that is required to decrypt a Container File containing the Public Certificate and Private Key for a Client Certificate.\n\n>**Note:** If an attempt is made to use a Container File that is not encrypted or that was not encrypted using the specified password, then an error will be returned in the Result XML.\n\nParm value input rules: \n\n* String with a minimum of 1 character and a maximum of 32 characters\n\n###Keystore Password\nSettable if: The Certificate Action is \"Initialize Android Keystore\"\n\nPivotal parm: No\n\nParm name: KeystorePassword\n\nDescription: \n\n>This parm allows you to specify the password that will be used to Initialize the Android Keystore. Specifying an empty (length of zero) value (or the absence of this parm from the XML) will cause a random password to be generated to Initialize the Android Keystore.\n\n>**Note:** This password will never need to be supplied again to the CertMgr Feature Type once the Android Keystore has been successfully initialized since it will be able Install and Uninstall Certificates without needing this password. But the device user might need to know this password to perform management of Certificates using the System Settings Menu. If the password is lost or if a random password is generated, then the device user could not be supplied with the password and hence could never perform such management. This is generally not a problem since management of Certificates is generally a feature best left to MDMs and it is better to prevent the device user from performing such functions.\n\nParm value input rules: \n\n* String with a minimum of 1 character and a maximum of 32 characters\n\n##Example XML\n###Initialize the Android Keystore\n\nThe Android Keystore must be initialized exactly once before Certificates can be installed or uninstalled. If the device user has not initialized the Android Keystore via the System Settings Menu, and the CertMgr Feature Type has not previously been used to initialize the Android Keystore, then the CertMgr Feature Type should be used to initialize the Android Keystore, as shown below:\n\nWithout a password:\n\n\t:::XML\n\t<wap-provisioningdoc>\n\t\t<characteristic type=\"CertMgr\" version=\"4.2\" >\n\t\t\t<parm name=\"CertAction\" value=\"4\"/>\n\t\t</characteristic>\n\t</wap-provisioningdoc>\n\nWith a password:\n\n\t:::XML\n\t<wap-provisioningdoc>\n\t\t<characteristic type=\"CertMgr\" version=\"4.2\" >\n\t\t\t<parm name=\"CertAction\" value=\"4\"/>\n\t\t\t<characteristic type=\"keystore-details\">\n\t\t\t\t<parm name=\"KeystorePassword\" value=\"mobility\"/>\n\t\t\t</characteristic>\n\t\t</characteristic>\n\t</wap-provisioningdoc>\n\n###Install a CA Certificate (.PEM file)\n\t\n\t:::XML\t\n\t<wap-provisioningdoc>\n\t\t<characteristic type=\"CertMgr\" version=\"4.2\" >\n\t\t\t<parm name=\"CertAction\" value=\"1\"/>\n\t\t\t<characteristic type=\"cert-details\">\n\t\t\t\t<parm name=\"CertAlias\" value=\"mxtest\"/>\n\t\t\t\t<parm name=\"CertType\" value=\"5\"/>\n\t\t\t\t<parm name=\"CertMethod\" value=\"2\"/>\n\t\t\t\t<parm name=\"CertFileCA\" value=\"/enterprise/usr/persist/test.pem\"/>\n\t\t\t\t<parm name=\"CertAdjustClock\" value=\"false\"/>\n\t\t\t</characteristic>\n\t\t</characteristic>\n\t</wap-provisioningdoc>\n\t\n>**Note:** The above XML, with just a change of file name, could be used to install a CA Certificate from a .CER or .DER file, since all are DER encoded and hence supported via the same type.\n\n###Install a Client Certificate (.PEM file)\n\n\t:::XML\n\t<wap-provisioningdoc>\n\t\t<characteristic type=\"CertMgr\" version=\"4.2\" >\n\t\t\t<parm name=\"CertAction\" value=\"1\"/>\n\t\t\t<characteristic type=\"cert-details\">\n\t\t\t\t<parm name=\"CertAlias\" value=\"mxtest\"/>\n\t\t\t\t<parm name=\"CertType\" value=\"6\"/>\n\t\t\t\t<parm name=\"CertMethod\" value=\"2\"/>\n\t\t\t\t<parm name=\"CertFileClient\" value=\"/enterprise/usr/persist/test.pem\"/>\n\t\t\t\t<parm name=\"CertAdjustClock\" value=\"false\"/>\n\t\t\t</characteristic>\n\t\t</characteristic>\n\t</wap-provisioningdoc>\n\t\n>**Note:** The above XML would not normally be used to Install brand new Client Certificate since it only installs the Public Certificate and not the Private Key. The primary situation where the above XML might be used is when the Public Certificate and Private Key were previously installed, as in the next example, and the Public Certificate needed to be replaced (such as to renew it before it expires). In such a situation, if the Public and Private Key did not change, then it may be preferable to update the Public Certificate and leave the Private Key alone.\n\t\n###Install a Client Certificate and Private Key (.PFX file)\n\n\t:::XML\n\t<wap-provisioningdoc>\n\t\t<characteristic type=\"CertMgr\" version=\"4.2\" >\n\t\t\t<parm name=\"CertAction\" value=\"1\"/>\n\t\t\t<characteristic type=\"cert-details\">\n\t\t\t\t<parm name=\"CertAlias\" value=\"mxtest\"/>\n\t\t\t\t<parm name=\"CertType\" value=\"8\"/>\n\t\t\t\t<parm name=\"CertMethod\" value=\"2\"/>\n\t\t\t\t<parm name=\"CertFileClient\" value=\"/enterprise/usr/persist/test.pfx\"/>\n\t\t\t\t<parm name=\"CertAdjustClock\" value=\"false\"/>\n\t\t\t\t<parm name=\"PrivateKeyPassword\" value=\"mobility\"/>\n\t\t\t</characteristic>\n\t\t</characteristic>\n\t</wap-provisioningdoc>\n\t\n>**Note:** The above XML, with just a change of file name, could be used to install a Client Certificate and Private Key from a .P12 or .PKCS12 file, since all are PKCS12 encoded and hence are supported via the same type.\n\n###Remove a Certificate\n\n\t:::XML\n\t<wap-provisioningdoc>\n\t\t<characteristic type=\"CertMgr\" version=\"4.2\" >\n\t\t\t<parm name=\"CertAction\" value=\"2\"/>\n\t\t\t<characteristic type=\"cert-details\">\n\t\t\t\t<parm name=\"CertAlias\" value=\"mxtest\"/>\n\t\t\t</characteristic>\n\t\t</characteristic>\n\t</wap-provisioningdoc>\n\n## Feature Compatibility\n\n<iframe src=\"compare.html#mx=4.3&csp=CertMgr&os=JB&embed=true\"></iframe> "},{"key":"guide-csp-clock","name":" Clock","md":"# Clock\n\n## About Clock\n\n### Overview\n\nZebra Android devices contain Clock functionality that tracks the current Date and Time on the device, in Coordinated Universal Time (UTC), and that can calculate the current Date and Time, in Local Time Coordinates (LTC), for a device's configured location. UTC is effectively the same as the LTC at the Prime Meridian in Greenwich, England. LTC is computed from UTC by using an offset determined based on a configured Time Zone that us suitable for the location where the device is being used and any Daylight Saving Time offset that is required for that Time Zone.\n\nThe Clock Feature Type allows you to programmatically set the Date, Time, and Time Zone or to configure the device to automatically acquire the Date and Time from a Network Time Protocol (NTP) Server. To avoid complications related to LTC, all Date and Time values used by the Clock Feature Type must be represented as UTC.\n\nUsing UTC reduce complexity and ensures a deterministic result when setting the Date and Time, regardless of the configured Time Zone or any Daylight Saving Time offset that might apply. For example, if the Date and Time were set in LTC, then the order of setting Date, Time, and Time Zone could affect the actual results. Also, if LTC were used, then certain combinations would become invalid such as the times \"skipped\" during adjustment for Daylight Saving Time.\n\n### Main Functionality\n\n* Turn Auto Time On or Off\n* Set the Time Zone\n* Set the current Date\n* Set the current Time\n* Set the Auto Time NTP Server Address\n* Set the Auto Time Sync Interval\n\n##Parameter Notes\n### AutoTime\nPivotal parm: Yes\n\nDescription: \n\n>This parm allows you to control whether the Date and Time on the device should be set automatically or manually.\n\n>When AutoTime is turned On, the time will be acquired automatically, if possible. For devices operating on a Cellular network, AutoTime will typically cause the Date and Time to be from the carrier network and set on the device. For other devices, AutoTime will cause a specified NTP server to be automatically contacted on a specified interval and the Date and Time of the device to be set based on the UTC received from that server.\n\n>When AutoTime is turned Off, the Date, Time, and Time Zone can be set explicitly and will count forward unless/until explicitly changed again.\n\n<div class=\"parm-table\">\n <table class=\"table\">\n\t<tr>\n\t\t<th>Parm Option Name</th>\n\t\t<th>Parm Value</th>\n\t\t<th>Description</th>\n\t</tr>\n  <tr>\n    <td>False</td>\n    <td>\"false\"</td>\n\t<td>This value (or the absence of this parm from the XML) will turn AutoTime Off, thus preventing the automatic contacting of an NTP Server and automatic setting of the Date and Time of the device.</td>\n  </tr>\n  <tr>\n    <td>True</td>\n    <td>\"true\"</td>\n\t<td>This value will turn AutoTime On, thus enabling the automatic contacting of an NTP Server and automatic setting of the Date and Time of the device.</td>\n  </tr>\n</table>\n</div>\t\n\n####NTPServer\nSettable if: AutoTime is \"true\"\n\nPivotal parm: No\n\nParm name: NTPServer\n\nDescription: \n\n>This parm allows you to specify the URL of the NTP server that will be contacted periodically to acquire the Date and Time and set them on the device. Specifying an empty (length of zero) value (or the absence of this parm from the XML) will cause a default NTP server to be used.\n\n>**Note:** For devices operating on Cellular networks, the Date and Time may be obtained directly from the carrier network and may not require contacting an NTP server. On such devices, the Time Zone may also be automatically acquired from the carrier network and set onto the device.\n\n####SyncInterval\nSettable if: AutoTime is \"true\"\n\nPivotal parm: No\n\nParm name: SyncInterval\n\nDescription: \n\n>This parm allows you to specify the interval at which an NTP server will automatically be contacted to acquire the Date and Time to set on the device.\n\n<div class=\"parm-table\">\n <table class=\"table\">\n\t<tr>\n\t\t<th>Parm Option Name</th>\n\t\t<th>Parm Value</th>\n\t\t<th>Description</th>\n\t</tr>\n  <tr>\n    <td>30 minutes</td>\n    <td>\"00:30:00\"</td>\n\t<td>This value will cause the device to attempt to contact the NTP server every 30 minutes.</td>\n  </tr>\n  <tr>\n    <td>60 minutes</td>\n    <td>\"00:60:00\"</td>\n\t<td>This value will cause the device to attempt to contact the NTP server every 60 minutes.</td>\n  </tr>\n  <tr>\n    <td>6 hours</td>\n    <td>\"06:00:00\"</td>\n\t<td>This value will cause the device to attempt to contact the NTP server every 6 hours.</td>\n  </tr>\n  <tr>\n    <td>24 hours</td>\n    <td>\"24:00:00\"</td>\n\t<td>This value will cause the device to attempt to contact the NTP server every 24 hours.</td>\n  </tr>\n</table>\n</div>\t\n\n### TimeZone \nSettable if: AutoTime is \"false\"\n\nPivotal parm: No\n\nParm name: TimeZone\n\nDescription: \n\n>This parm allows you to set the TimeZone that will be used to calculate LTC on the device. Specifying an empty (length of zero) value (or the absence of this parm from the XML) will cause a the TimeZone currently in use on the device to be unchanged.\n\nParm value input rules: \n\n* String with a maximum of 255 characters\n* The string must be one of the following:\n\t* A value equal to \"GMT\", indicating that the Time Zone should be the Greenwich Mean Time.\n\t* A value equal to \"UTC\", which is equivalent to GMT\n\t* A value that starts with the prefix \"GMT\" with an offset in hours or hours and minutes, for example:\n\t\t* GMT-10 (10 hours before GMT)\n\t\t* GMT+05:30 (5 1/2 hours after GMT)\n\t* An Olsen/tz Time Zone identifier (e.g. \"America/New_York\")\n\t\t* See https://en.wikipedia.org/wiki/List_of_tz_database_time_zones\n\n### Date \nSettable if: AutoTime is \"false\"\n\nPivotal parm: No\n\nParm name: Date\n\nDescription: \n\n>This parm allows you to set the Date on the device. The Date must be specified in UTC and not in LTC. This means that the Date specified in UTC might be the same as the Date in LTC or might be one day earlier or later, depending on any offsets applied due to Time Zone and/or Daylight Saving Time. Specifying an empty (length of zero) value (or the absence of this parm from the XML) will cause the current Date on the device to be left unchanged.\n\nParm value input rules: \n\n* String with a size of exactly 0 or 10 characters\n* If non-empty, the string must be in the format of \"yyyy-MM-dd\" (e.g. \"2013-12-31\" would set the Date to UTC December 31, 2013\".\n\n### Time\nSettable if: AutoTime is \"false\"\n\nPivotal parm: No\n\nParm name: Time\n\nDescription: \n\n>This parm allows you to set the Time on the device. The Time must be specified in UTC and not in LTC. Specifying an empty (length of zero) value (or the absence of this parm from the XML) will cause the current Time on the device to be left unchanged.\n\nParm value input rules: \n\n* String with a size of exactly 0 or 8 characters\n* If non-empty, the string must be in the format of \"HH:mm:ss\", (e.g. \"23:59:59\" specifies one second before midnight).\n\n### Usage Notes\n\n####Example #1\nWe want to set local time of the device as follows:\n\n* Device Location = New York, New York, USA\n* Date = January 15, 2010\n* Time = 2:15PM (14:15:00)\n\nWe can then make the following observations:\n\n* The Device Location is in the Eastern USA Time Zone\n* The GMT offset for that Time Zone is -5 hours\n* That Time Zone does not observe Daylight Time on that Date\n\nThe values specified to the Clock Feature Type would therefore be:\n\n* TimeZone = \"America/New_York\"\n* Date = \"2010-01-15\"\n* Time = \"19:15:00\"\n\nThe above UTC values would be converted to the desired LTC by:\n\n* Applying the GMT offset for the selected Time Zone, which is -5 hours (-5 or -05:00)\n\t* 19:15:00 - 05:00 = 14:15:00\n* Applying Daylight Saving Time offset, since it is not in effect in that Time Zone on that Date\n\t* Daylight Saving Time began March 14, 2010\n\t* Daylight Saving Time ended November 7, 2019\n* Applying no Date offset, since the Time offset did not cause \"roll over\" or \"roll under\"\n\n####Example #2\n\nWe want to set the local time of the device as follows:\n\n* Device Location = Bangalore, India\n* Date = July 11, 2014\n* Time = 2:55AM (02:00:00)\n\nWe can then make the following observations:\n\n* The Device Location is in the India Time Zone\n* The GMT offset for that Time Zone is +5 1/2 hours (+05:00)\n* That Time Zone does not observe Daylight Time\n\nThe values specified to the Clock Feature Type would therefore be:\n\n* TimeZone = \"Asia/Calcutta\"\n* Date = \"2010-07-10\"\n* Time = \"21:25:00\"\n\nThe above UTC values would be converted to the desired LTC by:\n\n* Applying the GMT offset for the selected Time Zone, which is +5 1/2 hours (+05:30)\n\t* 21:25:00 + 05:30 = 26:55:00 = 02:55:00 + 1 day\n* Applying no Daylight Saving Time offset\n\t* India does not observe Daylight Saving Time\n* Applying a +1 day Date offset, since the Time offset caused a \"roll over\"\n\t* 26:55:00 = 02:55:00 +1 day\n\n##Example XML\n### Set the Time Zone, Date, and Time\n\n    :::XML\n    <wap-provisioningdoc>\n        <characteristic type=\"Clock\" version=\"4.2\" >\n            <parm name=\"AutoTime\" value=\"false\"/>\n            <parm name=\"TimeZone\" value=\"GMT-5\"/>\n\t\t\t<parm name=\"Date\" value=\"2015-07-09\"/>\n            <parm name=\"Time\" value=\"10:25:33\"/>\n        </characteristic>\n    </wap-provisioningdoc>\n\t\n###Set the NTP Server Interval\n\n\t:::XML\n\t<wap-provisioningdoc>\n\t\t<characteristic type=\"Clock\" version=\"4.2\" >\n\t\t\t<parm name=\"AutoTime\" value=\"true\"/>\n\t\t\t<characteristic type=\"AutoTimeDetails\">\n\t\t\t\t<parm name=\"SyncInterval\" value=\"00:30:00\"/>\n\t\t\t</characteristic>\n\t\t</characteristic>\n\t</wap-provisioningdoc>\n\t\n###Set the NTP Server IP Address and Interval\n\n\t:::XML\n\t<wap-provisioningdoc>\n\t\t<characteristic type=\"Clock\" version=\"4.2\" >\n\t\t\t<parm name=\"AutoTime\" value=\"true\"/>\n\t\t\t<characteristic type=\"AutoTimeDetails\">\n\t\t\t\t<parm name=\"NTPServer\" value=\"1.2.3.4\"/>\n\t\t\t\t<parm name=\"SyncInterval\" value=\"00:30:00\"/>\n\t\t\t</characteristic>\n\t\t</characteristic>\n\t</wap-provisioningdoc>\n\n\n## Feature Compatibility\n\n<iframe src=\"compare.html#mx=4.3&csp=Clock&os=JB&embed=true\"></iframe> "},{"key":"guide-csp-componentmgr","name":" ComponentMgr","md":"# ComponentMgr\n\n## About ComponentMgr\n\n### Overview\n\nThe ComponentMgr Feature Type allows you to configure the state and usage of specific subsystems on the device, such as Ethernet. State allows you to control whether the subsystem is On (active) or Off (inactive). Usage allows you to control (enable or disable) whether the state of a subsystem can be changed (turned On or Off) by the device user using the System Settings Menu or programmatically using the ComponentMgr Feature Type. If you try to use the ComponentMgr Feature Type to control the state of a subsystem for which usage is currently disabled, then an error will be returned in the Result XML document.\n\n>**Note:** Not every device will support every subsystem. For example, some devices have no support for Ethernet. If you try to use the ComponentMgr Feature Type to control the state or usage of a subsystem that is not supported on a given device, then an error will be returned in the Result XML document.\n\n### Main Functionality\n\n* Turn Ethernet On or Off\n* Enable or Disable Ethernet Usage\n\n##Parameter Notes\n###Ethernet Usage\n\nPivotal parm: No\n\nParm name: EthernetUsage\n\nDescription: \n\n>This parm allows you to control whether the state of the Ethernet Option can be changed.\n\n>If the usage of Ethernet is Disabled and then Enabled, the state of Ethernet, either On or Off, will be the same as it was before it was Disabled.\n\n<div class=\"parm-table\">\n <table class=\"table\">\n\t<tr>\n\t\t<th>Parm Option Name</th>\n\t\t<th>Parm Value</th>\n\t\t<th>Description</th>\n\t</tr>\n  <tr>\n    <td>Do not change</td>\n    <td>\"0\"</td>\n\t<td>This value (or the absence of this parm from the XML) will cause no changes to whether the Ethernet can be used.</td>\n  </tr>\n  <tr>\n    <td>Enable</td>\n    <td>\"1\"</td>\n\t<td>This value will cause the state of the Ethernet Option to be unlocked, allowing it to be changed, either by the device user or by the ComponentMgr Feature Type.</td>\n  </tr>\n  <tr>\n    <td>Disable</td>\n    <td>\"2\"</td>\n\t<td>This value will cause the state of the Ethernet Option to be locked, preventing it from being changed, either by the device user or by the ComponentMgr Feature Type.</td>\n  </tr>\n</table>\n</div>\t\n\n###Ethernet State\n\nPivotal parm: No\n\nParm name: EthernetState\n\nDescription: \n\n>This parm allows you to change the state of the Ethernet Option to On or Off.\n\n<div class=\"parm-table\">\n <table class=\"table\">\n\t<tr>\n\t\t<th>Parm Option Name</th>\n\t\t<th>Parm Value</th>\n\t\t<th>Description</th>\n\t</tr>\n  <tr>\n    <td>Do not change</td>\n    <td>\"0\"</td>\n\t<td>This value (or the absence of this parm from the XML) will cause no changes to whether the Ethernet Option is turned On or Off.</td>\n  </tr>\n  <tr>\n    <td>Turn On</td>\n    <td>\"1\"</td>\n\t<td>This value will cause the Ethernet Option to be turned On, thus allowing the use of an Ethernet connection on the device.</td>\n  </tr>\n  <tr>\n    <td>Turn Off</td>\n    <td>\"2\"</td>\n\t<td>This value will cause the Ethernet Option to be turned Off, thus disallowing the use of an Ethernet connection on the device.</td>\n  </tr>\n</table>\n</div>\t\n\n## Feature Compatibility\n\n<iframe src=\"compare.html#mx=4.3&csp=ComponentMgr&os=JB&embed=true\"></iframe> "},{"key":"guide-csp-conditionmgr","name":" ConditionMgr","md":"# ConditionMgr\n\n## About ConditionMgr\n\n### Overview\nThe ConditionMgr Feature Type is somewhat unique since, unlike most other Feature Types, the primary purpose of the ConditionMgr Feature Type is to fail, under just the right circumstances. Most Feature Types are used to accomplish some specific purpose and a failure generally indicates that the desired operation could not be performed. The ConditionMgr Feature Type allows you to check selected Conditions and cause a failure if they do or do not exist on the device.\n\nTo understand how to use the ConditionMgr Feature Type, it is important to understand how error handling works in the MXMS.  This is explained in more detail in the XmlMgr Feature Type.\n\nThe ConditionMgr Feature Type is designed to create failures. As such, it cannot deliver full value when it is used with the Default Error-Handling Mode since the failure would just be reported, but would not stop execution. To gain full value from the ConditionMgr Feature Type, the \"Execute until error, then stop\" Error Handling Mode should be used. A common use case for the ConditionMgr Feature Type is to check for some Condition at the start of a sequence of Features that indicates that those Features cannot or should not be executed, and hence to stop executing immediately and thereby avoid executing those Features. The ConditionMgr Feature Type results in a failure, the ConditionMgr Feature Type allows control over what failure is reported, thus assisting with troubleshooting the source of the failure.\n\nThe ConditionMgr Feature Type can handle situations where the Condition to be tested may not happen immediately, such as when a device user must perform some action.  To handle such cases, the Condition test can be repeated until the desired state has been reached or until a specified number of retries has been exhausted.  To handle cases where the desired Condition may require device user action, the ConditionMgr Feature Type allows collaboration with the StatusMgr Feature Type to provide a message to notify the device user of the need for action.\n\n### Main Functionality\n* Test for a Condition and return failure if the specified Condition is met or not met\n\t* Only currently supported Condition is \"Have any valid IP Address\"\n* Specify a failure message to return for a failure\n* Retry up to a specified number of tries, with a specified delay between tries\n* Specify a waiting status message to display (via StatusMgr) while trying/retrying\n\n\n##Parameter Notes\n###Data Type\nPivotal parm: Yes\n\nDescription: \n\n>This parm allows you to select the Data Type of the Condition you want to Test.\n\n<div class=\"parm-table\">\n <table class=\"table\">\n\t<tr>\n\t\t<th>Parm Option Name</th>\n\t\t<th>Parm Value</th>\n\t\t<th>Description</th>\n\t</tr>\n  <tr>\n    <td>Boolean</td>\n    <td>\"1\"</td>\n\t<td>This value will set the Data Type of the Condition to test to be Boolean. A Boolean Data Type can represent only values of \"true\" or \"false\" and hence can be used directly as the Condition to Test.</td>\n  </tr>\n <!-- <tr>\n    <td>Integer</td>\n    <td>\"2\"</td>\n\t<td>This value will set the Data Type of the Condition to test to be an integer.</td>\n  </tr>\n  <tr>\n    <td>String</td>\n    <td>\"3\"</td>\n\t<td>This value will set the Data Type of the Condition to test to be a string.</td>\n  </tr>\n  -->\n</table>\n</div>\t\n\n###Boolean Data Source\nSettable if: The Data Type is \"Boolean\"\n\nPivotal parm: Yes\n\nDescription: \n\n>This parm allows you to select the Boolean Data Source that you want to Test for the Condition.\n\n<div class=\"parm-table\">\n <table class=\"table\">\n\t<tr>\n\t\t<th>Parm Option Name</th>\n\t\t<th>Parm Value</th>\n\t\t<th>Description</th>\n\t</tr>\n<!--  <tr>\n    <td>Boolean System Property</td>\n    <td>\"1\"</td>\n\t<td></td>\n  </tr> -->\n  <tr>\n    <td>Pre-defined System Boolean Value</td>\n    <td>\"2\"</td>\n\t<td>This value will indicate that the Condition to Test will be selected from a pre-defined set of System Boolean Values. System Boolean Values have fixed rules by which the System determines the result and typically allow you to test key aspects that reflect the current state or condition of the device.</td>\n  </tr>\n<!--  <tr>\n    <td>Boolean System Setting</td>\n    <td>\"3\"</td>\n\t<td></td>\n  </tr>\n  <tr>\n    <td>Custom Class Boolean Member</td>\n    <td>\"4\"</td>\n\t<td></td>\n  </tr>\n  <tr>\n    <td>Pre-defined System Boolean Function</td>\n    <td>\"5\"</td>\n\t<td></td>\n  </tr> -->\n</table>\n</div>\t\n\n<!--\n####Boolean System Property\nSettable if: The Data Type is \"Boolean\" *AND* the Boolean Data Source is \"Boolean System Property\"\n\nPivotal parm: No\n\nParm name: BooleanSystemProperty\n\nDescription: \n\n>Select the Boolean System Property to Test\n\n<div class=\"parm-table\">\n <table class=\"table\">\n\t<tr>\n\t\t<th>Parm Option Name</th>\n\t\t<th>Parm Value</th>\n\t\t<th>Description</th>\n\t</tr>\n  <tr>\n    <td>GMS Build</td>\n    <td>\"ro.config.bsp.gms\"</td>\n\t<td></td>\n  </tr>\n  <tr>\n    <td>FIPS Build</td>\n    <td>\"ro.config.bsp.fips\"</td>\n\t<td></td>\n  </tr>\n  <tr>\n    <td>BETA Build</td>\n    <td>\"ro.config.bsp.beta\"</td>\n\t<td></td>\n  </tr>\n</table>\n</div>\t\n-->\n\n####Boolean System Value\nSettable if: The Data Type is \"Boolean\" *AND* the Boolean Data Source is \"Pre-defined System Boolean Value\"\n\nPivotal parm: No\n\nParm name: BooleanSystemValue\n\nDescription: \n\n>This parm allows you to select the Boolean System Value that you want to Test for the Condition.\n\n<div class=\"parm-table\">\n <table class=\"table\">\n\t<tr>\n\t\t<th>Parm Option Name</th>\n\t\t<th>Parm Value</th>\n\t\t<th>Description</th>\n\t</tr>\n<!--  <tr>\n    <td>Battery is Charging</td>\n    <td>\"1\"</td>\n\t<td></td>\n  </tr> -->\n  <tr>\n    <td>Have any valid IP Address</td>\n    <td>\"2\"</td>\n\t<td><p>This value indicates that the Test to perform for the Condition should be based on whether the device currently has any valid IP Address assigned to it for any active network adapter.</p><p><b>Note:</b> Since a value of \"true\" is returned whenever a valid IP Address from any network adapter, this cannot be used to determine when an IP Address is acquired from a network adapter (e.g. Ethernet) while a device already has an IP address from another network adapter (e.g. Wi-Fi).</p><p>This value is typically used to determine that a connection has been successfully established and that subsequent Features, such as using the FileMgr Feature Type, can successfully be used since a viable network connection exists.  Since it might take a while for a newly established network connection to acquire a valid IP Address, it is often desirable to allow for some time before returning a failure.</p><p>A common use case for this value is when the ComponentMgr Feature Type has been used to Turn Ethernet On and we want to wait until a valid IP Address is acquired before proceeding.  Since establishing an Ethernet network connection may require the device user to insert the device into a cradle, a device user notification may be appropriate.  And if a valid IP Address is not acquired within a reasonably time, then a failure can be generated to stop execution of subsequent Features.</p></td>\n  </tr>\n<!--  <tr>\n    <td>USB ADB is connected</td>\n    <td>\"3\"</td>\n\t<td></td>\n  </tr>\n  <tr>\n    <td>Wi-Fi is ON</td>\n    <td>\"4\"</td>\n\t<td></td>\n  </tr>\n  <tr>\n    <td>Have a valid Wi-Fi IP Address</td>\n    <td>\"5\"</td>\n\t<td></td>\n  </tr>\n  <tr>\n    <td>Cellular is ON</td>\n    <td>\"6\"</td>\n\t<td></td>\n  </tr>\n  <tr>\n    <td>Have a valid Cellular IP Address</td>\n    <td>\"7\"</td>\n\t<td></td>\n  </tr>\n  <tr>\n    <td>Ethernet is ON</td>\n    <td>\"8\"</td>\n\t<td></td>\n  </tr>\n  <tr>\n    <td>Have a valid Ethernet IP Address</td>\n    <td>\"9\"</td>\n\t<td></td>\n  </tr>\n  <tr>\n    <td>Bluetooth is ON</td>\n    <td>\"10\"</td>\n\t<td></td>\n  </tr>\n  <tr>\n    <td>GPS is ON</td>\n    <td>\"11\"</td>\n\t<td></td>\n  </tr>\n  <tr>\n    <td>NFC is ON</td>\n    <td>\"12\"</td>\n\t<td></td>\n  </tr>\n  <tr>\n    <td>Accumulator 1</td>\n    <td>\"13\"</td>\n\t<td></td>\n  </tr>\n  <tr>\n    <td>Accumulator 2</td>\n    <td>\"14\"</td>\n\t<td></td>\n  </tr> -->\n</table>\n</div>\t\n\n<!--\n####Boolean System Setting\nSettable if:  The Data Type is \"Boolean\" *AND* the Boolean Data Source is \"Boolean System Setting\"\n\nPivotal parm: No\n\nParm name: BooleanSystemSetting\n\nDescription: \n\n>Select the Boolean System Setting to Test\n\nParm value input rules: \n\n* String with a minimum of 1 character\n\n####Boolean Custom Class Name\nSettable if: The Data Type is \"Boolean\" *AND* the Boolean Data Source is \"Custom Class Boolean Member\"\n\nPivotal parm: No\n\nParm name: BooleanCustomClass\n\nDescription: \n\n>Enter the Class Name from which to Acquire a Boolean Value\n\nParm value input rules: \n\n* String with a minimum of 1 character\n\n####Boolean Custom Member Name\nSettable if: The Data Type is \"Boolean\" *AND* the Boolean Data Source is \"Custom Class Boolean Member\"\n\nPivotal parm: No\n\nParm name: BooleanCustomMember\n\nDescription: \n\n>Enter the Member Name for which to Acquire a Boolean Value\n\nParm value input rules: \n\n* String with a minimum of 1 character\n\n####Boolean Custom Arguments\nSettable if: The Data Type is \"Boolean\" *AND* the Boolean Data Source is \"Custom Class Boolean Member\"\n\nPivotal parm: No\n\nParm name: BooleanCustomArgs\n\nDescription: \n\n>Select the Method Arguments to Pass to the Member (if a method)\n\nParm value input rules: \n\n* String with a minimum of 1 character\n\n####Boolean System Function\nSettable if: The Data Type is \"Boolean\" *AND* the Boolean Data Source is \"Pre-defined System Boolean Function\"\n\nPivotal parm: Yes\n\nDescription: \n\n>Select the Boolean System Function to Test\n\n<div class=\"parm-table\">\n <table class=\"table\">\n\t<tr>\n\t\t<th>Parm Option Name</th>\n\t\t<th>Parm Value</th>\n\t\t<th>Description</th>\n\t</tr>\n  <tr>\n    <td>Check for File Existence</td>\n    <td>\"1\"</td>\n\t<td></td>\n  </tr>\n  <tr>\n    <td>Attempt to Ping IP Address</td>\n    <td>\"2\"</td>\n\t<td></td>\n  </tr>\n</table>\n</div>\t\n\n####File Path and Name\nSettable if: The Data Type is \"Boolean\" *AND* the Boolean Data Source is \"Pre-defined System Boolean Function\" *AND* Boolean System Function is \"Check for File Existence\"\n\nPivotal parm: No\n\nParm name: ArgFilePathAndName\n\nDescription: \n\n>Select the Path and Name of the File to Check\n\nParm value input rules: \n\n* String with a minimum of 1 character\n\n####IP Address\nSettable if: The Data Type is \"Boolean\" *AND* the Boolean Data Source is \"Pre-defined System Boolean Function\" *AND* Boolean System Function is \"Attempt to Ping IP Address\"\n\nPivotal parm: No\n\nParm name: ArgIpAddress\n\nDescription: \n\n>Select the IP Address to Ping\n\nParm value input rules: \n\n* The value must be a valid IPV4 address\n\n####Boolean Condition Test\nSettable if: The Data Type is \"Boolean\"\n\nPivotal parm: No\n\nParm name: BooleanConditionTest\n\nDescription: \n\n>Select the Boolean Condition Test to Perform\n\n<div class=\"parm-table\">\n <table class=\"table\">\n\t<tr>\n\t\t<th>Parm Option Name</th>\n\t\t<th>Parm Value</th>\n\t\t<th>Description</th>\n\t</tr>\n  <tr>\n    <td>None</td>\n    <td>\"0\"</td>\n\t<td></td>\n  </tr>\n  <tr>\n    <td>OR with Accumulator 1</td>\n    <td>\"1\"</td>\n\t<td></td>\n  </tr>\n  <tr>\n    <td>OR with Accumulator 2</td>\n    <td>\"2\"</td>\n\t<td></td>\n  </tr>\n  <tr>\n    <td>AND with Accumulator 1</td>\n    <td>\"3\"</td>\n\t<td></td>\n  </tr>\n  <tr>\n    <td>AND with Accumulator 2</td>\n    <td>\"4\"</td>\n\t<td></td>\n  </tr>\n</table>\n</div>\t\n-->\n\n<!--\n###Integer Data Source\nSettable if: The Data Type is \"Integer\"\n\nPivotal parm: Yes\n\nDescription: \n\n>Select the Integer Data Source of the Condition to Test\n\n<div class=\"parm-table\">\n <table class=\"table\">\n\t<tr>\n\t\t<th>Parm Option Name</th>\n\t\t<th>Parm Value</th>\n\t\t<th>Description</th>\n\t</tr>\n  <tr>\n    <td>Integer System Property</td>\n    <td>\"1\"</td>\n\t<td></td>\n  </tr>\n  <tr>\n    <td>Pre-defined System Integer Value</td>\n    <td>\"2\"</td>\n\t<td></td>\n  </tr>\n  <tr>\n    <td>Integer System Setting</td>\n    <td>\"3\"</td>\n\t<td></td>\n  </tr>\n  <tr>\n    <td>Custom Class Integer Member</td>\n    <td>\"4\"</td>\n\t<td></td>\n  </tr>\n</table>\n</div>\t\n\n####Integer System Property\nSettable if: The Data Type is \"Integer\" *AND* the Integer Data Source is \"Integer System Property\"\n\nPivotal parm: No\n\nParm name: IntegerSystemProperty\n\nDescription: \n\n>Select the Integer System Property to Test\n\n<div class=\"parm-table\">\n <table class=\"table\">\n\t<tr>\n\t\t<th>Parm Option Name</th>\n\t\t<th>Parm Value</th>\n\t\t<th>Description</th>\n\t</tr>\n  <tr>\n    <td>Platform SDK Version</td>\n    <td>\"ro.build.version.sdk\"</td>\n\t<td></td>\n  </tr>\n  <tr>\n    <td>BSP Major Version</td>\n    <td>\"ro.config.bsp.major\"</td>\n\t<td></td>\n  </tr>\n  <tr>\n    <td>BSP Minor Version</td>\n    <td>\"ro.config.bsp.minor\"</td>\n\t<td></td>\n  </tr>\n  <tr>\n    <td>BSP Build Number</td>\n    <td>\"ro.config.bsp.build\"</td>\n\t<td></td>\n  </tr>\n</table>\n</div>\t\n\n####Integer System Value\nSettable if: The Data Type is \"Integer\" *AND* the Integer Data Source is \"Pre-defined System Integer Value\"\n\nPivotal parm: No\n\nParm name: IntegerSystemValue\n\nDescription: \n\n>Select the Integer System Value to Test\n\n<div class=\"parm-table\">\n <table class=\"table\">\n\t<tr>\n\t\t<th>Parm Option Name</th>\n\t\t<th>Parm Value</th>\n\t\t<th>Description</th>\n\t</tr>\n  <tr>\n    <td>Battery Level</td>\n    <td>\"\"</td>\n\t<td></td>\n  </tr>\n  <tr>\n    <td>Battery Health</td>\n    <td>\"\"</td>\n\t<td></td>\n  </tr>\n  <tr>\n    <td>Wi-Fi Signal Quality</td>\n    <td>\"\"</td>\n\t<td></td>\n  </tr>\n  <tr>\n    <td>WWAN Signal Quality</td>\n    <td>\"\"</td>\n\t<td></td>\n  </tr>\n</table>\n</div>\t\n\n####Integer System Setting\nSettable if: The Data Type is \"Integer\" *AND* the Integer Data Source is \"Integer System Setting\"\n\nPivotal parm: \n\nParm name: IntegerSystemSetting\n\nDescription: \n\n>Select the Integer System Setting to Test\n\nParm value input rules: \n\n* String with a minimum of 1 character\n\n####Integer Custom Class Name\nSettable if: The Data Type is \"Integer\" *AND* the Integer Data Source is \"Custom Class Integer Member\"\n\nPivotal parm: No\n\nParm name: IntegerCustomClass\n\nDescription: \n\n>Enter the Class Name from which to Acquire an Integer Value\n\nParm value input rules: \n\n* String with a minimum of 1 character\n\n####Integer Custom Member Name\nSettable if: The Data Type is \"Integer\" *AND* the Integer Data Source is \"Custom Class Integer Member\"\n\nPivotal parm: No\n\nParm name: IntegerCustomMember\n\nDescription: \n\n>Enter the Member Name for which to Acquire an Integer Value\n\nParm value input rules: \n\n* String with a minimum of 1 character\n\n####Integer Custom Arguments\nSettable if: The Data Type is \"Integer\" *AND* the Integer Data Source is \"Custom Class Integer Member\"\n\nPivotal parm: No\n\nParm name: IntegerCustomArgs\n\nDescription: \n\n>Select the Method Arguments to Pass to the Member (if a method)\n\n####Integer Condition Test\nSettable if:  The Data Type is \"Integer\"\n\nPivotal parm: Yes\n\nDescription: \n\n>Select the Integer Condition Test to Perform\n\n<div class=\"parm-table\">\n <table class=\"table\">\n\t<tr>\n\t\t<th>Parm Option Name</th>\n\t\t<th>Parm Value</th>\n\t\t<th>Description</th>\n\t</tr>\n  <tr>\n    <td>Equal-to a Constant Integer</td>\n    <td>\"1\"</td>\n\t<td></td>\n  </tr>\n  <tr>\n    <td>Not-Equal-to a Constant Integer</td>\n    <td>\"2\"</td>\n\t<td></td>\n  </tr>\n  <tr>\n    <td>Greater-than a Constant Integer</td>\n    <td>\"3\"</td>\n\t<td></td>\n  </tr>\n  <tr>\n    <td>Less-than a Constant Integer</td>\n    <td>\"4\"</td>\n\t<td></td>\n  </tr>\n  <tr>\n    <td>Greater-than-or-equal-to a Constant Integer</td>\n    <td>\"5\"</td>\n\t<td></td>\n  </tr>\n  <tr>\n    <td>Less-than-or-equal-to a Constant Integer</td>\n    <td>\"6\"</td>\n\t<td></td>\n  </tr>\n</table>\n</div>\t\n\n####Integer Constant Value\nSettable if:  The Data Type is \"Integer\" *AND* Integer Condition Test is \"Greater-than a Constant Integer\" or \"Less-than a Constant Integer\"\n\nPivotal parm: No\n\nParm name: IntegerConstantValue\n\nDescription: \n\n>Select the Integer Constant Value to Test\n\nParm value input rules: \n\n* Integer with a minimum possible value of \"-32768\" and a maximum possible value of \"-32767\"\n-->\n\n<!--\n###String Data Source\nSettable if:  The Data Type is \"String\"\n\nPivotal parm: Yes\n\nDescription: \n\n>Select the String Data Source of the Condition to Test\n\n<div class=\"parm-table\">\n <table class=\"table\">\n\t<tr>\n\t\t<th>Parm Option Name</th>\n\t\t<th>Parm Value</th>\n\t\t<th>Description</th>\n\t</tr>\n  <tr>\n    <td>String System Property</td>\n    <td>\"1\"</td>\n\t<td></td>\n  </tr>\n  <tr>\n    <td>Pre-defined System String Value</td>\n    <td>\"2\"</td>\n\t<td></td>\n  </tr>\n  <tr>\n    <td>String System Setting</td>\n    <td>\"3\"</td>\n\t<td></td>\n  </tr>\n  <tr>\n    <td>Custom Class String Member</td>\n    <td>\"4\"</td>\n\t<td></td>\n  </tr>\n</table>\n</div>\t\n\n####String System Property\nSettable if: The Data Type is \"String\" *AND* String Data Source is \"String System Property\"\n\nPivotal parm: No\n\nParm name: StringSystemProperty\n\nDescription: \n\n>Select the String System Property to Test\n\n<div class=\"parm-table\">\n <table class=\"table\">\n\t<tr>\n\t\t<th>Parm Option Name</th>\n\t\t<th>Parm Value</th>\n\t\t<th>Description</th>\n\t</tr>\n  <tr>\n    <td>Product Name</td>\n    <td>\"ro.product.name\"</td>\n\t<td></td>\n  </tr>\n  <tr>\n    <td>Product Model</td>\n    <td>\"ro.product.model\"</td>\n\t<td></td>\n  </tr>\n  <tr>\n    <td>Product Device</td>\n    <td>\"ro.product.device\"</td>\n\t<td></td>\n  </tr>\n  <tr>\n    <td>Product Device</td>\n    <td>\"ro.product.manufacturer\"</td>\n\t<td></td>\n  </tr>\n  <tr>\n    <td>Product Language</td>\n    <td>\"ro.product.locale.language\"</td>\n\t<td></td>\n  </tr>\n  <tr>\n    <td>Product Region</td>\n    <td>\"ro.product.locale.region\"</td>\n\t<td></td>\n  </tr>\n  <tr>\n    <td>UTC Date and Time</td>\n    <td>\"ro.build.date.utc\"</td>\n\t<td></td>\n  </tr>\n  <tr>\n    <td>Build Type</td>\n    <td>\"ro.build.type\"</td>\n\t<td></td>\n  </tr>\n  <tr>\n    <td>Build ID</td>\n    <td>\"ro.build.id\"</td>\n\t<td></td>\n  </tr>\n  <tr>\n    <td>Build Tags</td>\n    <td>\"ro.build.tags\"</td>\n\t<td></td>\n  </tr>\n  <tr>\n    <td>Platform Version</td>\n    <td>\"ro.build.version.release\"</td>\n\t<td></td>\n  </tr>\n  <tr>\n    <td>Build Number</td>\n    <td>\"ro.build.version.incremental\"</td>\n\t<td></td>\n  </tr>\n  <tr>\n    <td>Serial Number</td>\n    <td>\"ro.serialno\"</td>\n\t<td></td>\n  </tr>\n  <tr>\n    <td>Hardware Revision(s)</td>\n    <td>\"ro.config.bsp.hwrev\"</td>\n\t<td></td>\n  </tr>\n</table>\n</div>\t\n\n####String System Value\nSettable if: The Data Type is \"String\" *AND* String Data Source is \"Pre-defined System String Value\"\n\nPivotal parm: No\n\nParm name: StringSystemValue\n\nDescription: \n\n>Select the String System Value to Test\n\n<div class=\"parm-table\">\n <table class=\"table\">\n\t<tr>\n\t\t<th>Parm Option Name</th>\n\t\t<th>Parm Value</th>\n\t\t<th>Description</th>\n\t</tr>\n  <tr>\n    <td>Wi-Fi IP Address</td>\n    <td>\"\"</td>\n\t<td></td>\n  </tr>\n  <tr>\n    <td>Wi-Fi MAC Address</td>\n    <td>\"\"</td>\n\t<td></td>\n  </tr>\n  <tr>\n    <td>Cellular IP Address</td>\n    <td>\"\"</td>\n\t<td></td>\n  </tr>\n  <tr>\n    <td>Cellular MAC Address</td>\n    <td>\"\"</td>\n\t<td></td>\n  </tr>\n  <tr>\n    <td>Ethernet IP Address</td>\n    <td>\"\"</td>\n\t<td></td>\n  </tr>\n  <tr>\n    <td>Ethernet MAC Address</td>\n    <td>\"\"</td>\n\t<td></td>\n  </tr>\n  <tr>\n    <td>Blutooth Address</td>\n    <td>\"\"</td>\n\t<td></td>\n  </tr>\n  <tr>\n    <td>Unique Hardware ID</td>\n    <td>\"\"</td>\n\t<td></td>\n  </tr>\n  <tr>\n    <td>Host Name</td>\n    <td>\"\"</td>\n\t<td></td>\n  </tr>\n  <tr>\n    <td>Logged-in User</td>\n    <td>\"\"</td>\n\t<td></td>\n  </tr>\n  <tr>\n    <td>Logged-in User Group(s)</td>\n    <td>\"\"</td>\n\t<td></td>\n  </tr>\n</table>\n</div>\t\n\n####String System Setting\nSettable if: The Data Type is \"String\" *AND* String Data Source is \"String System Setting\"\n\nPivotal parm: No\n\nParm name: StringSystemSetting\n\nDescription: \n\n>Select the String System Setting to Test\n\nParm value input rules: \n\n* String with a minimum of 1 character\n\n####String Custom Class Name\nSettable if: The Data Type is \"String\" *AND* String Data Source is \"Custom Class String Member\"\n\nPivotal parm: No\n\nParm name: StringCustomClass\n\nDescription: \n\n>Enter the Class Name from which to Acquire a String Value\n\nParm value input rules: \n\n* String with a minimum of 1 character\n\n####String Custom Member Name\nSettable if: The Data Type is \"String\" *AND* String Data Source is \"Custom Class String Member\"\n\nPivotal parm: No\n\nParm name: StringCustomMember\n\nDescription: \n\n>Enter the Member Name for which to Acquire a String Value\n\nParm value input rules: \n\n* String with a minimum of 1 character\n\n####String Custom Arguments\nSettable if: The Data Type is \"String\" *AND* String Data Source is \"Custom Class String Member\"\n\nPivotal parm: No\n\nParm name: StringCustomArgs\n\nDescription: \n\n>Select the Method Arguments to Pass to the Member (if a method)\n\nParm value input rules: \n\n* String with a minimum of 1 character\n\n####String Condition Test\nSettable if: The Data Type is \"String\"\n\nPivotal parm: Yes\n\nDescription: \n\n>Select the String Condition Test to Perform\n\n<div class=\"parm-table\">\n <table class=\"table\">\n\t<tr>\n\t\t<th>Parm Option Name</th>\n\t\t<th>Parm Value</th>\n\t\t<th>Description</th>\n\t</tr>\n  <tr>\n    <td>Equal-to null</td>\n    <td>\"1\"</td>\n\t<td></td>\n  </tr>\n  <tr>\n    <td>Not-Equal-to null</td>\n    <td>\"2\"</td>\n\t<td></td>\n  </tr>\n  <tr>\n    <td>Equal-to empty-string</td>\n    <td>\"3\"</td>\n\t<td></td>\n  </tr>\n  <tr>\n    <td>Not-Equal-to empty-string</td>\n    <td>\"4\"</td>\n\t<td></td>\n  </tr>\n  <tr>\n    <td>Equal-to a Constant String</td>\n    <td>\"5\"</td>\n\t<td></td>\n  </tr>\n  <tr>\n    <td>Not-Equal-to a Constant String</td>\n    <td>\"6\"</td>\n\t<td></td>\n  </tr>\n  <tr>\n    <td>Contains a Constant String</td>\n    <td>\"7\"</td>\n\t<td></td>\n  </tr>\n  <tr>\n    <td>Does-not-contain a Constant String</td>\n    <td>\"8\"</td>\n\t<td></td>\n  </tr>\n  <tr>\n    <td>Starts-with a Constant String</td>\n    <td>\"9\"</td>\n\t<td></td>\n  </tr>\n  <tr>\n    <td>Does-not-start-with a Constant String</td>\n    <td>\"10\"</td>\n\t<td></td>\n  </tr>\n  <tr>\n    <td>Ends-with a Constant String</td>\n    <td>\"11\"</td>\n\t<td></td>\n  </tr>\n  <tr>\n    <td>Does-not-end-with a Constant String</td>\n    <td>\"12\"</td>\n\t<td></td>\n  </tr>\n</table>\n</div>\t\n\n####String Constant Value\nSettable if: The Data Type is \"String\" *AND* String Condition Test is \"Equal-to a Constant String\" or \"Not-Equal-to a Constant String\" or \"Contains a Constant String\" or \"Does-not-contain a Constant String\" or \"Starts-with a Constant String\" or \"Does-not-start-with a Constant String\" or \"Ends-with a Constant String\" or \"Does-not-end-with a Constant String\"\n\nPivotal parm: No\n\nParm name: StringConstantValue\n\nDescription: \n\n>Select the String Constant Value to Test\n\n####String Ignore Case\nSettable if: The Data Type is \"String\" *AND* String Condition Test is \"Equal-to a Constant String\" or \"Not-Equal-to a Constant String\" or \"Contains a Constant String\" or \"Does-not-contain a Constant String\" or \"Starts-with a Constant String\" or \"Does-not-start-with a Constant String\" or \"Ends-with a Constant String\" or \"Does-not-end-with a Constant String\"\n\nPivotal parm: No\n\nParm name: StringIgnoreCase\n\nDescription: \n\n>Select whether to ignore case during String Comparison\n\n<div class=\"parm-table\">\n <table class=\"table\">\n\t<tr>\n\t\t<th>Parm Option Name</th>\n\t\t<th>Parm Value</th>\n\t\t<th>Description</th>\n\t</tr>\n  <tr>\n    <td>False</td>\n    <td>\"0\"</td>\n\t<td></td>\n  </tr>\n  <tr>\n    <td>True</td>\n    <td>\"1\"</td>\n\t<td></td>\n  </tr>\n</table>\n</div>\t\n-->\n\n<!--\n###Condition Storage\nPivotal parm: No\n\nParm name: ConditionStorage\n\nDescription: \n\n>Select where to Store the Condition Result\n\n<div class=\"parm-table\">\n <table class=\"table\">\n\t<tr>\n\t\t<th>Parm Option Name</th>\n\t\t<th>Parm Value</th>\n\t\t<th>Description</th>\n\t</tr>\n  <tr>\n    <td>Do not Store Condition Result</td>\n    <td>\"0\"</td>\n\t<td></td>\n  </tr>\n  <tr>\n    <td>Store in Accumulator 1</td>\n    <td>\"1\"</td>\n\t<td></td>\n  </tr>\n  <tr>\n    <td>Store in Accumulator 2</td>\n    <td>\"2\"</td>\n\t<td></td>\n  </tr>\n</table>\n</div>\t\n-->\n\n###Condition Met Action\nPivotal parm: Yes\n\nDescription: \n\n>This parm allows you to select what should happen when the Test specified for the Condition is Met (results in \"true\").\n\n<div class=\"parm-table\">\n <table class=\"table\">\n\t<tr>\n\t\t<th>Parm Option Name</th>\n\t\t<th>Parm Value</th>\n\t\t<th>Description</th>\n\t</tr>\n  <tr>\n    <td>Success</td>\n    <td>\"0\"</td>\n\t<td>This value indicates that when the Test specified for the Condition is Met (results in \"true\") then the Feature should indicate success by immediately returning a characteristic tag.</td>\n  </tr>\n  <tr>\n    <td>Fail with characteristic-error</td>\n    <td>\"1\"</td>\n\t<td>This value indicates that when the Test specified for the Condition is Met (results in \"true\") then the Feature should indicate failure by returning a characteristic-error tag.</td>\n  </tr>\n  <tr>\n    <td>Retry (up to specified times) then Fail</td>\n    <td>\"2\"</td>\n\t<td>This value indicates that when the Test specified for the Condition is Met (results in \"true\") then the Feature should retry, up to the specified number of tries, with the specified delay between tries.  If the Condition is Met on any try, it should be handled as defined above for \"Success\".  If the Condition remains Not Met on the last try, then it should be handled as defined above for \"Fail with characteristic-error\".</td>\n  </tr>\n</table>\n</div>\t\n\n###Condition Not Met Action\nPivotal parm: Yes\n\nDescription: \n\n>This parm allows you to select what should happen when the Test specified for the Condition is Not Met (results in \"false\").\n\n<div class=\"parm-table\">\n <table class=\"table\">\n\t<tr>\n\t\t<th>Parm Option Name</th>\n\t\t<th>Parm Value</th>\n\t\t<th>Description</th>\n\t</tr>\n  <tr>\n    <td>Success</td>\n    <td>\"0\"</td>\n\t<td>This value indicates that when the Test specified for the Condition is Not Met (results in \"false\") then the Feature should indicate success by immediately returning a characteristic tag.</td>\n  </tr>\n  <tr>\n    <td>Fail with characteristic-error</td>\n    <td>\"1\"</td>\n\t<td>This value indicates that when the Test specified for the Condition is Not Met (results in \"false\") then the Feature should indicate failure by returning a characteristic-error tag.</td>\n  </tr>\n  <tr>\n    <td>Retry (up to specified times) then Fail</td>\n    <td>\"2\"</td>\n\t<td>This value indicates that when the Test specified for the Condition is Not Met (results in \"false\") then the Feature should retry, up to the specified number of tries, with the specified delay between tries.  If the Condition is Not Met on any try, it should be handled as defined above for \"Success\". If the Condition remains Not Met on the last try, then it should be handled as defined above for \"Fail with characteristic-error\".</td>\n  </tr>\n</table>\n</div>\t\n\n###Condition Repeat Count\nSettable if: Condition Met Action is \"Retry (up to specified times) then Fail\" *OR* Condition Not Met Action is \"Retry (up to specified times) then Fail\"\n\nPivotal parm: No\n\nParm name: ConditionRepeatCount\n\nDescription: \n\n>This parm allows you to select the number of times the Test specified for the Condition should be repeated (tried) before giving up and indicating failure.\n\nParm value input rules: \n\n* Integer with a minimum value of \"2\" and a maximum value of \"500\"\n\n###Condition Repeat Interval\nSettable if: Condition Met Action is \"Retry (up to specified times) then Fail\" *OR* Condition Not Met Action is \"Retry (up to specified times) then Fail\"\n\nPivotal parm: No\n\nParm name: ConditionRepeatInterval\n\nDescription: \n\n>This parm allows you to select the amount of time (in seconds) to wait between tries when the Test specified for the Condition is repeated.\n\nParm value input rules: \n\n* Integer with a minimum possible value of 1 and a maximum value of \"60\"\n\n###Condition Fail Message\nPivotal parm: No\n\nParm name: ConditionFailMessage\n\nDescription: \n\n>This parm allows you to specify the message that should be returned in the characteristic-error tag to indicate why the Feature failed. This should generally provide an explanation of the Test that was performed, the result that leads to determining a failure. For example, a failure to acquire a valid IP Address [via Ethernet] within a specified amount of time might use a message such as \"Ethernet connectivity not established before timeout\". Such a message could be invaluable when troubleshooting later as it clearly defines why the Feature failed and could be used to determine appropriate corrective action. If an empty (length of zero) value is specified, then no message will be included in the characteristic-error tag.\n\nParm value input rules: \n\n* String with a maximum size of 250 characters\n\n###Condition Wait Message\nSettable if: The Condition Met Action is \"Retry (up to specified times) then Fail\" OR the Condition Not Met Action is \"Retry (up to specified times) then Fail\"\n\nPivotal parm: No\n\nParm name: ConditionWaitMessage\n\nDescription: \n\n>This parm allows you to specify the message that should be sent to the device user, using the StatusMgr Feature Type, to indicate that the ConditionMgr is waiting for the Test defined for the Condition to reach a defined state or for the specified number of retries to be exhausted.  Since this message is intended to notify the device user that an action should be taken, it should be worded to communicate to such users.  In particular, it may need to in a particular language. The message should ideally indicate what the Condition is waiting for and/or what action the user should take or not take and what such action will cause.  It may also be useful to communicate the amount of time the user has to take the action before failure will occur. For example, a message indicating a wait for a valid IP Address [via Ethernet] within a specified amount of time might use a message such as \"Please insert device into an Ethernet cradle within 2 minutes\". If an empty (length of zero) value is specified, then no message will be sent to StatusMgr.\n\n>**Note:** A wait message may or may not be made visible to the device user, depending on whether or not there is an application actively listening for and displaying messages sent to StatusMgr.\n\nParm value input rules: \n\n* String with a maximum of 250 characters\n\n##Example XML\n###Use with XmlMgr\n\nFor best results, ConditionMgr and XmlMgr should be used together. For example, to accomplish the \"Ethernet Scan and Dock\" use case, the following Request XML Document might be used:\n\n\t:::XML\n\t<wap-provisioningdoc>\n\t\t<characteristic version=\"4.2\" type=\"XmlMgr\">\n\t\t\t<parm name=\"ProcessingMode\" value=\"2\"/>\n\t\t</characteristic>\n\t\t<characteristic version=\"4.4\" type=\"ComponentMgr\">\n\t\t\t<parm name=\" EthernetState\" value=\"1\"/>\n\t\t</characteristic>\n\t\t<characteristic version=\"4.4\" type=\"ConditionMgr\">\n\t\t\t<parm name=\"DataType\" value=\"1\"/>\n\t\t\t<characteristic type=\"BooleanDetails\">\n\t\t\t\t<parm name=\"BooleanSourceType\" value=\"2\"/>\n\t\t\t\t<parm name=\"BooleanSystemValue\" value=\"2\"/>\n\t\t\t</characteristic>\n\t\t\t<parm name=\"ConditionMetAction\" value=\"0\"/>\n\t\t\t<parm name=\"ConditionNotMetAction\" value=\"2\"/>\n\t\t\t<parm name=\"ConditionRepeatCount\" value=\"120\"/>\n\t\t\t<parm name=\"ConditionNotMetAction\" value=\"1\"/>\n\t\t\t<parm name=\"ConditionFailMessage\" value=\"Ethernet connectivity not established before timeout\"/>\n\t\t\t<parm name=\"ConditionWaitMessage\" value=\"Please insert device into an Ethernet cradle within 2 minutes\"/>\n\t\t</characteristic>\n\t\t<characteristic version=\"0.6\" type=\"FileMgr\">\n\t\t</characteristic>\n\t</wap-provisioningdoc>\n\t\nIf the above Request XML document was used without the XmlMgr Feature at the beginning, then the FileMgr Feature would be executed regardless of whether a connection was successfully established via Ethernet. While that would likely result in an error, it might take much longer, since the FileMgr Feature would need to wait for a timeout. Further, the user experience would be inferior since the user would not be informed to insert device into the cradle and the failure would shed no light on why FileMgr \"could not connect to server\".\n\n###Using ConditionMetAction and ConditionNotMetAction\n\nThe two parms ConditionMetAction and ConditionNotMetAction provide identical options for choosing the action to take. While this means you could select the same action for both, that would likely never be the right thing to do. To review, the options are:\n\n* Success\n* Fail with characteristic-error\n* Retry (up to specified times) then Fail\n\nYou should select the first open \"Success\" for only one of these two parms, depending on whether \"true\" or \"false\" best represents the Condition where you want to continue executing Features.  For the other parm, you should select either \"Fail with characteristic-error\" or \"Retry (up to specified times) then Fail\", depending on whether you want to stop immediately or retry for a while before deciding to stop executing Features.\n\nWhen selecting \"Retry (up to specified times) then Fail\" for either of the parms ConditionMetAction or ConditionNotMetAction, you will need to specify the additional parms ConditionRepeatCount and ConditionRepeatInterval. Taken together, the values of these two parms control how long the total wait time may be. When using this capability, success can occur at any time, but failure requires \"exhausting the retries\".  The parm ConditionRepeatCount specifies how many time to try and the parm ConditionRepeatInterval specifies how long (in seconds) to wait between tries.  By multiplying these two, you can compute the minimum amount of time that must elapse before failure can occur. The actual time may be somewhat longer since some time may be taken to perform each Test. But in most cases, the wait time before failure should be close to the computed time.\n\n## Feature Compatibility\n\n<iframe src=\"compare.html#mx=4.3&csp=ConditionMgr&os=JB&embed=true\"></iframe> "},{"key":"guide-csp-cspmgr","name":" CspMgr","md":"# CspMgr\n\n## About CspMgr\n\n### Overview\n\nThe MX Management System (MXMS) is a system on Zebra Android devices that consists of the MX Management Framework and a collection of Configuration Service Providers (CSPs). Using the MDM Toolkit, an MDM Agent can submit Request XML Documents to the MXMF, which will route sections of the XML to appropriate CSPs.  Each CSP provides the ability to perform certain configuration and administration functions for a specific subsystem on the device. For example, the CameraMgr CSP can be used to manage the Camera subsystem on a device.\n\nThe capabilities of a CSP that is present on a given device can be accessed by using the corresponding Feature Type via the MDM Toolkit. For example, the CameraMgr Feature type can be used to access the functionality of the CameraMgr CSP. The MXMS that is present on a given device will include many CSPs.  Different device models, or devices with different versions of Android, may include different sets of available CSPs. The CspMgr Feature Type allows you to query the CspMgr CSP and thereby determine the set of CSPs that are present on a given device. This allows you to determine which MDM Toolkit Feature Types can be used on that device.\n\n### Main Functionality\n\n* Query the list of CSPs that are available for use on the device\n\n##Parameter Notes\n###Characteristic\nParm name: characteristic\n\nDescription:\n\n> This parm will contain the CSP name of each CSP that is available for use on the device. Since there is a one-to-one correspondence between CSP names and Feature Types in the MDM Toolkit, this is also the list of Feature Types that can be successfully used on the device.\n\n>Knowing the set of CSPs that are available on a device can be useful for an MDM Agent to avoid submitting Request XML Documents that would fail due to Feature Types that are not supported by that device. It may be preferable to perform a pre-check and avoid generating XML that uses unsupported Feature Type rather that submitting XML and detecting and handling failures due to unsupported Feature Types.\n\n>Knowing the set of CSPs that are available on a device can be useful for an MDM Server to better understand the capabilities of a given device. The MDM Server might use this information to determine which optional features to expose to an Administrator via the Management Console. Or, the MDM Server might display this information to an Administrator to help determine which operations make sense to perform on which devices.\n\n\n###Package\nParm name: package\n\nDescription: \n\n>This parm will contain the Android Package Name of each of the registered Feature Types. This parm is generally less useful to an MDM but may be useful in some circumstances, such as when troubleshooting problems with management functionality.\n\n###Class\nParm name: class\n\nDescription: \n\n>This parm will contain the Android Class Name of each of the registered Feature Types. This parm is generally less useful to an MDM but may be useful in some circumstances, such as when troubleshooting problems with management functionality.\n\n##Queries\n\nInput\n\n\t:::XML\n\t<wap-provisioningdoc>\n\t\t<characteristic-query type=\"CspMgr\"/>\n\t</wap-provisioningdoc>\n\nOutput\n\n\t:::XML\n\t<wap-provisioningdoc>\n\t\t<characteristic type=\"CspMgr\">\n\t\t\t<characteristic type=\"csp-details\">\n\t\t\t\t<parm name=\"characteristic\" value=\"AccessMgr\"/>\n\t\t\t\t<parm name=\"package\" value=\"com.symbol.mxmf.csp.accessmgr\"/>\n\t\t\t\t<parm name=\"class\" value=\"com.symbol.mxmf.csp.accessmgr.MxAccessMngrCSPService\"/>\n\t\t\t</characteristic>\n\t\t</characteristic>\n\t\t<characteristic type=\"CspMgr\">\n\t\t\t<characteristic type=\"csp-details\">\n\t\t\t\t<parm name=\"characteristic\" value=\"AppMgr\"/>\n\t\t\t\t<parm name=\"package\" value=\"com.symbol.mxmf.csp.appmgr\"/>\n\t\t\t\t<parm name=\"class\" value=\"com.symbol.mxmf.csp.appmgr.MxAppMngrCSPService\"/>\n\t\t\t</characteristic>\n\t\t</characteristic>\n\t\t<characteristic type=\"CspMgr\">\n\t\t\t<characteristic type=\"csp-details\">\n\t\t\t\t<parm name=\"characteristic\" value=\"AudioVolUIMgr\"/>\n\t\t\t\t<parm name=\"package\" value=\"com.symbol.mxmf.csp.audiovoluimgr\"/>\n\t\t\t\t<parm name=\"class\" value=\"com.symbol.mxmf.csp.audiovoluimgr.MxAudioVolUICSPService\"/>\n\t\t\t</characteristic>\n\t\t</characteristic>\n\t\t<characteristic type=\"CspMgr\">\n\t\t\t<characteristic type=\"csp-details\">\n\t\t\t\t<parm name=\"characteristic\" value=\"CertMgr\"/>\n\t\t\t\t<parm name=\"package\" value=\"com.symbol.mxmf.csp.certmgr\"/>\n\t\t\t\t<parm name=\"class\" value=\"com.symbol.mxmf.csp.certmgr.MxCertManagerService\"/>\n\t\t\t</characteristic>\n\t\t</characteristic>\n\t\t<characteristic type=\"CspMgr\">\n\t\t\t<characteristic type=\"csp-details\">\n\t\t\t\t<parm name=\"characteristic\" value=\"Clock\"/>\n\t\t\t\t<parm name=\"package\" value=\"com.symbol.mxmf.csp.clock\"/>\n\t\t\t\t<parm name=\"class\" value=\"com.symbol.mxmf.csp.clock.MxCSPClockService\"/>\n\t\t\t</characteristic>\n\t\t</characteristic>\n\t\t<characteristic type=\"CspMgr\">\n\t\t\t<characteristic type=\"csp-details\">\n\t\t\t\t<parm name=\"characteristic\" value=\"Intent\"/>\n\t\t\t\t<parm name=\"package\" value=\"com.symbol.mxmf.csp.intent\"/>\n\t\t\t\t<parm name=\"class\" value=\"com.symbol.mxmf.csp.intent.MxIntentCSPService\"/>\n\t\t\t</characteristic>\n\t\t</characteristic>\n\t\t<characteristic type=\"CspMgr\">\n\t\t\t<characteristic type=\"csp-details\">\n\t\t\t\t<parm name=\"characteristic\" value=\"MX\"/>\n\t\t\t\t<parm name=\"package\" value=\"com.symbol.mxmf.csp.mx\"/>\n\t\t\t\t<parm name=\"class\" value=\"com.symbol.mxmf.csp.mx.MxVersionCSPService\"/>\n\t\t\t</characteristic>\n\t\t</characteristic>\n\t\t<characteristic type=\"CspMgr\">\n\t\t\t<characteristic type=\"csp-details\">\n\t\t\t\t<parm name=\"characteristic\" value=\"PersistMgr\"/>\n\t\t\t\t<parm name=\"package\" value=\"com.symbol.mxmf.csp.persistmgr\"/>\n\t\t\t\t<parm name=\"class\" value=\"com.symbol.mxmf.csp.persistmgr.MxPersistCSPService\"/>\n\t\t\t</characteristic>\n\t\t</characteristic>\n\t\t<characteristic type=\"CspMgr\">\n\t\t\t<characteristic type=\"csp-details\">\n\t\t\t\t<parm name=\"characteristic\" value=\"XmlMgr\"/>\n\t\t\t\t<parm name=\"package\" value=\"com.symbol.mxmf.csp.xmlmgr\"/>\n\t\t\t\t<parm name=\"class\" value=\"com.symbol.mxmf.csp.xmlmgr.MxXmlMgrCSPService\"/>\n\t\t\t</characteristic>\n\t\t</characteristic>\n\t\t<characteristic type=\"CspMgr\">\n\t\t\t<characteristic type=\"csp-details\">\n\t\t\t\t<parm name=\"characteristic\" value=\"AnalyticsMgr\"/>\n\t\t\t\t<parm name=\"package\" value=\"com.symbol.mxmf.csp.analyticsmgr\"/>\n\t\t\t\t<parm name=\"class\" value=\"com.symbol.mxmf.csp.analyticsmgr.AnalyticsMgrService\"/>\n\t\t\t</characteristic>\n\t\t</characteristic>\n\t\t<characteristic type=\"CspMgr\">\n\t\t\t<characteristic type=\"csp-details\">\n\t\t\t\t<parm name=\"characteristic\" value=\"Batch\"/>\n\t\t\t\t<parm name=\"package\" value=\"com.symbol.mxmf.csp.batch\"/>\n\t\t\t\t<parm name=\"class\" value=\"com.symbol.mxmf.csp.batch.BatchCSPService\"/>\n\t\t\t</characteristic>\n\t\t</characteristic>\n\t\t<characteristic type=\"CspMgr\">\n\t\t\t<characteristic type=\"csp-details\">\n\t\t\t\t<parm name=\"characteristic\" value=\"BatteryMgr\"/>\n\t\t\t\t<parm name=\"package\" value=\"com.symbol.mxmf.csp.batterymgr\"/>\n\t\t\t\t<parm name=\"class\" value=\"com.symbol.mxmf.csp.batterymgr.MxBatteryMgrCSPService\"/>\n\t\t\t</characteristic>\n\t\t</characteristic>\n\t\t<characteristic type=\"CspMgr\">\n\t\t\t<characteristic type=\"csp-details\">\n\t\t\t\t<parm name=\"characteristic\" value=\"BrowserMgr\"/>\n\t\t\t\t<parm name=\"package\" value=\"com.symbol.mxmf.csp.browsermgr\"/>\n\t\t\t\t<parm name=\"class\" value=\"com.symbol.mxmf.csp.browsermgr.MxBrowserMgrCSPService\"/>\n\t\t\t</characteristic>\n\t\t</characteristic>\n\t\t<characteristic type=\"CspMgr\">\n\t\t\t<characteristic type=\"csp-details\">\n\t\t\t\t<parm name=\"characteristic\" value=\"CameraMgr\"/>\n\t\t\t\t<parm name=\"package\" value=\"com.symbol.mxmf.csp.cameramgr\"/>\n\t\t\t\t<parm name=\"class\" value=\"com.symbol.mxmf.csp.cameramgr.MxCameraCSPService\"/>\n\t\t\t</characteristic>\n\t\t</characteristic>\n\t\t<characteristic type=\"CspMgr\">\n\t\t\t<characteristic type=\"csp-details\">\n\t\t\t\t<parm name=\"characteristic\" value=\"CellularMgr\"/>\n\t\t\t\t<parm name=\"package\" value=\"com.symbol.mxmf.csp.cellularmgr\"/>\n\t\t\t\t<parm name=\"class\" value=\"com.symbol.mxmf.csp.cellularmgr.MxCellularMgrCSPService\"/>\n\t\t\t</characteristic>\n\t\t</characteristic>\n\t\t<characteristic type=\"CspMgr\">\n\t\t\t<characteristic type=\"csp-details\">\n\t\t\t\t<parm name=\"characteristic\" value=\"ComponentMgr\"/>\n\t\t\t\t<parm name=\"package\" value=\"com.symbol.mxmf.csp.componentmgr\"/>\n\t\t\t\t<parm name=\"class\" value=\"com.symbol.mxmf.csp.componentmgr.MxComponentMgrCSPService\"/>\n\t\t\t</characteristic>\n\t\t</characteristic>\n\t\t<characteristic type=\"CspMgr\">\n\t\t\t<characteristic type=\"csp-details\">\n\t\t\t\t<parm name=\"characteristic\" value=\"DevAdmin\"/>\n\t\t\t\t<parm name=\"package\" value=\"com.symbol.mxmf.csp.devadmin\"/>\n\t\t\t\t<parm name=\"class\" value=\"com.symbol.mxmf.csp.devadmin.MxDevAdminCSPService\"/>\n\t\t\t</characteristic>\n\t\t</characteristic>\n\t\t<characteristic type=\"CspMgr\">\n\t\t\t<characteristic type=\"csp-details\">\n\t\t\t\t<parm name=\"characteristic\" value=\"DhcpOptionMgr\"/>\n\t\t\t\t<parm name=\"package\" value=\"com.symbol.mxmf.csp.dhcpoptionmgr\"/>\n\t\t\t\t<parm name=\"class\" value=\"com.symbol.mxmf.csp.dhcpoptionmgr.MxDhcpOptionMgrCSPService\"/>\n\t\t\t</characteristic>\n\t\t</characteristic>\n\t\t<characteristic type=\"CspMgr\">\n\t\t\t<characteristic type=\"csp-details\">\n\t\t\t\t<parm name=\"characteristic\" value=\"DisplayMgr\"/>\n\t\t\t\t<parm name=\"package\" value=\"com.symbol.mxmf.csp.displaymgr\"/>\n\t\t\t\t<parm name=\"class\" value=\"com.symbol.mxmf.csp.displaymgr.MxDisplayMgrCSPService\"/>\n\t\t\t</characteristic>\n\t\t</characteristic>\n\t\t<characteristic type=\"CspMgr\">\n\t\t\t<characteristic type=\"csp-details\">\n\t\t\t\t<parm name=\"characteristic\" value=\"EncryptMgr\"/>\n\t\t\t\t<parm name=\"package\" value=\"com.symbol.mxmf.csp.encryptmgr\"/>\n\t\t\t\t<parm name=\"class\" value=\"com.symbol.mxmf.csp.encryptmgr.MxEncryptMgrCSPService\"/>\n\t\t\t</characteristic>\n\t\t</characteristic>\n\t\t<characteristic type=\"CspMgr\">\n\t\t\t<characteristic type=\"csp-details\">\n\t\t\t\t<parm name=\"characteristic\" value=\"FileMgr\"/>\n\t\t\t\t<parm name=\"package\" value=\"com.symbol.mxmf.csp.filemgr\"/>\n\t\t\t\t<parm name=\"class\" value=\"com.symbol.mxmf.csp.filemgr.FileMgrCSPService\"/>\n\t\t\t</characteristic>\n\t\t</characteristic>\n\t\t<characteristic type=\"CspMgr\">\n\t\t\t<characteristic type=\"csp-details\">\n\t\t\t\t<parm name=\"characteristic\" value=\"GprsMgr\"/>\n\t\t\t\t<parm name=\"package\" value=\"com.symbol.mxmf.csp.gprsmgr\"/>\n\t\t\t\t<parm name=\"class\" value=\"com.symbol.mxmf.csp.gprsmgr.GPRSMngrCSPService\"/>\n\t\t\t</characteristic>\n\t\t</characteristic>\n\t\t<characteristic type=\"CspMgr\">\n\t\t\t<characteristic type=\"csp-details\">\n\t\t\t\t<parm name=\"characteristic\" value=\"KeyMappingMgr\"/>\n\t\t\t\t<parm name=\"package\" value=\"com.symbol.mxmf.csp.keymappingmgr\"/>\n\t\t\t\t<parm name=\"class\" value=\"com.symbol.mxmf.csp.keymappingmgr.MxKeyMappingMgrCSPService\"/>\n\t\t\t</characteristic>\n\t\t</characteristic>\n\t\t<characteristic type=\"CspMgr\">\n\t\t\t<characteristic type=\"csp-details\">\n\t\t\t\t<parm name=\"characteristic\" value=\"LicenseMgr\"/>\n\t\t\t\t<parm name=\"package\" value=\"com.symbol.mxmf.csp.licensemgr\"/>\n\t\t\t\t<parm name=\"class\" value=\"com.symbol.mxmf.csp.licensemgr.LicenseMgrService\"/>\n\t\t\t</characteristic>\n\t\t</characteristic>\n\t\t<characteristic type=\"CspMgr\">\n\t\t\t<characteristic type=\"csp-details\">\n\t\t\t\t<parm name=\"characteristic\" value=\"PowerKeyMgr\"/>\n\t\t\t\t<parm name=\"package\" value=\"com.symbol.mxmf.csp.powerkeymgr\"/>\n\t\t\t\t<parm name=\"class\" value=\"com.symbol.mxmf.csp.powerkeymgr.MxPowerKeyMgrCSPService\"/>\n\t\t\t</characteristic>\n\t\t</characteristic>\n\t\t<characteristic type=\"CspMgr\">\n\t\t\t<characteristic type=\"csp-details\">\n\t\t\t\t<parm name=\"characteristic\" value=\"PowerMgr\"/>\n\t\t\t\t<parm name=\"package\" value=\"com.symbol.mxmf.csp.powermgr\"/>\n\t\t\t\t<parm name=\"class\" value=\"com.symbol.mxmf.csp.powermgr.MxPowerMgrCSPService\"/>\n\t\t\t</characteristic>\n\t\t</characteristic>\n\t\t<characteristic type=\"CspMgr\">\n\t\t\t<characteristic type=\"csp-details\">\n\t\t\t\t<parm name=\"characteristic\" value=\"SdCardMgr\"/>\n\t\t\t\t<parm name=\"package\" value=\"com.symbol.mxmf.csp.sdcardmgr\"/>\n\t\t\t\t<parm name=\"class\" value=\"com.symbol.mxmf.csp.sdcardmgr.MxSdCardMgrCSPService\"/>\n\t\t\t</characteristic>\n\t\t</characteristic>\n\t\t<characteristic type=\"CspMgr\">\n\t\t\t<characteristic type=\"csp-details\">\n\t\t\t\t<parm name=\"characteristic\" value=\"SettingsMgr\"/>\n\t\t\t\t<parm name=\"package\" value=\"com.symbol.mxmf.csp.settingsmgr\"/>\n\t\t\t\t<parm name=\"class\" value=\"com.symbol.mxmf.csp.settingsmgr.MxSettingsMgrCSPService\"/>\n\t\t\t</characteristic>\n\t\t</characteristic>\n\t\t<characteristic type=\"CspMgr\">\n\t\t\t<characteristic type=\"csp-details\">\n\t\t\t\t<parm name=\"characteristic\" value=\"Stats\"/>\n\t\t\t\t<parm name=\"package\" value=\"com.symbol.mxmf.csp.stats\"/>\n\t\t\t\t<parm name=\"class\" value=\"com.symbol.mxmf.csp.stats.MxStatsCSPService\"/>\n\t\t\t</characteristic>\n\t\t</characteristic>\n\t\t<characteristic type=\"CspMgr\">\n\t\t\t<characteristic type=\"csp-details\">\n\t\t\t\t<parm name=\"characteristic\" value=\"ThreatMgr\"/>\n\t\t\t\t<parm name=\"package\" value=\"com.symbol.mxmf.csp.threatmgr\"/>\n\t\t\t\t<parm name=\"class\" value=\"com.symbol.mxmf.csp.threatmgr.MxThreatMgrCSPService\"/>\n\t\t\t</characteristic>\n\t\t</characteristic>\n\t\t<characteristic type=\"CspMgr\">\n\t\t\t<characteristic type=\"csp-details\">\n\t\t\t\t<parm name=\"characteristic\" value=\"TouchMgr\"/>\n\t\t\t\t<parm name=\"package\" value=\"com.symbol.mxmf.csp.touchmgr\"/>\n\t\t\t\t<parm name=\"class\" value=\"com.symbol.mxmf.csp.touchmgr.TouchMngrCSPService\"/>\n\t\t\t</characteristic>\n\t\t</characteristic>\n\t\t<characteristic type=\"CspMgr\">\n\t\t\t<characteristic type=\"csp-details\">\n\t\t\t\t<parm name=\"characteristic\" value=\"UiMgr\"/>\n\t\t\t\t<parm name=\"package\" value=\"com.symbol.mxmf.csp.uimgr\"/>\n\t\t\t\t<parm name=\"class\" value=\"com.symbol.mxmf.csp.uimgr.MxUiMgrCSPService\"/>\n\t\t\t</characteristic>\n\t\t</characteristic>\n\t\t<characteristic type=\"CspMgr\">\n\t\t\t<characteristic type=\"csp-details\">\n\t\t\t\t<parm name=\"characteristic\" value=\"UsbMgr\"/>\n\t\t\t\t<parm name=\"package\" value=\"com.symbol.mxmf.csp.usbmgr\"/>\n\t\t\t\t<parm name=\"class\" value=\"com.symbol.mxmf.csp.usbmgr.MxUsbMgrCSPService\"/>\n\t\t\t</characteristic>\n\t\t</characteristic>\n\t\t<characteristic type=\"CspMgr\">\n\t\t\t<characteristic type=\"csp-details\">\n\t\t\t\t<parm name=\"characteristic\" value=\"Wi-Fi\"/>\n\t\t\t\t<parm name=\"package\" value=\"com.symbol.mxmf.csp.wifi\"/>\n\t\t\t\t<parm name=\"class\" value=\"com.symbol.mxmf.csp.wifi.MxWifiConfigCSPService\"/>\n\t\t\t</characteristic>\n\t\t</characteristic>\n\t\t<characteristic type=\"CspMgr\">\n\t\t\t<characteristic type=\"csp-details\">\n\t\t\t\t<parm name=\"characteristic\" value=\"WirelessMgr\"/>\n\t\t\t\t<parm name=\"package\" value=\"com.symbol.mxmf.csp.wirelessmgr\"/>\n\t\t\t\t<parm name=\"class\" value=\"com.symbol.mxmf.csp.wirelessmgr.MxWirelessMgrCSPService\"/>\n\t\t\t</characteristic>\n\t\t</characteristic>\n\t</wap-provisioningdoc>\n\n\n\n## Feature Compatibility\n\n<iframe src=\"compare.html#mx=4.3&csp=CspMgr&os=JB&embed=true\"></iframe> "},{"key":"guide-csp-devadmin","name":" DevAdmin","md":"# DevAdmin\n\n## About DevAdmin\n\n### Overview\n\nAndroid defines some APIs called the Device Administration APIs, as implemented within the DevicePolicyManager class. These APIs enable certain applications to perform various tasks that can affect the security of the device.  Since the use of these APIs can impact device security, they are restricted to use by specially approved applications, called Device Administrators. If an application is written to conform to the DeviceAdminReceiver model and is approved to become a Device Administrator, then it can use some or all of the Device Administration APIs.\n\nIn standard Android devices, an application that is written to conform to the DeviceAdminReceiver model must explicitly request the device user to approve it as a Device Administrator. This is based on the assumption that the device user is knowledgeable and is in the best position to make a determination. For a device that is owned or used by a single device user, that assumption may be reasonable. For an Enterprise-owned device that may be shared amongst multiple device users, that assumption may be a poor one.\n\nThe DevAdmin Feature Type allows you to perform certain device administration tasks directly. It also allows you to programmatically approve an application that is written to conform to the DeviceAdminReceiver model as a Device Administrator, without involving or notifying the device user. This allows an Enterprise to grant access to the Device Administration APIs to trusted applications, and thus enable those applications to perform device administration tasks.\n\n### Main Functionality\n\n* Set Screen-Lock Timeout Interval\n* Turn Installation of applications from Unknown sources On or Off\n* Turn Device Administrator approval On or Off for an application\n\n##Parameter Notes\n###Screen-Lock Timeout Interval\nPivotal parm: No\n\nParm name: ScreenLockTimeoutInterval\n\nDescription: \n\n>Android devices support two levels of inactivity timeout that can be controlled independently. The Display Screen Timeout, which can be controlled via the DisplayMgr Feature Type, controls the amount of device user inactivity that must elapse before the device display screen is automatically turned off. The Screen Lock Timeout, which can be controlled by the DevAdmin Feature Type, controls how long the device screen must remain off before a screen lock will occur.\n\n>When the device screen is turned back on, manually by some sort of device user activity, or programmatically due to some device event, the result will depend on how long the device screen was off and the value set for the Screen Lock Timeout. If the display screen was off for less than the Screen Lock Timeout, then the screen will not be locked (and hence will not need to be unlocked by the device user). If the display screen was off for at least the Screen Lock Timeout, then the screen will be locked (and hence will need to be unlocked by the device user).\n\n>This behavior can be modified in two ways, based on other aspects of the device that may be configured. First, if no lock behavior is set for the device (e.g. no pin or password), then \"unlocking\", if required, may only require a swipe, not any actual data entry by the device user. Second, if the device is configured to lock automatically when the display screen is turned off by the power key, then a screen lock will always occur when the display screen is turned back on after being turned off via the power key, regardless of how much time the display screen was off.\n\n>This parm will allow you to set the Screen Lock Timeout.\n\n>**Note:** The underlying Android display system only supports the selection of a fixed set of values for the Screen Lock Timeout. This parm can only set the actual Screen Lock Timeout to one of those supported values (listed in the table below). Specifying a value that is less than the smallest value shown in the table or greater than the largest value shown in the table will cause no change to be made to the current Screen Lock Timeout and will cause an error to be returned in the Result XML document. Specifying a value between two supported values shown in the table will cause the closest value to the requested value to be selected, with no error returned in the Result XML document.\n\n<div class=\"parm-table\">\n <table class=\"table\">\n\t<tr>\n\t\t<th>Parm Option Name</th>\n\t\t<th>Parm Value</th>\n\t\t<th>Description</th>\n\t</tr>\n  <tr>\n    <td>Do not change</td>\n    <td>\"0\"</td>\n\t<td>This value (or the absence of this parm from the XML) will cause no change to the Screen Lock Timeout.</td>\n  </tr>\n  <tr>\n    <td>Immediately after Display Timeout</td>\n    <td>\"1\"</td>\n\t<td>This value will cause the screen to be locked when the display screen is turned back on, regardless of how long the display screen was off.</td>\n  </tr>\n  <tr>\n    <td>5 seconds after Display Timeout</td>\n    <td>\"5\"</td>\n\t<td>This value will cause the screen to be locked when the display screen is turned back on, if the display screen was off for at least 5 seconds.</td>\n  </tr>\n  <tr>\n    <td>15 seconds after Display Timeout</td>\n    <td>\"15\"</td>\n\t<td>This value will cause the screen to be locked when the display screen is turned back on, if the display screen was off for at least 15 seconds.</td>\n  </tr>\n  <tr>\n    <td>30 seconds after Display Timeout</td>\n    <td>\"30\"</td>\n\t<td>This value will cause the screen to be locked when the display screen is turned back on, if the display screen was off for at least 30 seconds.</td>\n  </tr>\n  <tr>\n    <td>1 minute after Display Timeout</td>\n    <td>\"60\"</td>\n\t<td>This value will cause the screen to be locked when the display screen is turned back on, if the display screen was off for at least 1 minute.</td>\n  </tr>\n  <tr>\n    <td>2 minutes after Display Timeout</td>\n    <td>\"120\"</td>\n\t<td>This value will cause the screen to be locked when the display screen is turned back on, if the display screen was off for at least 2 minutes.</td>\n  </tr>\n  <tr>\n    <td>5 minutes after Display Timeout</td>\n    <td>\"300\"</td>\n\t<td>This value will cause the screen to be locked when the display screen is turned back on, if the display screen was off for at least 5 minutes.</td>\n  </tr>\n  <tr>\n    <td>10 minutes after Display Timeout</td>\n    <td>\"600\"</td>\n\t<td>This value will cause the screen to be locked when the display screen is turned back on, if the display screen was off for at least 10 minutes.</td>\n  </tr>\n  <tr>\n    <td>30 minutes after Display Timeout</td>\n    <td>\"1800\"</td>\n\t<td>This value will cause the screen to be locked when the display screen is turned back on, if the display screen was off for at least 30 minutes.</td>\n  </tr>\n</table>\n</div>\t\n\n###Install App from Unknown Sources\nPivotal parm: No\n\nParm name: UnknownSourcesStatus\n\nDescription: \n\n>Android devices have a feature called the Unknown Sources Option that controls whether the device user is allowed to install applications (APK files) that originate from \"unknown\" sources, by which is meant \"anywhere other than the Google Play Store\". The primary purpose for this feature is to block \"side loading\" of APKs that may be risky since they did not go through the vetting process associated with posting applications on the Google Play Store.\n\n>For devices that have GMS (Google Mobile Services), the Android CDD (Compatibility Definition Document) requires that the Unknown Sources Option be turned off by default. That makes sense for such devices, since they have support for Google Play (which is part of GMS) and hence have a viable way for device users to load applications. Zebra Android devices that have GMS will all default the Unknown Sources Option off by default to comply with this requirement. The Unknown Sources Option can then be turned on to allow device users the option of side-loading applications as an alternative to using Google Play.\n\n>For devices that do not have GMS, turning off the Unknown Sources Option would prevent device users from loading applications at all, since they do not have support for Google Play. Zebra devices that do not have GMS will typically default the Unknown Sources Option on by default so device users will have at least some method to install applications. The Unknown Sources Option can then be turned off to disallow device users from loading applications at all.\n\n>**Note:** The Unknown Sources Option only affects whether device users are allowed to install applications. It does not have any effect on whether applications can be programmatically installed, such as using the AppMgr Feature Type. The presumption is that any application that can be trusted to install other applications without involving or notifying the device user can be trusted to install only suitable applications and therefore whether those applications come from the Google Play Store or not is immaterial.\n\n>This parm allows you to turn the Unknown Sources Option on or off, both on devices that have GMS and those that do not have GMS.\n\n<div class=\"parm-table\">\n <table class=\"table\">\n\t<tr>\n\t\t<th>Parm Option Name</th>\n\t\t<th>Parm Value</th>\n\t\t<th>Description</th>\n\t</tr>\n  <tr>\n    <td>Do not change</td>\n    <td>\"0\"</td>\n\t<td>This value (or the absence of this parm from the XML) will not make any change to the Unknown Sources Option.</td>\n  </tr>\n  <tr>\n    <td>Turn On</td>\n    <td>\"1\"</td>\n\t<td>This value will turn the Unknown Sources Option on, which will allow the device user to install applications onto the device other than via Google Play.</td>\n  </tr>\n  <tr>\n    <td>Turn Off</td>\n    <td>\"2\"</td>\n\t<td>This value will turn the Unknown Sources Option off, which will prevent the device user from installing applications onto the device other than via Google Play.</td>\n  </tr>\n</table>\n</div>\t\n\n###Device Administration Action\nPivotal parm: Yes\n\nDescription: \n\n>This parm allows you to approve or remove approval to be a Device Administrator from an application that is written to conform to the DeviceAdminReceiver model.\n\n>By default, an application is not initially approved as a Device Administrator when it is first installed and launched. Only an application that is written to conform to the DeviceAdminReceiver model and that is currently installed can be approved to be a Device Administrator.\n\n>When an application that is written to conform to the DeviceAdminReceiver model is approved to be a Device Administrator, it will be notified so it can begin using the Device Administration APIs. When Device Administrator approval is removed from such an application, it will be notified that it must stop using the Device Administration APIs.\n\n>**Note:** The ability to control approve or remove approval for an application using the DevAdmin Feature Type does not prevent the device user from approving or removing approval for an application from the System Settings Menu. The effect on an application of approval or removal of approval is the same whether initiated by the device user or by the DevAdmin Feature Type.\n\n<div class=\"parm-table\">\n <table class=\"table\">\n\t<tr>\n\t\t<th>Parm Option Name</th>\n\t\t<th>Parm Value</th>\n\t\t<th>Description</th>\n\t</tr>\n  <tr>\n    <td>Do nothing</td>\n    <td>\"0\"</td>\n\t<td>This value (or the absence of this parm from the XML) will not make any change to whether any application is approved to be a Device Administrator.</td>\n  </tr>\n  <tr>\n    <td>Turn On as Device Administrator</td>\n    <td>\"1\"</td>\n\t<td>This value will approve a specific application as a Device Administrator.</td>\n  </tr>\n  <tr>\n    <td>Turn Off as Device Administrator</td>\n    <td>\"2\"</td>\n\t<td>This value will remove Device Administrator approval from a specific application.</td>\n  </tr>\n</table>\n</div>\t\n\n####Device Administrator Package Name\nSettable if: Device Administration Action is \"Turn On as Device Administrator\" or \"Turn Off as Device Administrator\"\n\nPivotal parm: No\n\nParm name: DevAdminPkg\n\nDescription: \n\n>This parm allows you to specify the Package Name on application that will be approved to be a Device Administrator or from which Device Administrator approval will be removed.\n\n>**Note:** You must know and specify the Package Name of that application.  You could acquire the Package Name from the application developer, lookup the Package Name on a device, or use developer tools to extract the Package Name from the APK file.\n\nParm value input rules: \n\n* String with a minimum size of 1 character and a maximum size of 255 characters\n\n####Device Administrator Class Name\nSettable if: Device Administration Action is \"Turn On as Device Administrator\" or \"Turn Off as Device Administrator\"\n\nPivotal parm: No\n\nParm name: DevAdminClass\n\nDescription: \n\n>This parm allows you to specify the Class Name that will be added to or removed from the Device Admin list, which will allow or disallow the application from using the Android Device Admin API's.\n\n>**Note:** You must know and specify the name of the class within the application that implements the DeviceAdminReceiver.  You would likely need to acquire this from the application developer. This is not the same as the Activity class name required to launch the application.\n\n\nParm value input rules: \n\n* String with a minimum size of 1 character and a maximum size of 255 characters\n\n##Example XML\n\n###Set the Screen to Lock to 1 Minute After the Display Times Out\n\n\t:::XML\n\t<wap-provisioningdoc>\n\t\t<characteristic type=\"DevAdmin\" version=\"4.3\" >\n\t\t\t<parm name=\"ScreenLockTimeoutInterval\" value=\"60\"/>\n\t\t</characteristic>\n\t</wap-provisioningdoc>\n\t\n###Allow Application Installs from Unknown Sources\n\n\t:::XML\n\t<wap-provisioningdoc>\n\t\t<characteristic type=\"DevAdmin\" version=\"4.3\" >\n\t\t\t<parm name=\"UnknownSourcesStatus\" value=\"1\"/>\n\t\t</characteristic>\n\t</wap-provisioningdoc>\n\n\n\n## Queries\n\n### Get Apps that are Active Device Admins\n\n#### Input \n\n    :::XML\n    <wap-provisioningdoc>\n        <characteristic type=\"DevAdmin\" version=\"4.3\" >\n\t        <characteristic-query type=\"AppAsDevAdmin\"/>\n        </characteristic>\n    </wap-provisioningdoc>\n\n\n#### Output\n\n    :::XML\n    <wap-provisioningdoc>\n        <characteristic type=\"DevAdmin\" version=\"4.3\" >\n            <characteristic type=\"AppAsDevAdmin\">\n                <parm name=\"DevAdminAction\" value=\"1\"/>\n                <characteristic type=\"DevAdminDetails\">\n                    <parm name=\"DevAdminPkg\" value=\"PackageName1\"/>\n                    <parm name=\"DevAdminClass\" value=\"ClassName1\"/>\n                </characteristic>\n            </characteristic>\n        </characteristic>\n        <characteristic type=\"DevAdmin\" version=\"4.3\" >\n            <characteristic type=\"AppAsDevAdmin\">\n                <parm name=\"DevAdminAction\" value=\"1\"/>\n                <characteristic type=\"DevAdminDetails\">\n                    <parm name=\"DevAdminPkg\" value=\"PackageName2\"/>\n                    <parm name=\"DevAdminClass\" value=\"ClassName2\"/>\n                </characteristic>\n            </characteristic>\n        </characteristic>\n    </wap-provisioningdoc>\n\n\n### Get Screen Lock Timeout Interval\n\n#### Input\n\n\t:::XML\n    <wap-provisioningdoc>\n        <characteristic type=\"DevAdmin\">\n            <parm-query name=\"ScreenLockTimeoutInterval\"/>\n        </characteristic>\n    </wap-provisioningdoc>\n\n\n#### Output \n\n\t:::XML\n    <wap-provisioningdoc>\n        <characteristic type=\"DevAdmin\" version=\"4.3\">\n            <parm name=\"ScreenLockTimeoutInterval\" value=\"1\"/>\n        </characteristic>\n    </wap-provisioningdoc>\n\n### Get Install Apps from Unknown Sources Status\n\n#### Input\n\n\t:::XML\n    <wap-provisioningdoc>\n        <characteristic type=\"DevAdmin\">\n            <parm-query name=\"UnknownSourcesStatus\"/>\n        </characteristic>\n    </wap-provisioningdoc>\n\n#### Output\n\n\t:::XML\n    <wap-provisioningdoc>\n        <characteristic type=\"DevAdmin\" version=\"4.3\">\n            <parm name=\"UnknownSourcesStatus\" value=\"1\"/>\n        </characteristic>\n    </wap-provisioningdoc>\n\n## Feature Compatibility\n\n<iframe src=\"compare.html#mx=4.3&csp=DevAdmin&os=JB&embed=true\"></iframe> "},{"key":"guide-csp-dhcpoptionmgr","name":" DhcpOptionMgr","md":"# DhcpOptionMgr\n\n## About DhcpOptionMgr\n\n### Overview\n\nThe Dynamic Host Configuration Protocol (DHCP) is a standardized network protocol used on Internet Protocol (IP) networks for dynamically distributing network configuration parameters, such as IP addresses for interfaces and services, thus reducing the need for a network administrator or a user to configure these settings manually.\n\nWhen using DHCP on a device, a DHCP Client on the device sends a DHCP Request to a DHCP Server and receives back a DHCP Acknowledgment. A DHCP Request sent by a device can contain information about the device or the DHCP Client or can contain additional requests for additional from the DHCP Server. A DHCP Acknowledgment sent by the DHCP Server contains the IP Address assigned to the device by the DHCP Server, along with any additional information requested by the device in the DHCP Request.\n\nDHCP Options are variable length strings that are identified by DHCP Options Numbers that can be included in a DHCP Request or a DHCP Acknowledgment to convey information between a DHCP Client and a DHCP Server. From the point of view of the device where the DHCP Client is running, a DHCP Option can support a mode of Write (if the DHCP Client sends the option to the DHCP Server in the DHCP Request) or Read (if the DHCP Client receives information from the DHCP Server in the DHCP Acknowledgment). DHCP can support a wide variety of DHCP Options, including custom options that can be defined by equipment vendors or end customers.\n\nThe DhcpOptionMgr Feature Type allows you to configure those DHCP Options that are configurable on Zebra Android devices.\n\n### Main Functionality\n\n* Enable or Disable the use of DHCP Options listed as configurable in the following table:\n\n<div class=\"dhcp-table\">\n <table class=\"table\">\n\t<tr>\n\t\t<th>DHCP Option Number</th>\n\t\t<th>DHCP Option Name</th>\n\t\t<th>Default State</th>\n\t\t<th>Configurable?</th>\n\t\t<th>Supported Mode(s)</th>\n\t</tr>\n  <tr>\n    <td>1</td>\n    <td>Subnet Mask</td>\n\t<td>On</td>\n    <td>No</td>\n\t<td>Read</td>\n  </tr>\n  <tr>\n    <td>3</td>\n    <td>Routers</td>\n\t<td>On</td>\n    <td>No</td>\n\t<td>Read</td>\n  </tr>\n  <tr>\n    <td>6</td>\n    <td>Domain Name Servers</td>\n\t<td>On</td>\n    <td>No</td>\n\t<td>Read</td>\n  </tr>\n  <tr>\n    <td>12</td>\n    <td>Host Name</td>\n\t<td>On</td>\n    <td>Yes</td>\n\t<td>Write</td>\n  </tr>\n  <tr>\n    <td>15</td>\n    <td>Domain Name</td>\n\t<td>On</td>\n    <td>No</td>\n\t<td>Read</td>\n  </tr>\n  <tr>\n    <td>28</td>\n    <td>Broadcast Address</td>\n\t<td>Off</td>\n    <td>Yes</td>\n\t<td>Read</td>\n  </tr>\n  <tr>\n    <td>42</td>\n    <td>NTP Server</td>\n\t<td>Off</td>\n    <td>Yes</td>\n\t<td>Read</td>\n  </tr>\n  <tr>\n    <td>51</td>\n    <td>Lease Time</td>\n\t<td>On</td>\n    <td>No</td>\n\t<td>Read</td>\n  </tr>\n  <tr>\n    <td>66</td>\n    <td>TFTP Server Name</td>\n\t<td>Off</td>\n    <td>Yes</td>\n\t<td>Read</td>\n  </tr>\n  <tr>\n    <td>67</td>\n    <td>Boot File Name</td>\n\t<td>Off</td>\n    <td>Yes</td>\n\t<td>Read</td>\n  </tr>\n  <tr>\n    <td>77</td>\n    <td>User Class</td>\n\t<td>On</td>\n    <td>Yes</td>\n\t<td>Write</td>\n  </tr>\n  <tr>\n    <td>119</td>\n    <td>Domain Search List</td>\n\t<td>Off</td>\n    <td>Yes</td>\n\t<td>Read</td>\n  </tr>\n  <tr>\n    <td>150</td>\n    <td>TFTP Server Address</td>\n\t<td>Off</td>\n    <td>Yes</td>\n\t<td>Read</td>\n  </tr>\n</table>\n</div>\t\n\n>**Note:**  DHCP Options that are shown as not configurable in the above table are supported on Zebra Android devices, but are always enabled and their operation cannot be altered in any way using the DhcpOptionMgr Feature Type.\n\n\n##Parameter Notes\n###Host Name\nPivotal parm: Yes\n\nDescription: \n\n>This parm allows you to control whether a Host Name will be sent by the DHCP Client to the DHCP Server via the Host Name DHCP Option. The Host Name is generally used by a DHCP Server to identify a device on the network and/or to track the devices to which IP Addresses have been assigned.\n\n<div class=\"parm-table\">\n <table class=\"table\">\n\t<tr>\n\t\t<th>Parm Option Name</th>\n\t\t<th>Parm Value</th>\n\t\t<th>Description</th>\n\t</tr>\n  <tr>\n    <td>Do not change</td>\n    <td>\"0\"</td>\n\t<td>This value (or the absence of this parm from the XML) will cause no changes to how this DHCP Option is configured.</td>\n  </tr>\n  <tr>\n    <td>Enable</td>\n    <td>\"1\"</td>\n\t<td>This value will cause this DHCP Option to be turned on and hence will cause the specified Host Name Option to be sent by the DHCP Client to the DHCP Server in the DHCP Request.</td>\n  </tr>\n  <tr>\n    <td>Disable</td>\n    <td>\"2\"</td>\n\t<td>This value will cause this DHCP Option to be turned off and hence will prevent a Host Name from being to be sent by the DHCP Client to the DHCP Server.</td>\n  </tr>\n</table>\n</div>\t\n\n####Host Name Option value\nSettable if: Host Name is \"Enable\"\n\nPivotal parm: No\n\nParm name: HostNameValue\n\nDescription: \n\n>This parm allows you to specify the Host Name that will be sent by the DHCP Client to the DHCP Server in the DHCP Request.\n\nParm value input rules: \n\n* String with a minimum size of 1 character and a maximum size of 91 characters\n\n###User Class\nPivotal parm: Yes\n\nDescription: \n\n>This parm allows you to control whether a User Class will be sent by the DHCP Client to the DHCP Server via the User Class DHCP Option. The User Class is generally used by a DHCP Server to select the proper pool of IP Addresses from which to acquire the IP Address to assign to the device. It may also be used by the DHCP Server to determine which additional information should be returned to the device in the DHCP Acknowledgment.\n\n<div class=\"parm-table\">\n <table class=\"table\">\n\t<tr>\n\t\t<th>Parm Option Name</th>\n\t\t<th>Parm Value</th>\n\t\t<th>Description</th>\n\t</tr>\n  <tr>\n    <td>Do not change</td>\n    <td>\"0\"</td>\n\t<td>This value (or the absence of this parm from the XML) will cause no changes to how this DHCP Option is configured.</td>\n  </tr>\n  <tr>\n    <td>Enable</td>\n    <td>\"1\"</td>\n\t<td>This value will cause this DHCP Option to be turned on and hence will cause the specified User Class to be sent by the DHCP Client to the DHCP Server in the DHCP Request.</td>\n  </tr>\n  <tr>\n    <td>Disable</td>\n    <td>\"2\"</td>\n\t<td>This value will cause this DHCP Option to be turned off and hence will prevent a User Class from being to be sent by the DHCP Client to the DHCP Server.</td>\n  </tr>\n</table>\n</div>\t\n\n####User Class value\nSettable if: User Class is \"Enable\"\n\nPivotal parm: No\n\nParm name: UserClassValue\n\nDescription: \n\n>This parm allows you to specify the User Class value that will be sent by the DHCP Client to the DHCP Server in the DHCP Request.\n\nParm value input rules: \n\n* String with a minimum size of 1 character and a maximum size of 91 characters\n\n###Broadcast Address\nPivotal parm: No\n\nParm name: BroadcastAddrState\n\nDescription: \n\n>The Broadcast Address for a network is the IP Address for which all devices on that network are enabled to receive messages.  A message sent to the Broadcast Address for a network can therefore be received by all devices on that network, rather than a specific device.\n\n>This parm allows you to control whether a request for the Broadcast Address will be sent by the DHCP Client to the DHCP Server in the DHCP Request. When requested, the DHCP Server will return the Broadcast Address for the network to the device in the DHCP Acknowledgment.\n\n<div class=\"parm-table\">\n <table class=\"table\">\n\t<tr>\n\t\t<th>Parm Option Name</th>\n\t\t<th>Parm Value</th>\n\t\t<th>Description</th>\n\t</tr>\n  <tr>\n    <td>Do not change</td>\n    <td>\"0\"</td>\n\t<td>This value (or the absence of this parm from the XML) will cause no changes to how this DHCP Option is configured.</td>\n  </tr>\n  <tr>\n    <td>Enable</td>\n    <td>\"1\"</td>\n\t<td>This value will cause this DHCP Option to be turned on and hence will cause the Broadcast Address to be requested by the DHCP Client in the DHCP Request.</td>\n  </tr>\n  <tr>\n    <td>Disable</td>\n    <td>\"2\"</td>\n\t<td>This value will cause this DHCP Option to be turned off and hence will prevent the Broadcast Address from being requested by the DHCP Client in the DHCP Request.</td>\n  </tr>\n</table>\n</div>\n\n###NTP Server\nPivotal parm: No\n\nParm name: NTPServerState\n\nDescription: \n\n>An NTP (Network Time Protocol) Server is a Server that is capable of providing the current Date and Time to a device. A device must generally know the name or address of an NTP Server in order to query that server to acquire the Date and Time.\n\n>This parm allows you to control whether a request for a NTP Server Address will be sent by the DHCP Client to the DHCP Server in the DHCP Request. When requested, the DHCP Server will return the NTP Server Address to the device in the DHCP Acknowledgment.\n\n>**Note:** The DHCP Client does not automatically use the value returned by this DHCP Option to configure the device to acquire the Date and Time from the returned NTP Server. To configure a device to acquire the Date and Time from the NTP Server, the value of the returned NTP Server Address would need to be obtained using the DhcpOptionMgr Feature Type and then used to configure AutoTime via the Clock Feature Type.\n\n<div class=\"parm-table\">\n <table class=\"table\">\n\t<tr>\n\t\t<th>Parm Option Name</th>\n\t\t<th>Parm Value</th>\n\t\t<th>Description</th>\n\t</tr>\n  <tr>\n    <td>Do not change</td>\n    <td>\"0\"</td>\n\t<td>This value (or the absence of this parm from the XML) will cause no changes to how this DHCP Option is configured.</td>\n  </tr>\n  <tr>\n    <td>Enable</td>\n    <td>\"1\"</td>\n\t<td>This value will cause this DHCP Option to be turned on and hence will cause the NTP Server Address to be requested by the DHCP Client in the DHCP Request.</td>\n  </tr>\n  <tr>\n    <td>Disable</td>\n    <td>\"2\"</td>\n\t<td>This value will cause this DHCP Option to be turned off and hence will prevent the NTP Server Address from being requested by the DHCP Client in the DHCP Request.</td>\n  </tr>\n</table>\n</div>\n\n###TFTP Server Name\nPivotal parm: No\n\nParm name: TFTPSerNameState\n\nDescription: \n\n>A TFTP (Trivial File Transport Protocol) Server provides simple means for a remote client to get or put a file. A primary use of TFTP is configuring a device when it first joins a network. TFTP is used because it is very simple to implement but must be used with caution because it lacks security and other more advanced file transfer features.\n\n>This parm allows you to control whether a request for a TFTP Server Name will be sent by the DHCP Client to the DHCP Server in the DHCP Request. When requested, the DHCP Server will return the TFTP Server Name to the device in the DHCP Acknowledgment.\n\n>**Note:** The DHCP Client does not automatically use the TFTP Server Name to perform any file transfers or configuration. To configure a device using TFTP, the TFTP Server Name would need to be acquired using the DhcpOptionMgr Feature Type and then provided to a TFTP Client that could perform the transfer of one or more files and then perform any desired configuration using those files.\n\n<div class=\"parm-table\">\n <table class=\"table\">\n\t<tr>\n\t\t<th>Parm Option Name</th>\n\t\t<th>Parm Value</th>\n\t\t<th>Description</th>\n\t</tr>\n  <tr>\n    <td>Do not change</td>\n    <td>\"0\"</td>\n\t<td>This value (or the absence of this parm from the XML) will cause no changes to how this DHCP Option is configured.</td>\n  </tr>\n  <tr>\n    <td>Enable</td>\n    <td>\"1\"</td>\n\t<td>This value will cause this DHCP Option to be turned on and hence will cause the TFTP Server Name to be requested by the DHCP Client in the DHCP Request.</td>\n  </tr>\n  <tr>\n    <td>Disable</td>\n    <td>\"2\"</td>\n\t<td>This value will cause this DHCP Option to be turned off and hence will prevent the TFTP Server Name from being requested by the DHCP Client in the DHCP Request.</td>\n  </tr>\n</table>\n</div>\n\n###Boot File Name\nPivotal parm: No\n\nParm name: BootFileState\n\nDescription: \n\n>A Boot File is a file that is typically used to configure a device when it first joins a network. A common usage scenario is to pull a Boot File of a given name from a TFTP Server and then use that Boot File to configure the device.\n\n>This parm allows you to control whether a request for a Boot File name will be sent by the DHCP Client to the DHCP Server in the DHCP Request. When requested, the DHCP Server will return the Boot File name to the device in the DHCP Acknowledgment.\n\n>**Note:** The DHCP Client does not automatically use the Boot File name to perform any file transfers or configuration. To configure a device, a Boot File name and a TFTP Server Name would both be need to be acquired using the DhcpOptionMgr Feature Type and then provided to a TFTP Client that could perform the transfer of the Boot File and then perform any desired configuration using that file.\n\n<div class=\"parm-table\">\n <table class=\"table\">\n\t<tr>\n\t\t<th>Parm Option Name</th>\n\t\t<th>Parm Value</th>\n\t\t<th>Description</th>\n\t</tr>\n  <tr>\n    <td>Do not change</td>\n    <td>\"0\"</td>\n\t<td>This value (or the absence of this parm from the XML) will cause no changes to how this DHCP Option is configured.</td>\n  </tr>\n  <tr>\n    <td>Enable</td>\n    <td>\"1\"</td>\n\t<td>This value will cause this DHCP Option to be turned on and hence will cause the Boot File name to be requested by the DHCP Client in the DHCP Request.</td>\n  </tr>\n  <tr>\n    <td>Disable</td>\n    <td>\"2\"</td>\n\t<td>This value will cause this DHCP Option to be turned off and hence will prevent the Boot File name from being requested by the DHCP Client in the DHCP Request.</td>\n  </tr>\n</table>\n</div>\n\n###Domain Search\nPivotal parm: No\n\nParm name: DomainSearchState\n\nDescription: \n\n>The Domain Name System (DNS) is a hierarchical distributed naming system that associates domain names to the IP Addresses.  When seeking to resolve a name, one or more Domain Name Servers may need to be contacted, in a prioritized order until the name can be successfully resolved. The Domain Search list for a network is an ordered list of DNS server addresses that should be used to resolve names on that network.\n\n>This parm allows you to control whether a request for the Domain Search list will be sent by the DHCP Client to the DHCP Server in the DHCP Request. When requested, the DHCP Server will return the Domain Search list for the network to the device in the DHCP Acknowledgment.\n\n>**Note:** The DHCP Client does not automatically use the Domain Search List to configure the DNS Client to resolve names based on the list. This may be a future enhancement, when the DNS Client provides a way to configure it to use such a list. In the meantime, if name resolution needs to be performed based on this list, it would have to be implemented at an application level. An application would need to acquire the Domain Search List using the DhcpOptionMgr Feature Type and then utilize the information provided in that list to drive an explicit process of requesting name resolution from the DNS Servers for the listed domains\n\n<div class=\"parm-table\">\n <table class=\"table\">\n\t<tr>\n\t\t<th>Parm Option Name</th>\n\t\t<th>Parm Value</th>\n\t\t<th>Description</th>\n\t</tr>\n  <tr>\n    <td>Do not change</td>\n    <td>\"0\"</td>\n\t<td>This value (or the absence of this parm from the XML) will cause no changes to how this DHCP Option is configured.</td>\n  </tr>\n  <tr>\n    <td>Enable</td>\n    <td>\"1\"</td>\n\t<td>This value will cause this DHCP Option to be turned on and hence will cause the Domain Search list to be requested by the DHCP Client in the DHCP Request.</td>\n  </tr>\n  <tr>\n    <td>Disable</td>\n    <td>\"2\"</td>\n\t<td>This value will cause this DHCP Option to be turned off and hence will prevent the Domain Search list from being requested by the DHCP Client in the DHCP Request.</td>\n  </tr>\n</table>\n</div>\n\n###TFTP Server Address\nPivotal parm: No\n\nParm name: TFTPSerAddrState\n\nDescription: \n\n>The TFTP Server Address DHCP Option (Option 150) is basically a Cisco-proprietary version of the standard TFTP Server Name DHCP Option (Option Number 150).\n\n>This parm allows you to control whether a request for a TFTP Server Address will be sent by the DHCP Client to the DHCP Server in the DHCP Request. When requested, the DHCP Server will return the TFTP Server Address to the device in the DHCP Acknowledgment.\n\n>**Note:** The DHCP Client does not automatically use the TFTP Server Address to perform any file transfers or configuration.  To configure a device using TFTP, the TFTP Server Address would need to be acquired using the DhcpOptionMgr Feature Type and then provided to a TFTP Client that could perform the transfer of one or more files and then perform any desired configuration using those files.\n\n<div class=\"parm-table\">\n <table class=\"table\">\n\t<tr>\n\t\t<th>Parm Option Name</th>\n\t\t<th>Parm Value</th>\n\t\t<th>Description</th>\n\t</tr>\n  <tr>\n    <td>Do not change</td>\n    <td>\"0\"</td>\n\t<td>This value (or the absence of this parm from the XML) will cause no changes to how this DHCP Option is configured.</td>\n  </tr>\n  <tr>\n    <td>Enable</td>\n    <td>\"1\"</td>\n\t<td>This value will cause this DHCP Option to be turned on and hence will cause the TFTP Server Address to be requested by the DHCP Client in the DHCP Request.</td>\n  </tr>\n  <tr>\n    <td>Disable</td>\n    <td>\"2\"</td>\n\t<td>This value will cause this DHCP Option to be turned off and hence will prevent the TFTP Server Address from being requested by the DHCP Client in the DHCP Request.</td>\n  </tr>\n</table>\n</div>\n\n## Feature Compatibility\n\n<iframe src=\"compare.html#mx=4.3&csp=DhcpOptionMgr&os=JB&embed=true\"></iframe> "},{"key":"guide-csp-display","name":" DisplayMgr","md":"# DisplayMgr\n\n## About DisplayMgr\n\n### Overview\n\nThe DisplayMgr Feature Type allows you to control the display screen on the device. At present, the only option is to configure the timeout value after which the display turns off to conserve battery power. Future versions of the DisplayMgr Feature Type may provide the ability to control other aspects of the display screen.\n\n### Main Functionality\n\n* Set the Display Screen Timeout Interval\n \n##Parameter Notes\n###Set the Screen Off Timeout Interval\nPivotal parm: No\n\nParm name: TimeoutInterval\n\nDescription: \n\n>This parm will allow you to set the timeout interval for the device's screen. When there are no device user interactions (e.g. touch panel or key activations) within the specified time interval, then the display screen of the device will automatically turn off. Setting this interval to a lower amount of time will help to conserve power on the device, at the expense of potentially reduced convenience for the device user.\n\n>**Note:** The underlying Android display system only supports the selection of a fixed set of values for the display screen timeout, determined by the values supported by the System Settings Menu. This parm can only set the actual display screen timeout to one of those supported values (listed in the table below). Specifying a value that is less than the smallest value shown in the table or greater than the largest value shown in the table will cause no change to be made to the current display screen timeout interval and will cause an error to be returned in the Result XML document. Specifying a value between two supported values shown in the table will cause the closest value to the requested value to be selected, with no error returned in the Result XML document.\n\n<div class=\"parm-table\">\n <table class=\"table\">\n\t<tr>\n\t\t<th>Parm Option Name</th>\n\t\t<th>Parm Value</th>\n\t\t<th>Description</th>\n\t</tr>\n  <tr>\n    <td>Do not change</td>\n    <td>\"0\"</td>\n\t<td>This value (or the absence of this parm from the XML) will not cause any changes to the current display screen timeout interval.</td>\n  </tr>\n  <tr>\n    <td>15 seconds</td>\n    <td>\"15\"</td>\n\t<td>This value will cause the display screen to timeout after 15 seconds with no device user interactions.</td>\n  </tr>\n  <tr>\n    <td>30 seconds</td>\n    <td>\"30\"</td>\n\t<td>This value will cause the display screen to timeout after 30 seconds with no device user interactions.</td>\n  </tr>\n  <tr>\n    <td>1 minute</td>\n    <td>\"60\"</td>\n\t<td>This value will cause the display screen to timeout after 1 minute with no device user interactions.</td>\n  </tr>\n  <tr>\n    <td>2 minutes</td>\n    <td>\"120\"</td>\n\t<td>This value will cause the display screen to timeout after 2 minutes with no device user interactions.</td>\n  </tr>\n  <tr>\n    <td>5 minutes</td>\n    <td>\"300\"</td>\n\t<td>This value will cause the display screen to timeout after 5 minutes with no device user interactions.</td>\n  </tr>\n  <tr>\n    <td>10 minutes</td>\n    <td>\"600\"</td>\n\t<td>This value will cause the display screen to timeout after 10 minutes with no device user interactions.</td>\n  </tr>\n  <tr>\n    <td>30 minutes</td>\n    <td>\"1800\"</td>\n\t<td>This value will cause the display screen to timeout after half an hour with no device user interactions.</td>\n  </tr>\n</table>\n</div>\n\n##Example XML\n### Set Backlight Timeout\n\n    :::XML\n    <wap-provisioningdoc>\n        <characteristic type=\"DisplayMgr\" version=\"4.3\" >\n            <parm name=\"TimeoutInterval\" value=\"60\"/>\n        </characteristic>\n    </wap-provisioningdoc>\n\n\n## Feature Compatibility\n\n<iframe src=\"compare.html#mx=4.3&csp=DisplayMgr&os=JB&embed=true\"></iframe> "},{"key":"guide-csp-encrypt","name":" EncryptMgr","md":"# EncryptMgr\n\n## About EncryptMgr\n\n### Overview\n\nTo configure encryption, certain questions must be answered:\n\n* What data will be encrypted?\n* Where will the encrypted version of the data be physically stored?\n* How will the unencrypted version of the data be accessed by applications?\n* Which keys will be used to encrypt and decrypt the data?\n\nZebra Android devices support encrypting data that is stored in the device file system using two modes of operation:\n\n* Full Storage Card Encryption Mode allows a single Storage Card, usually the one that is physically removable (e.g. a Micro SD Card) to be formatted as one single encrypted file system.  This mode is particularly useful, from a security point of view, because it protects all data stored on the Storage Card from being accessed externally if the card is physically removed from the device.  In this mode, the entire card is encrypted, and the key used to perform the encryption is not stored on the card.  Since data is encrypted and decrypted transparently, applications running on the device can access all the data on the Storage Card as if it were not encrypted.  Applications access an encrypted Storage Card using the same paths they would use if the Storage Card was not encrypted. \n\n>**Note:** Changing a Storage Card from unencrypted to encrypted or encrypted to unencrypted requires reformatting the card and hence causes the loss of all data on the card.  If there is data that must be preserved, it would have to be copied to another location before activating or deactivating encryption and then copied back after the card is reformatted.\n\n* Folder Encryption Mode allows any number of Encrypted File Systems (EFS) to be created.  The data for each EFS resides in a single file that must be stored on some non-encrypted file system.  This file is called the Backing Storage File (BSF).  A BSF can be located on internal storage (e.g. /data) or on the Primary Storage Card.  The BSF is named based on the name of the EFS.  An EFS is mounted at a virtual path, called its Mount Point.  The Mount Point for an EFS could specify a path on the same non-encrypted file system where the BSF is located or could specify a path on a different file system.  Since data is encrypted and decrypted transparently, applications running on the device can access all the data on an EFS as if it was not encrypted.  Applications must access an EFS using the Mount Point path that is established when the EFS is created.\n\n>**Note:** While the BSF for an EFS can be stored on a Storage Card that is removable, it cannot be stored on a Storage Card that is encrypted using Full Storage Card Encryption Mode.  If an attempt is made to create an EFS, whose BSF is on a Storage Card that is encrypted using Full Storage Card Encryption, then an error will be returned in the Result XML.\n\nZebra Android devices have a Key Storage Database of named encryption keys.  Each Named Key has an associated Key Value that can be used to encrypt a Full Storage Card and/or to encrypt any number of EFSes.  When activating Full Storage Card Encryption or creating an EFS, a Named Key must be specified and must exist in the Key Storage Database.  If a Named Key is removed from the Key Storage Database, Full Storage Card Encryption and/or EFSes that are encrypted using that Named Key will become inaccessible.  Adding the Named Key (with the same Key Value) will restore accessibility.\n\nThe EncryptMgr Feature Type allows you to manage the Key Storage Database, activate or deactivate Full Storage Card Encryption, and create or delete EFSes.\n\n### Main Functionality\n\n* Add and Remove Named Keys\n* Create and Delete Encrypted File Systems\n* Format the Storage Card as Encrypted or Unencrypted\n\n##Parameter Notes\n###Install Key?\nPivotal parm: Yes\n\nDescription: \n\n>This parm allows you to choose whether or not to Add a Named Key to the Key Storage Database on the device.\n\n>**Note:** Only one Encrypted File System can be mounted at a time using a given Mount Point. If an attempt to create an EFS with a Mount Point that is already in used by a mounted EFS, the new EFS will be created, but will not be mounted.\n\n>Adding a Named Key to the Key Storage Database on the device makes a key available for use when activating Full Storage Card Encryption or when creating EFSes.\n\n>**Note:** If you Add a Named Key to the Key Storage Database, it can have an impact on a Storage Card or on Encrypted File Systems that were encrypted using that key and that previously became inaccessible when that key was Removed. By adding the same Key Name with the same associated Key Value, they will be re-mounted and hence will become accessible again.\n\n<div class=\"parm-table\">\n <table class=\"table\">\n\t<tr>\n\t\t<th>Parm Option Name</th>\n\t\t<th>Parm Value</th>\n\t\t<th>Description</th>\n\t</tr>\n  <tr>\n    <td>Do nothing</td>\n    <td>\"0\"</td>\n\t<td>This value (or the absence of this parm from the XML) will not cause a Named Key to be added to the Key Storage Database.</td>\n  </tr>\n  <tr>\n    <td>Install key</td>\n    <td>\"1\"</td>\n\t<td>This value will cause a Named Key, along with an associated Key Value, to be added to the Key Storage Database.</td>\n  </tr>\n</table>\n</div>\n\n####Install Key Name\nSettable if: The Install Key action is \"Install key\"\n\nPivotal parm: No\n\nParm name: InstallKeyName\n\nDescription: \n\n>This parm allows you to specify the name of the Named Key that will be added to the Key Storage Database.\n\n>**Note:** If an attempt is made to add a Named Key that is already in the Key Storage Database, then an error will be returned in the Result XML.\n\nParm value input rules: \n\n* String with a minimum size of 1 character\n\n####Install Key Value\nSettable if: The Install Key action is \"Install key\"\n\nPivotal parm: No\n\nParm name: InstallKeyValue\n\nDescription: \n\n>This parm allows you to specify the Key Value to be associated with a Named Key that is being added to the Key Storage Database. Specifying an empty (length of zero) value (or the absence of this parm from the XML) will cause a random key value to be automatically generated and used.\n\n>**Note:** If random key generation is used, there will be no way to extract the generated key from the device. Further, there is no method provided to guarantee that the same key is generated at a later time. This means that if a generated key is used for encryption and is then lost (such as due to Enterprise Reset), any data encrypted using that key will be unrecoverable.\n\nParm value input rules: \n\n* HEX string that is empty (length of zero) or must be exactly 64 bytes that encode a 128 bit binary value that will be used as an AES encryption Key Value.\n\n>**Note:** The generation of Key Values can be accomplished using any desired mechanism since any 128 bit value can be used as an AES encryption Key Value.  For best results, Key Values should be generated randomly, to make them hard to predict.  Once generated, Key Values should be managed carefully since, if disclosed, a Key Value could be used to compromise the security of any data that is protected using that key.\n\n###Revoke Key?\nPivotal parm: Yes\n\nDescription: \n\n>This parm allows you to choose whether or not to Remove a Named Key from the Key Storage Database.\n\n>**Note:** If an attempt is made to Remove a Named Key that is not currently in the Key Storage Database, then an error will be returned in the Result XML.\n\n>Removing a Named Key from the Key Storage Database prevents that key from subsequently being used when activating Full Storage Card Encryption or when creating EFSes.\n\n>**Note:** When a Named Key is successfully Removed from the Key Storage Database, then any Storage Card or Encrypted File Systems that were encrypted using that key and that were mounted will be un-mounted and hence will become inaccessible.\n\n\n<div class=\"parm-table\">\n <table class=\"table\">\n\t<tr>\n\t\t<th>Parm Option Name</th>\n\t\t<th>Parm Value</th>\n\t\t<th>Description</th>\n\t</tr>\n  <tr>\n    <td>Do nothing</td>\n    <td>\"0\"</td>\n\t<td>This value (or the absence of this parm from the XML) will not cause any Named Key to be Removed from the Key Storage Database.</td>\n  </tr>\n  <tr>\n    <td>Revoke key</td>\n    <td>\"1\"</td>\n\t<td>This value will cause an Encryption Key to be Removed from the Key Storage Database.</td>\n  </tr>\n</table>\n</div>\t\n\n####Revoke Key Name(s)\nSettable if: The Revoke Key action is \"Revoke key\"\n\nPivotal parm: No\n\nParm name: RevokeKeyName\n\nDescription: \n\n>This parm allows you to specify the name(s) of the Named Key(s) to be Removed from the Key Storage Database.\n\nParm value input rules: \n\n* String with a minimum size of 1 character\n* The names must be separated by commas\n\n###Create EFS?\nPivotal parm: Yes\n\nDescription: \n\n>This parm allows you to choose whether or not to create an Encrypted File System on the device.\n\n>**Note:** The process of Creating an Encrypted File System takes time since it must create the Backing Storage File and mount the EFS on its designated Mount Point. As a result, applications will not be able to access an EFS via its Mount Point until it is successfully mounted.  Further, an EFS could later be un-mounted if the Key Name it is using is Removed from the Key Storage Database. Applications that use an EFS should thus include error handling logic that can deal with situations where the EFS is not mounted and hence cannot be accessed.\n\n>An attempt to Create an Encrypted File System creation may fail for various reasons, including:\n\n>* A BSF with the specified EFS name already exists in the specified storage location.  Only one EFS of a given name can created on each storage location.\n>* The storage location specified for the BSF is not accessible (e.g. is not mounted) or is not writable.\n>* The storage location specified for the BSF has insufficient free space to create the BSF of the specified size.\n>* The storage location specified for the BSF is a Storage Card for which Full Storage Card Encryption has been activated.\n>* The Named Key specified for the EFS is not present in the Key Storage Database.\n>* The size specified for the EFS is invalid.\n\n<div class=\"parm-table\">\n <table class=\"table\">\n\t<tr>\n\t\t<th>Parm Option Name</th>\n\t\t<th>Parm Value</th>\n\t\t<th>Description</th>\n\t</tr>\n  <tr>\n    <td>Do nothing</td>\n    <td>\"0\"</td>\n\t<td>This value (or the absence of this parm from the XML) will cause no Encrypted File System to be created.</td>\n  </tr>\n  <tr>\n    <td>Create EFS</td>\n    <td>\"1\"</td>\n\t<td>This value will cause an Encrypted File System to be created.</td>\n  </tr>\n</table>\n</div>\t\n\n####EFS Name\nSettable if: The Create EFS action is \"Create EFS\"\n\nPivotal parm: No\n\nParm name: EFSName\n\nDescription: \n\n>This parm allows you to specify the name of the Encrypted File System to be Created.\n\nParm value input rules: \n\n* String with a minimum size of 1 character\n\n####EFS Key Name\nSettable if: The Create EFS action is \"Create EFS\"\n\nPivotal parm: No\n\nParm name: EFSKeyName\n\nDescription: \n\n>This parm allows you to specify the Named Key to use to Create the Encrypted File System.\n\nParm value input rules: \n\n* String with a minimum size of 1 character\n\n####EFS Location (internal/SDcard)\nSettable if: The Create EFS action is \"Create EFS\"\n\nPivotal parm: No\n\nParm name: EFSLocation\n\nDescription: \n\n>This parm allows you to specify the storage location where the Backing Storage File should be stored for the Encrypted File System to be Created.\n\n<div class=\"parm-table\">\n <table class=\"table\">\n\t<tr>\n\t\t<th>Parm Option Name</th>\n\t\t<th>Parm Value</th>\n\t\t<th>Description</th>\n\t</tr>\n  <tr>\n    <td>Internal</td>\n    <td>\"0\"</td>\n\t<td>This value indicates that the BSF for the EFS will be created in the internal storage (i.e. /data) of the device.</td>\n  </tr>\n  <tr>\n    <td>SDcard</td>\n    <td>\"1\"</td>\n\t<td>This value indicates that the BSF for the EFS will be created on the Primary Storage Card of the device.</td>\n  </tr>\n</table>\n</div>\t\n\n####Mount path for EFS\nSettable if: The Create EFS action is \"Create EFS\"\n\nPivotal parm: No\n\nParm name: MountPath\n\nDescription: \n\n>This parm allows you to specify the Mount Path to be used for the Encrypted File System to be Created.\n\nParm value input rules: \n\n* String with a minimum size of 1 character\n\n####Size of EFS in MB\nSettable if: The Create EFS action is \"Create EFS\"\n\nPivotal parm: No\n\nParm name: VolumeSize\n\nDescription: \n\n>This parm allows you to specify the size of the Backing Storage File in Megabytes (MB) for the Encrypted File System to be Created.\n\nParm value input rules: \n\n* String with a minimum size of 1 character\n* This value must be at least 1MB and cannot exceed 4096MB.\n\n###Delete EFS?\nPivotal parm: Yes\n\nDescription: \n\n>This parm allows you to choose whether or not to Delete an Encrypted File System.\n\n<div class=\"parm-table\">\n <table class=\"table\">\n\t<tr>\n\t\t<th>Parm Option Name</th>\n\t\t<th>Parm Value</th>\n\t\t<th>Description</th>\n\t</tr>\n  <tr>\n    <td>Do nothing</td>\n    <td>\"0\"</td>\n\t<td>This value (or the absence of this parm from the XML) will not cause an Encrypted File System to be Deleted.</td>\n  </tr>\n  <tr>\n    <td>Delete EFS</td>\n    <td>\"1\"</td>\n\t<td>This value will cause an Encrypted File System to be Deleted.</td>\n  </tr>\n</table>\n</div>\t\n\n####EFS Location (internal/SDcard)\nSettable if: The Create EFS action is \"Create EFS\"\n\nPivotal parm: No\n\nParm name: DeleteEFSLocation\n\nDescription: \n\n>This parm allows you to specify the storage location of the Backing Storage File of the Encrypted File System to be Deleted.\n\n<div class=\"parm-table\">\n <table class=\"table\">\n\t<tr>\n\t\t<th>Parm Option Name</th>\n\t\t<th>Parm Value</th>\n\t\t<th>Description</th>\n\t</tr>\n  <tr>\n    <td>Internal</td>\n    <td>\"0\"</td>\n\t<td>This value indicates that the BSF for the EFS to be Deleted is in the internal storage (i.e. /data) of the device.</td>\n  </tr>\n  <tr>\n    <td>SDcard</td>\n    <td>\"1\"</td>\n\t<td>This value indicates that the BSF for the EFS to be Deleted is on the Primary Storage Card of the device.</td>\n  </tr>\n</table>\n</div>\t\n\n###SDcard Operation\nPivotal parm: Yes\n\nDescription: \n\n>This parm allows you to choose whether Full Storage Card Encryption should be activated or deactivated.\n\n>An attempt to Activate or Deactivate Full Storage Card Encryption may fail for various reasons, including:\n\n>* The Storage Card is removable and is not currently present in the device\n>* The Storage Card is not currently mounted or is inaccessible\n>* The specified Named Key is not present in the Key Storage Database.\n\n>**Note:** Whenever Full Storage Card Encryption is activated or deactivated, the Storage Card must be reformatted as encrypted or unencrypted, respectively. Reformatting causes the loss of all data on the card. If there is data that must be preserved, it would have to be copied to another location before activating or deactivating encryption and then copied back after the card is reformatted.\n\n<div class=\"parm-table\">\n <table class=\"table\">\n\t<tr>\n\t\t<th>Parm Option Name</th>\n\t\t<th>Parm Value</th>\n\t\t<th>Description</th>\n\t</tr>\n  <tr>\n    <td>Do nothing</td>\n    <td>\"0\"</td>\n\t<td>This value (or the absence of this parm from the XML) will cause no changes to whether Full Storage Card Encryption is activated or deactivated.</td>\n  </tr>\n  <tr>\n    <td>Encrypt SDcard</td>\n    <td>\"1\"</td>\n\t<td>This value will cause Full Storage Card Encryption to be activated, thus causing the Storage Card to be reformatted as encrypted.</td>\n  </tr>\n  <tr>\n    <td>Format SDcard</td>\n    <td>\"2\"</td>\n\t<td><p>This value will cause Full Storage Card Encryption to be deactivated, thus causing the Storage Card to be reformatted as unencrypted.</p></td>\n  </tr>\n</table>\n</div>\t\n\n####Key to encrypt SDcard\nSettable if: The SDcard Operation is \"Encrypt SDcard\"\n\nPivotal parm: No\n\nParm name: SdCardKeyName\n\nDescription: \n\n>This parm allows you to specify the Named Key that will be used to perform Full Storage Card Encryption.\n\n>**Note:** If the Named Key is not present in the Key Storage Database then an error will be returned in the Result XML.\n\nParm value input rules: \n\n* String with a minimum size of 1 character\n\n## Example XML\n### Encrypt SD Card \n\n    :::XML\n    <wap-provisioningdoc>\n        <characteristic type=\"EncryptMgr\" version=\"4.3\" >\n            <parm name=\"SdCardOperation\" value=\"1\"/>\n            <parm name=\"SdCardKeyName\" value=\" EncryptKey\"/>\n        </characteristic>\n    </wap-provisioningdoc>\n\n## Queries\n\n### Get Sdcard Encryption State\n\n#### Input \n\n    :::XML\n    <wap-provisioningdoc>\n        <characteristic type=\"EncryptMgr\">\n            <parm-query name=\"SdCardOperation\" />\n        </characteristic>\n\t</wap-provisioningdoc>\n\n#### Output\n\n    :::XML\n\t<wap-provisioningdoc>\n        <characteristic type=\"EncryptMgr\" version=\"4.3\">\n            <parm name=\"SdCardOperation\" value=\"1\" />\n        </characteristic>\n\t</wap-provisioningdoc>    \n\n### Get EFS (Encrypted File System) List\n\n#### Input \n\n    :::XML\n    <wap-provisioningdoc>\n        <characteristic type=\"EncryptMgr\" version=\"4.3\">\n            <characteristic-query type=\"CreateEFS\"/>\n        </characteristic>\n\t</wap-provisioningdoc>\n\n#### Output\n\n    :::XML\n    <wap-provisioningdoc>\n        <characteristic type=\"EncryptMgr\" version=\"4.3\">\n            <characteristic type=\"CreateEFS\"/>\n                <parm name=\"CreateEFSAction\" value=\"1\" /> \n                <characteristic type=\"CreateEFSDetails\">\n                    <parm name=\"EFSName\" value=\" EFSName1\" /> \n                    <parm name=\"EFSKeyName\" value=\" EFSKeyName1\" /> \n                    <parm name=\"EFSLocation\" value=\" StorageType1\" /> \n                    <parm name=\"MountPath\" value=\" MountPath1\" /> \n                    <parm name=\"VolumeSize\" value=\" VolumeSize1\" /> \n                </characteristic>\n            </characteristic>\n        </characteristic>\n        <characteristic type=\"EncryptMgr\" version=\"4.3\">\n            <characteristic type=\"CreateEFS\"/>\n                <parm name=\"CreateEFSAction\" value=\"1\" /> \n                <characteristic type=\"CreateEFSDetails\">\n                    <parm name=\"EFSName\" value=\" EFSName2\" /> \n                    <parm name=\"EFSKeyName\" value=\" EFSKeyName2\" /> \n                    <parm name=\"EFSLocation\" value=\" StorageType2\" /> \n                    <parm name=\"MountPath\" value=\" MountPath2\" /> \n                    <parm name=\"VolumeSize\" value=\" VolumeSize2\" /> \n                </characteristic>\n            </characteristic>\n        </characteristic>\n\t</wap-provisioningdoc>\n\n### Get Key List\n\n#### Input \n\n    :::XML\n    <wap-provisioningdoc>\n        <characteristic type=\"EncryptMgr\" version=\"4.3\">\n            <characteristic-query type=\"InstallKey\"/>\n        </characteristic>\n\t</wap-provisioningdoc>\n\n#### Output\n\n    :::XML\n    <wap-provisioningdoc>\n        <characteristic type=\"EncryptMgr\" version=\"4.3\">\n            <characteristic type=\"InstallKey\"/>\n                <parm name=\"InstallKeyAction\" value=\"1\" /> \n                <characteristic type=\" InstallKeyDetails \">\n                    <parm name=\"InstallKeyName\" value=\" KeyName1\" /> \n                </characteristic>\n            </characteristic>\n        </characteristic>\n        <characteristic type=\"EncryptMgr\" version=\"4.3\">\n            <characteristic type=\"InstallKey\"/>\n                <parm name=\"InstallKeyAction\" value=\"1\" /> \n                <characteristic type=\" InstallKeyDetails \">\n                    <parm name=\"InstallKeyName\" value=\" KeyName2\" /> \n                </characteristic>\n            </characteristic>\n        </characteristic>\n\t</wap-provisioningdoc>\n\n## Feature Compatibility\n\n<iframe src=\"compare.html#mx=4.3&csp=EncryptMgr&os=JB&embed=true\"></iframe> "},{"key":"guide-csp-file","name":" FileMgr","md":"# FileMgr\n\n## About FileMgr\n\n### Overview\n\nThe File Manager feature enables your application to manage files on the device. For example you can download a file from a server and it save on the device\n\n### Main Functionality\n\n* Transfer a File \n* Copy a file\n* Delete a file\n\n## Feature Compatibility\n\n<iframe src=\"compare.html#mx=4.3&csp=FileMgr&os=JB&embed=true\"></iframe> "},{"key":"guide-csp-gprs","name":" GprsMgr","md":"# GprsMgr\n\n## About GprsMgr\n\n### Overview\n\nDevices equipped with Wireless Wide Area Networks (WWAN or Cellular Data) modems can support one or more of the following WWAN technology types:\n\n* GPRS (General Packet Radio Service) is a modulation method used to enable data communications over GSM (Global System for Mobile Communications) cellular networks. For the purposes of this discussion, the key characteristic of GPRS networks is the presence of a SIM (Subscriber Identity Module) Card to securely store the mobile subscriber identity (IMSI) number and its related key, which are used to identify and authenticate subscribers. Inserting a SIM Card allows basic cellular service (including voice and text messaging over a GSM network) to be established. However, cellular data service may require additional configuration that cannot be performed based solely on the information provided by the SIM Card.\n* CDMA (Code Division Multiple Access) is a modulation method used in many mobile phone standards such as cdmaOne, CDMA2000 (the 3G evolution of cdmaOne), and WCDMA. For the purposes of this discussion, the key characteristic of CDMA networks is the lack of a SIM Card. Lacking a SIM Card often meant that cellular service has to be activated through a manual process between the device user and the cellular provider. During this activation process, all services (voice, text messaging, and cellular data) were generally configured.\n* LTE (Long-Term Evolution or 4G) is a modulation method that is a lends itself to the extension of both CDMA and GPRS into 4G. For the purposes of this discussion, the key characteristic of LTE networks is the presence of a SIM (Subscriber Identity Module) Card to securely store the mobile subscriber identity (IMSI) number and its related key, which are used to identify and authenticate subscribers. In addition, LTE SIM Cards contain additional information that generally allow cellular data service to be activated with the additional configuration that was often required for GPRS.\n\nAs noted above, devices that are operating on GSM networks, and that need to use GPRS cellular data over those networks, may need to perform additional configuration by providing information that cannot be obtained from the SIM Card. This required configuration is usually referred to as the APN (Access Point Name), although this is a bit of a misnomer since the configuration actually requires more than just the name of the Access Point. An APN identifies the packet data network (PDN) that a mobile data user wants to communicate with and may also define the type of service available. Configuring use of an APN by a device generally requires configuring the actual name of the Access Point as well as username and password information required to connect via that Access Point.\n\nA GPRS-equipped Android device must generally have a suitable APN defined for each GPRS cellular data network that will be used. If only one GPRS cellular data network will be used, then only one APN will need to be defined. But if multiple GPRS cellular data network will need to be used (e.g. to support roaming amongst multiple geographical locations), then multiple APNs would need to be defined.\n\nThe GprsMgr Feature Type allows you to Add or Remove APNs from the set of defined APNs and set which APN is the default APN to which the device will automatically connect.\n\n### Main Functionality\n\n* Add/Update or Remove APN\n* Remove all APNs\n* Set Default APN\n\n\n##Parameter Notes\n### APN Action\nPivotal parm: Yes\n\nDescription: \n\n>This parm allows you to choose the APN action that should be performed.\n\n<div class=\"parm-table\">\n <table class=\"table\">\n\t<tr>\n\t\t<th>Parm Option Name</th>\n\t\t<th>Parm Value</th>\n\t\t<th>Description</th>\n\t</tr>\n  <tr>\n    <td>Add/replace named APN</td>\n    <td>\"1\"</td>\n\t<td>This value will cause an APN to be added or replaced.</td>\n  </tr>\n  <tr>\n    <td>Remove existing named APN</td>\n    <td>\"2\"</td>\n\t<td>This value will cause a specified APN to be removed.</td>\n  </tr>\n  <tr>\n    <td>Remove all existing APNs</td>\n    <td>\"3\"</td>\n\t<td>This value will cause all existing APNs to be removed.</td>\n  </tr>\n</table>\n</div>\t\n\n####GPRS Carrier \nSettable if: The APN Action is \"Add/replace named APN\"\n\nPivotal parm: Yes\n\nDescription: \n\n>This parm allows you to specify whether the APN to be defined should be a standard pre-defined APN of a well-known GPRS carrier or if the APN should be configured by specifying custom information.\n\n<div class=\"parm-table\">\n <table class=\"table\">\n\t<tr>\n\t\t<th>Parm Option Name</th>\n\t\t<th>Parm Value</th>\n\t\t<th>Description</th>\n\t</tr>\n  <tr>\n    <td>ATT</td>\n    <td>\"1\"</td>\n\t<td><p>This value indicates that AT&T is the GPRS carrier and that the standard public APN used by AT&T should be used.</p><p><b>Note:</b> If you want to use an AT&T APN other than the standard AT&T public APN, then you should choose \"Custom\" and supply the values for the desired AT&T APN that must be obtained from AT&T.</p></td>\n  </tr>\n  <tr>\n    <td>T-Mobile</td>\n    <td>\"2\"</td>\n\t<td><p>This value indicates that T-Mobile is the GPRS carrier and that the standard public APN used by T-Mobile should be used.</p><p><b>Note:</b> If you want to use a T-Mobile APN other than the standard T-Mobile public APN, then you should choose \"Custom\" and supply the values for the desired T-Mobile APN that must be obtained from T-Mobile.</p></td>\n  </tr>\n  <tr>\n    <td>Custom</td>\n    <td>\"0\"</td>\n\t<td>This value indicates that the APN is not one of the pre-defined carrier APNs and should be configured by providing custom values provided by the GPRS carrier.\n</td>\n  </tr>\n</table>\n</div>\t\n\n####APN Name\nSettable if: The APN Action is \"Add/replace named APN\" or \"Remove existing named APN\"\n\nPivotal parm: No\n\nParm name: ApnName\n\nDescription: \n\n>This parm allows you to specify the name by which the APN will be known in the device. Each APN defined in a device must have a unique name. Once an APN with a given name has been added, that name can be used to Remove that APN definition from the device or to Replace the definition of that APN with a new definition.\n\n>**Note:** This parm does not specify the Access Point Name on the network, it only specifies the name by which the APN will be known and referred to locally on the device. The actual name of the APN on the network is specified in the parm described below under Access Point.\n\nParm value input rules: \n\n* String with a minimum size of 1 character and a maximum size of 255 characters\n\n####Replace If Exists?\nSettable if: The APN Action is \"Add/replace named APN\"\n\nPivotal parm: No\n\nParm name: ReplaceIfExisting\n\nDescription: \n\n>This parm allows you to specify whether an APN of the same name that is already defined on the device should be replaced by the APN being added, if an APN with the same name already exists on the device.\n\n<div class=\"parm-table\">\n <table class=\"table\">\n\t<tr>\n\t\t<th>Parm Option Name</th>\n\t\t<th>Parm Value</th>\n\t\t<th>Description</th>\n\t</tr>\n  <tr>\n    <td>True</td>\n    <td>\"1\"</td>\n\t<td>This value will cause an APN of the specified name to be replaced if it already is defined. This means that the existing APN will be Removed and replaced with the new APN.</td>\n  </tr>\n  <tr>\n    <td>False</td>\n    <td>\"0\"</td>\n\t<td>This value will not cause an APN to be replaced if it exists already. This means that if an existing APN has the same name as the new APN, the new APN will not be added and an error will be returned in the Result XML.</td>\n  </tr>\n</table>\n</div>\t\n\n####Make Default APN?\nSettable if: The APN Action is \"Add/replace named APN\"\n\nPivotal parm: No\n\nParm name: MakeDefault\n\nDescription: \n\n>This parm allows you to specify whether the new APN being added should be made the new default (preferred) APN. When connecting automatically, the system will connect to the default APN if possible, before considering other APNs.\n\n<div class=\"parm-table\">\n <table class=\"table\">\n\t<tr>\n\t\t<th>Parm Option Name</th>\n\t\t<th>Parm Value</th>\n\t\t<th>Description</th>\n\t</tr>\n  <tr>\n    <td>True</td>\n    <td>\"1\"</td>\n\t<td>This value will cause the new APN to be set as the new default APN.</td>\n  </tr>\n  <tr>\n    <td>False</td>\n    <td>\"0\"</td>\n\t<td>This value will not cause any change to the current default APN.</td>\n  </tr>\n</table>\n</div>\t\n\n####Access Point\nSettable if: The APN Action is \"Add/replace named APN\" *AND* the GPRS Carrier is \"Custom\"\n\nPivotal parm: No\n\nParm name: CustomAccessPoint\n\nDescription: \n\n>This parm allows you to specify the name by which the desired APN is known on the network. The value is generally obtained from the GPRS carrier that provides the APN (e.g. \"wap.cingular\" is the name of an APN that is commonly used by AT&T). This is only relevant when the value chosen for GPRS Carrier was \"Custom\" since otherwise the APN values for the pre-defined APN will be provided automatically based on the selected GPRS carrier.\n\nParm value input rules: \n\n* String with a minimum size of 1 character and a maximum size of 255 characters\n\n####User Name\nSettable if: The APN Action is \"Add/replace named APN\" *AND* the GPRS Carrier is \"Custom\"\n\nPivotal parm: No\n\nParm name: CustomUserName\n\nDescription: \n\n>This parm value allows you to specify the User Name that will be used to authenticate to the APN being added.  The value is generally obtained from the GPRS carrier that provides the APN (e.g. \"WAP.CINGULARGPRS.COM\" is the User Name used to authenticate to an APN that is commonly used by AT&T). This is only relevant when the value chosen for GPRS Carrier was \"Custom\" since otherwise the APN values for the pre-defined APN will be provided automatically based on the selected GPRS carrier.\n\n>**Note:** If an empty (length of 0) value is specified, then no User Name will be used. This should only generally only be done if the GPRS carrier indicates that authentication using a User Name is not required for a given APN.\n\nParm value input rules: \n\n* String with a minimum size of 0 characters and a maximum size of 255 characters\n\n####Password\nSettable if: The APN Action is \"Add/replace named APN\" *AND* the GPRS Carrier is \"Custom\"\n\nPivotal parm: No\n\nParm name: CustomPassword\n\nDescription: \n\n>This parm value allows you to specify the Password that will be used to authenticate to the APN being added. The value is generally obtained from the GPRS carrier that provides the APN (e.g. \"CINGULAR1\" is the User Name used to authenticate to an APN that is commonly used by AT&T). This is only relevant when the value chosen for GPRS Carrier was \"Custom\" since otherwise the APN values for the pre-defined APN will be provided automatically based on the selected GPRS carrier.\n\n>**Note:** If an empty (length of 0) value is specified, then no Password will be used. This should only generally only be done if the GPRS carrier indicates that authentication using a password is not required for a given APN.\n\nParm value input rules: \n\n* String with a minimum size of 0 characters and a maximum size of 255 characters\n\n##Example XML\n###Add AT&T GPRS APN\n\n\t:::XML\n\t<wap-provisioningdoc>\n\t\t<characteristic type=\"GprsMgr\" version=\"4.2\" >\n\t\t<parm name=\"GprsAction\" value=\"1\"/>\n\t\t<parm name=\"GprsCarrier\" value=\"1\"/>\n\t\t\t<characteristic type=\"gprs-details\">\n\t\t\t\t<parm name=\"ApnName\" value=\"myATT\"/>\n\t\t\t\t<parm name=\"ReplaceIfExisting\" value=\"1\"/>\n\t\t\t\t<parm name=\"MakeDefault\" value=\"1\"/>\n\t\t\t</characteristic>\n\t\t\t<characteristic type=\"att-details\">\n\t\t\t\t<parm name=\"AttAccessPoint\" value=\"wap.cingular\"/>\n\t\t\t\t<parm name=\"AttUserName\" value=\"WAP@CINGULARGPRS.COM\"/>\n\t\t\t\t<parm name=\"AttPassword\" value=\"CINGULAR1\"/>\n\t\t\t</characteristic>\n\t\t</characteristic>\n\t</wap-provisioningdoc>\n\n###Add T-Mobile GPRS APN\n\n\t:::XML\n\t<wap-provisioningdoc>\n\t\t<characteristic type=\"GprsMgr\" version=\"4.2\" >\n\t\t<parm name=\"GprsAction\" value=\"1\"/>\n\t\t<parm name=\"GprsCarrier\" value=\"2\"/>\n\t\t\t<characteristic type=\"gprs-details\">\n\t\t\t\t<parm name=\"ApnName\" value=\"myTMobile\"/>\n\t\t\t\t<parm name=\"ReplaceIfExisting\" value=\"0\"/>\n\t\t\t\t<parm name=\"MakeDefault\" value=\"1\"/>\n\t\t\t</characteristic>\n\t\t\t<characteristic type=\"tmobile-details\">\n\t\t\t\t<parm name=\"TmobileAccessPoint\" value=\"internet3.voicestream.com\"/>\n\t\t\t\t<parm name=\"TmobileUserName\" value=\"\"/>\n\t\t\t\t<parm name=\"TmobilePassword\" value=\"\"/>\n\t\t\t</characteristic>\n\t\t</characteristic>\n\t</wap-provisioningdoc>\n\t\n###Add Custom GPRS APN\n\n\t:::XML\n\t<wap-provisioningdoc>\n\t\t<characteristic type=\"GprsMgr\" version=\"4.2\" >\n\t\t<parm name=\"GprsAction\" value=\"1\"/>\n\t\t<parm name=\"GprsCarrier\" value=\"0\"/>\n\t\t\t<characteristic type=\"gprs-details\">\n\t\t\t\t<parm name=\"ApnName\" value=\"myCustom\"/>\n\t\t\t\t<parm name=\"ReplaceIfExisting\" value=\"1\"/>\n\t\t\t\t<parm name=\"MakeDefault\" value=\"1\"/>\n\t\t\t</characteristic>\n\t\t\t<characteristic type=\"custom-details\">\n\t\t\t\t<parm name=\"CustomAccessPoint\" value=\"apn\"/>\n\t\t\t\t<parm name=\"CustomUserName\" value=\"user\"/>\n\t\t\t\t<parm name=\"CustomPassword\" value=\"pass\"/>\n\t\t\t</characteristic>\n\t\t</characteristic>\n\t</wap-provisioningdoc>\t\n\t\n###Remove Existing Named APN\n\n\t:::XML\n\t<wap-provisioningdoc>\n\t\t<characteristic type=\"GprsMgr\" version=\"4.2\" >\n\t\t\t<parm name=\"GprsAction\" value=\"2\"/>\n\t\t\t<characteristic type=\"gprs-details\">\n\t\t\t\t<parm name=\"ApnName\" value=\"myTMobile\"/>\n\t\t\t</characteristic>\n\t\t</characteristic>\n\t</wap-provisioningdoc>\n\n###Remove All Existing APNs\n\n\t:::XML\n\t<wap-provisioningdoc>\n\t\t<characteristic type=\"GprsMgr\" version=\"4.2\" >\n\t\t\t<parm name=\"GprsAction\" value=\"3\"/>\n\t\t</characteristic>\n\t</wap-provisioningdoc>\n\n## Feature Compatibility\n\n<iframe src=\"compare.html#mx=4.3&csp=GprsMgr&os=JB&embed=true\"></iframe> "},{"key":"guide-csp-intent","name":" Intent","md":"# Intent\n\n## About Intent\n\n### Overview\n\nIn Android, an Intent is an abstract description of an operation to be performed. An Intent must first be created and then must be sent using one of the following APIs:\n\n* **startActivity** can be used to launch a Activity within an application, usually to perform some User Interface function.\n* **broadcastIntent** can be used to notify one or more listener applications about the occurrence of some event.\n* **startService** can be used to communicate with a background Service.\n\nAndroid Intents provide a facility for performing late runtime binding between applications. The most common use of Intents is to launch of application Activities. An Intent is basically a data structure that specifies an operation to be performed and any data required to perform that operation.  An Intent may consist of an action, to specify the operation to be performed, data to be operated upon, and extra data items, of various types, to qualify the operation to be performed.\n\nThe Intent Feature Type allows you to define an Intent by indicating how the Intent should be sent, specifying an Android action name, specifying a URI and MIME type of the primary data, and by attaching extra data items.\n\nAndroid Intents are a very general purpose mechanism and a rich set of methods are provided in the Android Intent Class to customize an Intent to meet the requirements of the application to which it is being sent. Very complex Intents can be created using Java code, but it would be impractical for the Intent Feature Type to attempt to describe every possible Intent. Instead, the most common use case of launching an application Activities is supported, along with a modest ability to attach data items to cover other common use cases.\n\n>**Note:** The Intent Feature Type is not designed to create and send very complex Intents, especially those that require numerous extra data items or extra data items with complex data types. If you need to send very complex Intents, you can do so by writing Java code, packaging it as an application, and then launching that application using a simpler Intent.\n\nEvery Android Intent of one of two types:\n\n* **Explicit Intents**\n\n\tAn Explicit Intent is directed to a specific application and requests that application, and only that application, to perform the requested operation. An Explicit Intent may be sent using any of the available methods, but can only be sent to a single application. An Explicit Intent is most commonly sent using startActivity or startService to direct it to an Activity or Service within a specific application.\n\n\tIf an Intent specifies a Package Name and a Class Name, then it is an Explicit Intent because it will only be sent to the specific application identified by that Package Name and Class Name. An Explicit Intent will fail if an application with the specified Package Name and Class Name is not installed. An Explicit Intent can, but is not required to, specify additional information to tell the receiving application how to perform the requested operation.\n\n* **Implicit Intents**\n\n\tAn Implicit Intent is a generic request to perform an operation that does not specify which application or applications should perform that operation. An Implicit Intent may be sent using any of the available methods. An Implicit Intent is most sent using broadcastIntent to request an unspecified number of registered receivers to perform an operation.\n\n\tIf an Intent does not specify a Package Name and Class Name, then it is an Implicit Intent because it does not specify a specific application to which it will be sent. An Implicit Intent may fail if there are no suitable registered receiver(s). An Implicit Intent must specify at least some information to tell receiving application(s) what operation to perform and how to perform the requested operation.\n\n### Main Functionality\n\n* Specify how the Intent will be sent:\n\t* startActivity\n\t* broadcastIntent\n\t* startService\n* Specify the Android action name of the operation to be performed \n* Specify the URI and MIME Type of the primary data\n* Attach up to 5 extra data items, of the following data types:\n\t* Standard Integer\n\t* Character\n\t* Character Sequence\n\t* Floating Point\n\t* Long Integer\n\t* Boolean\n\t* Short\n\t* Double Precision Floating Point\n\t* String\n\t* Single Byte Integer\n\n\t\n##Parameter Notes\n###Action\nPivotal parm: Yes \n\nDescription: \n\n>This parm allow you to specify how the Intent will be sent one or more other applications.\n\n<div class=\"parm-table\">\n <table class=\"table\">\n\t<tr>\n\t\t<th>Parm Option Name</th>\n\t\t<th>Parm Value</th>\n\t\t<th>Description</th>\n\t</tr>\n  <tr>\n    <td>StartActivity</td>\n    <td>\"1\"</td>\n\t<td>This value will cause the Intent to be sent using startActivity to invoke an Activity within an application.</td>\n  </tr>\n  <tr>\n    <td>StartService</td>\n    <td>\"2\"</td>\n\t<td>This value will cause the Intent to be sent using startService to initiate operation of a background Service within an application.</td>\n  </tr>\n  <tr>\n    <td>Broadcast</td>\n    <td>\"3\"</td>\n\t<td>This value will cause the Intent to be sent using broadcastIntent to invoke registered broadcast receivers (listeners) within one or more applications.</td>\n  </tr>\n</table>\n</div>\t\n\n####Android Action Name\nPivotal parm: No\n\nParm name: ActionName\n\nDescription: \n\n>This parm will allow you to specify the name of the action to be performed by the receiver(s) of the Intent. Many standard Android action names are predefined, but new action names can be added, making the set of possible action names effectively unlimited. A given receiver will likely honor only a small set of action names, so the action name to be used should be chosen from amongst those supported by the intended receiver(s).\n\n>**Note:** Since the set of possible action names is extensible, the Intent Feature Type does not put any specific restrictions on the action names that can be specified. However, Android rejects an Intent for which there is no suitable receiver. In addition, certain receivers may require certain permissions to be held by an application in order to send Intents with certain action names. If an attempt is made to send an Intent and that Intent is rejected by the Android system or by a specific receiver, then an error will be returned in the Result XML.\n\nParm value input rules: \n\n* String with a minimum size of 1 character and a maximum size of 255 characters\n\n####URI\nSettable if: The Action is \"StartActivity\" or \"StartService\"\n\nPivotal parm: No\n\nParm name: Uri\n\nDescription: \n\n>This parm allows you to specify a Uniform Resource Identifier (URI) that identifies the primary data for the Intent. A URI parm is not required unless there is some primary data to be processed by the operation requested by the Intent. A URI typically identifies a resource on a remote server. In most cases, a MIME Type should also be specified to define the type of the data referenced by the URI.\n\nParm value input rules: \n\n* String with a minimum size of 1 character and a maximum size of 255 characters\n\n####File\nSettable if: The Action is \"StartActivity\" or \"StartService\"\n\nPivotal parm: No\n\nParm name: File\n\nDescription: \n\n>This parm allows you to specify a path and file name that identifies the primary data for the Intent. A File parm is not required unless there is some primary data to be processed by the operation requested by the Intent. In some cases, a MIME Type should also be specified to define the type of the data in the file.\n\nParm value input rules: \n\n* String with a minimum size of 1 character and a maximum size of 255 characters\n\n####MIME Type\nPivotal parm: No\n\nParm name: Type\n\nDescription: \n\n>This parm allows you to specify the content MIME Type of the primary data for the Intent. This parm is used to specify the type of the data object that will be used to perform the requested operation. A MIME Type is commonly specified for file or network resources to assist the receiving application in processing the data. The actual data for the operation to be performed must be specified using the URI parm or the File parm.\n\nParm value input rules: \n\n* String with a minimum size of 1 character and a maximum size of 255 characters\n\n####Package Name\nSettable if: The Action is \"StartActivity\" or \"StartService\"\n\nPivotal parm: No\n\nParm name: Package\n\nDescription: \n\n>This parm allows you to specify the Package Name of the application to which the Intent will be sent. Specifying this parm makes the Intent an Explicit Intent and will result in a failure if no application with the specified Package Name is installed. The Package Name and Class Name parms should always be used together to specify a class within an application.\n\nParm value input rules: \n\n* String with a minimum size of 1 character and a maximum size of 255 characters\n\n####Class Name\nSettable if: The Action is \"StartActivity\" or \"StartService\"\n\nPivotal parm: No\n\nParm name: Class\n\nDescription: \n\n>This parm allows you to specify a Class Name, within the application identified by the specified Package Name, to which the Intent will be sent. Specifying this parm makes the Intent an Explicit Intent and will result in a failure if no such Class exists within the specified application. The Package Name and Class Name parms should always be used together to specify a class within an application.\n\nParm value input rules: \n\n* String with a minimum size of 1 character and a maximum size of 255 characters\n\n###Extra Data Items\n\nAs previously explained, the Intent Feature Type allows you to specify up to 5 extra data items to attach to the Intent to be sent. The set prompts and parm names used to specify each of the 5 extra data items are similar and documented below.\n\n####Extra Types:\n####(Extra 0 Type, Extra 1 Type, Extra 2 Type, Extra 3 Type, and Extra 4 Type)\n\nPivotal parm: Yes\n\nDescription:\n\n>These parms allow you to choose which of up to 5 extra data items should be attached to the Intent and the data type of each attached extra data item.\n\n<div class=\"parm-table\">\n <table class=\"table\">\n\t<tr>\n\t\t<th>Parm Option Name</th>\n\t\t<th>Parm Value</th>\n\t\t<th>Description</th>\n\t</tr>\n  <tr>\n    <td>None</td>\n    <td>\"none\"</td>\n\t<td>This value (or the absence of this parm from the XML) will not cause the corresponding extra data item to be attached to the Intent.</td>\n  </tr>\n  <tr>\n    <td>Standard Integer</td>\n    <td>\"int\"</td>\n\t<td>This value will cause the corresponding extra data item to be attached to the Intent with a data type of Standard Integer. The value provided for the extra data item will therefore need to be a string representing a valid standard integer value, with a minimum value of -2<sup>31</sup> and a maximum value of 2<sup>31</sup>-1.</td>\n  </tr>\n  <tr>\n    <td>Character</td>\n    <td>\"char\"</td>\n\t<td>This value will cause the corresponding extra data item to be attached to the Intent with a data type of character. The value provided for the extra data item will therefore need to be a string containing a single character.</td>\n  </tr>\n  <tr>\n    <td>Character Sequence</td>\n    <td>\"charsequence\"</td>\n\t<td>This value will cause the corresponding extra data item to be attached to the Intent with a data type of Character Sequence. The value provided for the extra data item will therefore need to be a string containing a sequence of characters. This data type is can be used to supply values comparable to the String data type and should be used if the receiver explicitly requires a Character Sequence instead of a String.</td>\n  </tr>\n  <tr>\n    <td>Floating Point</td>\n    <td>\"float\"</td>\n\t<td>This value will cause the corresponding extra data item to be attached to the Intent with a data type of Single Precision Floating Point. The value provided for the extra data item will therefore need to be a string representing a valid single-precision 32-bit IEEE 754 floating point number.</td>\n  </tr>\n  <tr>\n    <td>Long Integer</td>\n    <td>\"long\"</td>\n\t<td>This value will cause the corresponding extra data item to be attached to the Intent with a data type of Long Integer. The value provided for the extra data item will therefore need to be a string representing a valid long integer value, with a minimum value of -2<sup>63</sup> and a maximum value of 2<sup>63</sup>-1.</td>\n  </tr>\n  <tr>\n    <td>Boolean</td>\n    <td>\"boolean\"</td>\n\t<td>This value will cause the corresponding extra data item to be attached to the Intent with a data type of Boolean. The value provided for the extra data item will therefore need to be a string representing a valid boolean value, \"false\" or \"true\".</td>\n  </tr>\n  <tr>\n    <td>Short</td>\n    <td>\"short\"</td>\n\t<td>This value will cause the corresponding extra data item to be attached to the Intent with a data type of Short Integer. The value provided for the extra data item will therefore need to be a string representing a valid short integer value, with a minimum value of -2<sup>15</sup> and a maximum value of 2<sup>15</sup>-1.</td>\n  </tr>\n  <tr>\n    <td>Double Precision Floating Point</td>\n    <td>\"double\"</td>\n\t<td>This value will cause the corresponding extra data item to be attached to the Intent with a data type of Double Precision Floating Point. The value provided for the extra data item will therefore need to be a string representing a valid double-precision 64-bit IEEE 754 floating point number.</td>\n  </tr>\n  <tr>\n    <td>String</td>\n    <td>\"string\"</td>\n\t<td>This value will cause the corresponding extra data item to be attached to the Intent with a data type of character sequence. The value provided for the extra data item will therefore need to be a string containing a sequence of characters. This data type is can be used to supply values comparable to the Character Sequence data type and should be used if the receiver explicitly requires a String instead of a Character Sequence.</td>\n  </tr>\n  <tr>\n    <td>Single Byte Integer</td>\n    <td>\"byte\"</td>\n\t<td>This value will cause the corresponding extra data item to be attached to the Intent with a data type of Single Byte Integer. The value provided for the extra data item will therefore need to be a string representing a valid single-byte integer value, with a minimum value of -2<sup>7</sup> and a maximum value of 2<sup>7</sup>-1.</td>\n  </tr>\n</table>\n</div>\t\n\n####Extra Names:\n####(Extra 0 Name, Extra 1 Name, Extra 2 Name, Extra 3 Name, and Extra 4 Name)\n\nSettable if: The Extra 0 Type is not \"none\"\n\nPivotal parm: No\n\nParm names: ExtraName, ExtraName1, ExtraName2, ExtraName3, and ExtraName4\n\nDescription: \n\n>These parms allow you to specify the extra data item name to be attached for any extra data item for which a data type other than \"none\" was specified.\n\n>**Note:** The Intent Feature Type does not impose any specific restrictions on names that can be specified for extra data items to be attached to an Intent. But to achieve the desired result be sure to specify the exact name for a extra data item that the receiver of the Intent is expecting.\n\nParm value input rules: \n\n* String with a minimum size of 1 character and a maximum size of 255 characters\n\n####Extra Values:\n####(Extra 0 Value, Extra 1 Value, Extra 2 Value, Extra 3 Value, and Extra 4 Value)\n\nSettable if: The Extra 0 Type is not \"none\"\n\nPivotal parm: No\n\nParm names: ExtraValue, ExtraValue1, ExtraValue2, ExtraValue3, and ExtraValue4\n\nDescription: \n\n>These parms allow you to specify the value of the extra data item to be attached to the Intent for the corresponding name for which a data type other than \"none\" was specified.\n\nParm value input rules: \n\n* String with a minimum size of 1 character and a maximum size of 255 characters\n\n##Example XML\n\n###Launch the Main Activity for an Application\n\n\t:::XML\n\t<wap-provisioningdoc>\n\t\t<characteristic type=\"Intent\" version=\"4.3\" >\n\t\t\t<parm name=\"Action\" value=\"StartActivity\"/>\n\t\t\t<parm name=\"ActionName\" value=\"android.intent.action.MAIN\"/>\n\t\t\t<parm name=\"Package\" value=\"com.sample.myapp\"/>\n\t\t\t<parm name=\"Class\" value=\"com.sample.myapp.MainActivity\"/>\n\t\t</characteristic>\n\t</wap-provisioningdoc>\n\n\n## Feature Compatibility\n\n<iframe src=\"compare.html#mx=4.3&csp=Intent&os=JB&embed=true\"></iframe> "},{"key":"guide-csp-keymappingmgr","name":" KeyMappingMgr","md":"# KeyMappingMgr\n\n## About KeyMappingMgr\n\n### Overview\n\nThe KeyMappingMgr Feature Type allows you to modify what behavior a given key will exhibit when pressed.\n\nKey Mapping is a capability offered by Zebra Android devices allows you to define the Key Behavior associated with a given Key, when that Key is pressed in a given Key State. The Current Key State consists of one or more Key State Modifiers that may have been applied as the result of previous presses of Modifier Keys. For example, a device with a Blue Key may set/clear the Blue Key State Modifier in the Current Key State each time the Blue Key is pressed. Some devices may support having multiple Key State Modifiers set in the Current Key State and other may not.\n\nThe Key Behavior desired for a particular Key when it is pressed in a particular Key State can be defined by a Key Mapping in the Key Mapping Table. There are Key Mapping Tables associated with specific Key State Modifier that can be set within the Current Key State. A Key Mapping for a Key that is defined in a given Key Mapping Table will only be used when the Key is pressed while the associated Key Modifier associated with that Key Mapping Table is set in the Current Key State. For example, when a Key is pressed while the Blue Key State Modifier is set in the Current Key State, the Blue Key Mapping Table would be searched to find a Key Mapping for that pressed Key.\n\nEvery device has a series of Default Key Mappings that are pre-installed into the Key Mapping Tables supported by that device. These Default Key Mappings define the default Key Behaviors for that device. To change the Default Key Behaviors for a device, you can add new Key Mappings, called Override Key Mappings, to one or more Key Mapping Tables. When a Mapping Table contains a Default Key Mapping and an Override Key Mapping for the same Key, the Override Key Mapping is used. If you want to revert a device back to its Default Key Behaviors, you can remove the Override Key Mappings and thereby restore use of the Default Key Mappings. Default Key Mappings cannot be modified or removed, only overridden.\n\nKey processing begins by checking the Current Key State at the time the Key was pressed. If multiple Key State Modifiers are set in the Current Key State, then the Key Mapping Tables associated with those Key State Modifiers are searched in a fixed priority order based on their associated Key State Modifiers. If a Key Mapping for the pressed Key is found at any time during searching, then searching will stop and the found Key Mapping will be used to determine the Key Behavior that will be performed for the pressed Key.\n\nIf all Key Mapping Tables associated with Key State Modifiers are searched without finding a Key Mapping for the pressed Key, then the Base Key State Key Mapping Table is searched. If no Key Mapping can for the pressed Key can be found during searching, then the default Android Key Behavior will be performed for the pressed Key, but this will seldom be the case, since most devices will have Default Key Mappings for all Keys defined in the Base Key State Mapping Table.\n\nNot all devices will support all Key State Modifiers and hence not all devices will support all Key Mapping Tables. Some devices may support multiple Key State Modifiers and each device will support the Key Mapping Tables associated with all the Key State Modifiers that it supports.  All devices support at least the Base Key State Key Mapping Table, even if they support no other Key Mapping Tables. The following Key State Modifiers and associated Key Mapping Tables may be supported by various devices. The Key Mapping Tables will be searched (when supported on a given device) in the order listed below, based on the Key State Modifiers that are set in the Current Key State:\n\n1. Blue Key State Modifier and Blue Key Mapping Table\n\n\tThis Key Mapping Table is searched when the Blue Key State Modifier is set in the Current Key State at the time a Key is pressed. If a Key Mapping for the pressed Key is found, then that Key Mapping is used to determine the Key Behavior to be performed for the pressed Key. If no Key Mapping for the pressed Key is found, then searching continues with another Key Mapping Table.\n\t\n2. Orange Key State Modifier and Orange Key Mapping Table\n\n\tThis Key Mapping Table is searched when the Orange Key State Modifier is set in the Current Key State at the time a Key is pressed. If a Key Mapping for the pressed Key is found, then that Key Mapping is used to determine the Key Behavior to be performed for the pressed Key. If no Key Mapping for the pressed Key is found, then searching continues with another Key Mapping Table.\n\t\n3. Grey Key State Modifier and Grey Key Mapping Table\n\n\tThis Key Mapping Table is searched when the Grey Key State Modifier is set in the Current Key State at the time a Key is pressed. If a Key Mapping for the pressed Key is found, then that Key Mapping is used to determine the Key Behavior to be performed for the pressed Key. If no Key Mapping for the pressed Key is found, then searching continues with another Key Mapping Table.\n\n4. Control Key State Modifier and Control Key Mapping Table\n\n\tThis Key Mapping Table is searched when the Control Key State Modifier is set in the Current Key State at the time a Key is pressed. If a Key Mapping for the pressed Key is found, then that Key Mapping is used to determine the Key Behavior to be performed for the pressed Key. If no Key Mapping for the pressed Key is found, then searching continues with another Key Mapping Table.\n\n5. Shift Key State Modifier and Shift Key Mapping Table\n\n\tThis Key Mapping Table is searched when the Shift Key State Modifier is set in the Current Key State at the time a Key is pressed. If a Key Mapping for the pressed Key is found, then that Key Mapping is used to determine the Key Behavior to be performed for the pressed Key. If no Key Mapping for the pressed Key is found, then searching continues with another Key Mapping Table.\n\n6. Base Key State Key Mapping Table\n\t\n\tThe Base Key State Key Mapping Table is searched if no Key State Modifiers are set in the Current Key State (i.e. default Key State) at the time a Key is pressed. This Key Mapping is also searched if all Key Mapping Tables were searched based on the Key State Modifiers that were set in the Current Key State and no Key Mapping for the pressed Key was found (i.e. fall through). If the Base Key State Key Mapping Table is searched and no Key Mapping for the pressed Key is found, then the standard Android Key Action for the pressed Key will be performed.\n\nEach Key Mapping in each Key Mapping Table defines a specific Key Behavior to be performed for a pressed Key when that Key Mapping Table is determined to be the most applicable one for that Key press. Every Key Mapping requires a specific Key to be identified. A Key is identified in Key Mapping Using a Key Identifier. Key Identifiers are constructed generally according to the following rules:\n\n* Text Labeled Key\n\n\tFor a Key that is physically labeled with a text legend, the label is used to identify the Key. For example, a Key that is physically labeled with the letter \"A\" would be identified by that letter. In some cases, a Key might be physically labeled with an abbreviated text legend. For example, a Key that is physically labeled \"BKSP\" would be identified by the text description \"BACKSPACE\".\n\n* Graphically Labeled Key\n\n\tFor a Key that is physically labeled with a picture or icon or other graphical legend, a textual description of that graphical legend is used to identify the Key.  For example, a Key that is physically labeled with an icon of a house, would be identified by the text description \"HOME\".\n\t\n* Color Labeled Key\n\n\tFor a Key that is physically labeled with a color, a textual description of that color is used to identify the Key.  For example, a Key that is physically colored blue would be identified by the text description \"BLUE\".\n\t\n* Unlabeled Key\n\n\tFor a Key that is not physically labeled in a unique manner, a textual description may be used to identify the Key. For example, the second of two Keys that are used as a triggers that are physically located on the left side of the device would be identified by the text description \"LEFT_TRIGGER_2\".\n\n>**Note:** Different devices have different numbers and combinations of physical Keys. Not all devices will have Keys that need to be identified using all of the above rules.\n\nEach Key Mapping specifies a single Key Behavior that should be performed for a single Key identified by a specified Key Identifier. The Key Behaviors that can be defined include the following:\n\n* Send key-code\n\n\tThis Key Behavior indicates that the Key pressed should produce a standard Android Key Action, but necessarily the standard Android Key Action for that actual Key that was pressed. You can select any Key Code you want and the standard Android Key Action for that Key Code will be performed. You can also optionally specify the Key State in which standard Android Key Action for the Key Code will be performed.\n\n\tThis Key Behavior provides quite a lot of flexibility to define what standard Android Key Action you want to perform, since you can define that any Key, when pressed in any Key State, should perform any standard Android Key Action. For example, you could define that the \"A\" Key, when pressed in the \"Shift\" Key State will produce the standard Android Key Action normally performed by the \"2\" Key when pressed in the \"Unshifted\" Key State.\n\t\n* Send trigger\n\n\tThis Key Behavior indicates that the Key pressed should produce the effect of a physical trigger switch. Most devices have one or more \"Trigger\" Keys for which this is the Default Key Behavior. Such Keys are most often used to initiate Barcode Scanning, but can be used for anything, if the right configuration is applied.\n\n\tA fixed set of eight (8) Triggers are supported and these are designated as Trigger 1 through Trigger 8. Triggers are most commonly used to provide a low-latency notification so that high priority events can be initiated. Various System applications on a device may register to be notified when various Triggers are sent. For example, the Scanning Subsystem on most devices uses Trigger 1 to initiate Barcode Scanning.\n\n\tNormal (non-System) applications cannot perform registration for Triggers and hence cannot utilize the \"Sent trigger\" Key Behavior to invoke their application functionality. Such applications should use the \"Launch application or \"Send Intent\" Key Behaviors instead. But using the KeyMappingMgr Feature Type, a non-System application can determine what Key(s), pressed in what Key State(s) will produce Triggers for which System applications are registered.\n\t\n* Launch application\n\n\tThis Key Behavior indicates that the Key pressed should launch an application of a specific name as if that application was launched by a device user via its main launcher icon. The same result could be achieved using the \"Send Intent\" Key Behavior, if the right information about the Intent required to launch the application was known. The \"Launch application\" Key Behavior makes launching an application much easier, but only if you want to launch its main activity. If you want to launch some other activity of an application, or pass custom data to the application to tell it what to do, then use the \"Send Intent\" Key Behavior instead.\n\t\n* Send Intent\n\n\tThis Key Behavior indicates that the Key pressed should send an Intent, which could be sent to an application using startActivity or sendBroadcast. Supporting both types of Intents provides flexibility so you can launch a variety of applications. In addition, you can configure various parameters for constructing the Intent to match it to the needs of an application, including attaching an extra data value to communicate information about the desired action the application should perform.\n\n\tSince Intents are extremely flexible, an existing application might require an Intent that cannot be described via the rather simplistic capabilities inside the KeyMappingMgr Feature Type. While it may be possible to meet the needs of some existing applications, the \"Send Intent\" Key Behavior is really designed to send Intents that are specifically designed and added to applications for this purpose.\n\t\n* Suppress key\n\n\tThis Key Behavior indicates that the Key pressed should be completely ignored and should produce no result. In essence, this results in  essentially identical results as if the Key was never pressed.\n\t\n* Reset to default\n\n\tThis Key Behavior indicates that the Default Key Mapping (if any) for a Key in a specified Key Mapping Table should be restored. This is done by removing any Override Key Mapping for the Key from the specified Key Mapping Table. If there is no Override Key Mapping for the Key in the specified Key Mapping Table, then no change is made.\n\n### Main Functionality\n\n* Default all key mappings\n* Remap a key\n\n##Parameter Notes\n###Action\nPivotal parm: Yes\n\nDescription: \n\n>This parm allows you to select whether to return Key Mapping to the default state or to add/modify Override Key Mappings for a Key to one or more Key Mapping Tables.\n\n>**Note:** If you want to configure a device whose prior state is not known, it may be advisable to begin by returning Key Mapping to the default state. In that way, subsequent added Override Key Mappings will be starting from a known state and therefore are more likely to achieve the result desired. Alternately, if the Intent is to define a set of Key Mappings that are required by a specific application, it may be desirable to start from the current state, whatever it may be, and alter it by adding or modifying selected Override Key Mappings without otherwise altering the state of Key Mapping for the device.\n\n<div class=\"parm-table\">\n <table class=\"table\">\n\t<tr>\n\t\t<th>Parm Option Name</th>\n\t\t<th>Parm Value</th>\n\t\t<th>Description</th>\n\t</tr>\n  <tr>\n    <td>Remap a key</td>\n    <td>\"1\"</td>\n\t<td>This value will allow you to add or modify Override Key Mappings for a single Key for one or more Key Mapping Tables. Each Override Key Mapping that is added or modified will alter the Behavior of exactly one Key, in one or more Key States.</td>\n  </tr>\n  <tr>\n    <td>Default all key mappings</td>\n    <td>\"2\"</td>\n\t<td>This value cause all of the Override Key Mappings to be removed from all Key Mapping Tables. This will result in all Key Mapping being set back to the default for the device since it will leave only the Default Key Mappings, which cannot be removed and which will no longer be overridden.</td>\n  </tr>\n</table>\n</div>\t\n\n####Choose a key to modify\nSettable if: The Action value is \"Remap a key\"\n\nPivotal parm: Yes\n\nDescription: \n\n>This parm allows you to identify the Key for which Override Key Mapping will be added or modified. To add or modify Override Mappings for a Key, you must specify a parm value that contains a Key Identifier that is listed in the following table.\n\n>**Note:** Not all devices physically support Keys that correspond to every Key Identifier listed in the table. If an attempt is made to add an Override Mapping to a Key Mapping Table for a Key that is not supported on a device, then an error will be returned in the Result XML. Consult the documentation for a specific device for information on the Keys supported on that device. Alternately, you can query the KeyMappingMgr Feature Type to acquire a list of all Key Identifiers that are supported on that device.\n\n<div class=\"parm-table\">\n <table class=\"table\">\n\t<tr>\n\t\t<th>Parm Option Name</th>\n\t\t<th>Parm Value (Key Identifier)</th>\n\t\t<th>Comments</th>\n\t</tr>\n  <tr>\n    <td>None</td>\n    <td>\"\"</td>\n\t<td>This value indicates that no Key Mapping will be added or removed for any Key from any Key Mapping Table.</td>\n  </tr>\n  <tr>\n    <td>0</td>\n    <td>\"0\"</td>\n\t<td></td>\n  </tr>\n  <tr>\n    <td>1</td>\n    <td>\"1\"</td>\n\t<td></td>\n  </tr>\n  <tr>\n    <td>2</td>\n    <td>\"2\"</td>\n\t<td></td>\n  </tr>\n  <tr>\n    <td>3</td>\n    <td>\"3\"</td>\n\t<td></td>\n  </tr>\n  <tr>\n    <td>4</td>\n    <td>\"4\"</td>\n\t<td></td>\n  </tr>\n  <tr>\n    <td>5</td>\n    <td>\"5\"</td>\n\t<td></td>\n  </tr>\n  <tr>\n    <td>6</td>\n    <td>\"6\"</td>\n\t<td></td>\n  </tr>\n  <tr>\n    <td>7</td>\n    <td>\"7\"</td>\n\t<td></td> \n  </tr>\n  <tr>\n    <td>8</td>\n    <td>\"8\"</td>\n\t<td></td> \n  </tr>\n  <tr>\n    <td>9</td>\n    <td>\"9\"</td>\n\t<td></td>\n  </tr>\n  <tr>\n    <td>A</td>\n    <td>\"A\"</td>\n\t<td></td>\n  </tr>\n  <tr>\n    <td>B</td>\n    <td>\"B\"</td>\n\t<td></td>\n  </tr>\n  <tr>\n    <td>C</td>\n    <td>\"C\"</td>\n\t<td></td>\n  </tr>\n  <tr>\n    <td>D</td>\n    <td>\"D\"</td>\n\t<td></td>\n  </tr>\n  <tr>\n    <td>E</td>\n    <td>\"E\"</td>\n\t<td></td>\n  </tr>\n  <tr>\n    <td>F</td>\n    <td>\"F\"</td>\n\t<td></td>\n  </tr>\n  <tr>\n    <td>G</td>\n    <td>\"G\"</td>\n\t<td></td>\n  </tr>\n  <tr>\n    <td>H</td>\n    <td>\"H\"</td>\n\t<td></td>\n  </tr>\n  <tr>\n    <td>I</td>\n    <td>\"I\"</td>\n\t<td></td>\n  </tr>\n  <tr>\n    <td>J</td>\n    <td>\"J\"</td>\n\t<td></td>\n  </tr>\n  <tr>\n    <td>K</td>\n    <td>\"K\"</td>\n\t<td></td>\n  </tr>\n  <tr>\n    <td>L</td>\n    <td>\"L\"</td>\n\t<td></td>\n  </tr>\n  <tr>\n    <td>M</td>\n    <td>\"M\"</td>\n\t<td></td>\n  </tr>\n  <tr>\n    <td>N</td>\n    <td>\"N\"</td>\n\t<td></td>\n  </tr>\n  <tr>\n    <td>O</td>\n    <td>\"O\"</td>\n\t<td></td>\n  </tr>\n  <tr>\n    <td>P</td>\n    <td>\"P\"</td>\n\t<td></td>\n  </tr>\n  <tr>\n    <td>Q</td>\n    <td>\"Q\"</td>\n\t<td></td>\n  </tr>\n  <tr>\n    <td>R</td>\n    <td>\"R\"</td>\n\t<td></td>\n  </tr>\n  <tr>\n    <td>S</td>\n    <td>\"S\"</td>\n\t<td></td>\n  </tr>\n  <tr>\n    <td>T</td>\n    <td>\"T\"</td>\n\t<td></td>\n  </tr>\n  <tr>\n    <td>U</td>\n    <td>\"U\"</td>\n\t<td></td>\n  </tr>\n  <tr>\n    <td>V</td>\n    <td>\"V\"</td>\n\t<td></td>\n  </tr>\n  <tr>\n    <td>W</td>\n    <td>\"W\"</td>\n\t<td></td>\n  </tr>\n  <tr>\n    <td>X.</td>\n    <td>\"X\"</td>\n\t<td></td>\n  </tr>\n  <tr>\n    <td>Y</td>\n    <td>\"Y\"</td>\n\t<td></td>\n  </tr>\n  <tr>\n    <td>Z</td>\n    <td>\"Z\"</td>\n\t<td></td>\n  </tr>\n  <tr>\n    <td>F1</td>\n    <td>\"F1\"</td>\n\t<td></td>\n  </tr>\n  <tr>\n    <td>F2</td>\n    <td>\"F2\"</td>\n\t<td></td>\n  </tr>\n  <tr>\n    <td>F3</td>\n    <td>\"F3\"</td>\n\t<td></td>\n  </tr>\n  <tr>\n    <td>F4</td>\n    <td>\"F4\"</td>\n\t<td></td>\n  </tr>\n  <tr>\n    <td>F5</td>\n    <td>\"F5\"</td>\n\t<td></td>\n  </tr>\n  <tr>\n    <td>F6</td>\n    <td>\"F6\"</td>\n\t<td></td>\n  </tr>\n  <tr>\n    <td>F7</td>\n    <td>\"F7\"</td>\n\t<td></td>\n  </tr>\n  <tr>\n    <td>F8</td>\n    <td>\"F8\"</td>\n\t<td></td>\n  </tr>\n  <tr>\n    <td>F9</td>\n    <td>\"F9\"</td>\n\t<td></td>\n  </tr>\n  <tr>\n    <td>F10</td>\n    <td>\"F10\"</td>\n\t<td></td>\n  </tr>\n  <tr>\n    <td>F11</td>\n    <td>\"F11\"</td>\n\t<td></td>\n  </tr>\n  <tr>\n    <td>F12</td>\n    <td>\"F12\"</td>\n\t<td></td>\n  </tr>\n  <tr>\n    <td>Enter</td>\n    <td>\"ENTER\"</td>\n\t<td></td>\n  </tr>\n  <tr>\n    <td>Up</td>\n    <td>\"UP\"</td>\n\t<td></td>\n  </tr>\n  <tr>\n    <td>Down</td>\n    <td>\"DOWN\"</td>\n\t<td></td>\n  </tr>\n  <tr>\n    <td>Left</td>\n    <td>\"LEFT\"</td>\n\t<td></td>\n  </tr>\n  <tr>\n    <td>Right</td>\n    <td>\"RIGHT\"</td>\n\t<td></td>\n  </tr>\n  <tr>\n    <td>Escape</td>\n    <td>\"ESC\"</td>\n\t<td></td>\n  </tr>\n  <tr>\n    <td>Backspace</td>\n    <td>\"BACKSPACE\"</td>\n\t<td></td>\n  </tr>\n  <tr>\n    <td>Period</td>\n    <td>\"DOT\"</td>\n\t<td></td>\n  </tr>\n  <tr>\n    <td>Star</td>\n    <td>\"Star\"</td>\n\t<td></td>\n  </tr>\n  <tr>\n    <td>Pound</td>\n    <td>\"POUND\"</td>\n\t<td></td>\n  </tr>\n  <tr>\n    <td>Space</td>\n    <td>\"SPACE\"</td>\n\t<td></td>\n  </tr>\n  <tr>\n    <td>Return</td>\n    <td>\"RETURN\"</td>\n\t<td></td>\n  </tr>\n  <tr>\n    <td>Clear</td>\n    <td>\"CLR\"</td>\n\t<td></td>\n  </tr>\n  <tr>\n    <td>Field Exit</td>\n    <td>\"FIELD_EXIT\"</td>\n\t<td></td>\n  </tr>\n  <tr>\n    <td>Alt</td>\n    <td>\"ALT\"</td>\n\t<td></td>\n  </tr>\n  <tr>\n    <td>Control</td>\n    <td>\"CTRL\"</td>\n\t<td></td>\n  </tr>\n  <tr>\n    <td>Shift</td>\n    <td>\"SHIFT\"</td>\n\t<td></td>\n  </tr>\n  <tr>\n    <td>Blue</td>\n    <td>\"BLUE\"</td>\n\t<td></td>\n  </tr>\n  <tr>\n    <td>Orange</td>\n    <td>\"ORANGE\"</td>\n\t<td></td>\n  </tr>\n  <tr>\n    <td>Green Dot</td>\n    <td>\"GREEN\"</td>\n\t<td></td>\n  </tr>\n  <tr>\n    <td>Red Dot</td>\n    <td>\"RED\"</td>\n\t<td></td>\n  </tr>\n  <tr>\n    <td>Volume Up</td>\n    <td>\"VOLUMEUP\"</td>\n\t<td></td>\n  </tr>\n  <tr>\n    <td>Volume Down</td>\n    <td>\"VOLUMEDOWN\"</td>\n\t<td></td>\n  </tr>\n  <tr>\n    <td>Scan</td>\n    <td>\"SCAN\"</td>\n\t<td></td>\n  </tr>\n  <tr>\n    <td>Grip Trigger</td>\n    <td>\"GRIP_TRIGGER\"</td>\n\t<td></td>\n  </tr>\n  <tr>\n    <td>Button L1</td>\n    <td>\"LEFT_TRIGGER_1\"</td>\n\t<td></td>\n  </tr>\n  <tr>\n    <td>Button L2</td>\n    <td>\"LEFT_TRIGGER_2\"</td>\n\t<td></td>\n  </tr>\n  <tr>\n    <td>Button R1</td>\n    <td>\"RIGHT_TRIGGER_1\"</td>\n\t<td></td>\n  </tr>\n  <tr>\n    <td>Button R2</td>\n    <td>\"RIGHT_TRIGGER_2\"</td>\n\t<td></td>\n  </tr>\n  <tr>\n    <td>Headset Button</td>\n    <td>\"HEADSET_HOOK\"</td>\n\t<td></td>\n  </tr>\n  <tr>\n    <td>Back</td>\n    <td>\"BACK\"</td>\n\t<td></td>\n  </tr>\n  <tr>\n    <td>Home</td>\n    <td>\"HOME\"</td>\n\t<td></td>\n  </tr>\n  <tr>\n    <td>Menu</td>\n    <td>\"MENU\"</td>\n\t<td></td>\n  </tr>\n  <tr>\n    <td>Recent</td>\n    <td>\"RECENT\"</td>\n\t<td></td>\n  </tr>\n  <tr>\n    <td>Search</td>\n    <td>\"SEARCH\"</td>\n\t<td></td>\n  </tr>\n  <tr>\n    <td>Keyboard Backlight</td>\n    <td>\"KEYLIGHT\"</td>\n\t<td></td>\n  </tr>\n  <tr>\n    <td>Display Backlight</td>\n    <td>\"LAMP\"</td>\n\t<td></td>\n  </tr>\n  <tr>\n    <td>Power</td>\n    <td>\"POWER\"</td>\n\t<td></td>\n</table>\n</div>\t\n\n###Key Behavior Parms\n\n####Key behavior\nSettable if: The Action value is \"Remap a key\" *AND* Choose a key to modify is not \"None\" \n\nPivotal parm: Yes\n\nDescription: \n\n>This parm allows you to select the Key Behavior that should be defined in the Base Key State Mapping Table for the Key Mapping for a specified Key.\n\n<div class=\"parm-table\">\n <table class=\"table\">\n\t<tr>\n\t\t<th>Parm Option Name</th>\n\t\t<th>Parm Value</th>\n\t\t<th>Description</th>\n\t</tr>\n  <tr>\n    <td>No change</td>\n    <td>\"0\"</td>\n\t<td>This value (or the absence of this parm from the XML) will not make any change to the Key Behavior of the specified Key in the Base Key State Mapping Table.</td>\n  </tr>\n  <tr>\n    <td>Send key-code</td>\n    <td>\"2\"</td>\n\t<td>This value will cause the Key Behavior for the specified Key in the Base Key State Mapping Table to be changed such that the Key acts like a different specified Key.</td>\n  </tr>\n  <tr>\n    <td>Send trigger</td>\n    <td>\"1\"</td>\n\t<td>This value will cause the Key Behavior for the specified Key in the Base Key State Mapping Table to be changed such that the Key will act as a one of the pre-defined Triggers and hence will cause whatever applications are registered for the selected Trigger to be notified.</td>\n  </tr>\n  <tr>\n    <td>Launch application</td>\n    <td>\"4\"</td>\n\t<td>This value will cause the Key Behavior for the Key in the Base Key State Mapping Table to be changed such that the Key will launch a specified application.</td>\n  </tr>\n  <tr>\n    <td>Send intent</td>\n    <td>\"3\"</td>\n\t<td>This value will cause the Key Behavior for the Key in the Base Key State Mapping Table to be changed such that the Key will send an Intent with specified attributes.</td>\n  </tr>\n  <tr>\n    <td>Suppress key</td>\n    <td>\"5\"</td>\n\t<td>This value will cause the Key Behavior for the Key in the Base Key State Mapping Table to be changed such that the Key will be ignored and to act as if the Key was never pressed.</td>\n  </tr> \n  <tr>\n  <td>Reset to default</td>\n    <td>\"7\"</td>\n\t<td>This value will cause the Key Behavior for the Key in the Base Key State Mapping Table to be changed such that the Default Key Behavior is restored.</td>\n  </tr>\n</table>\n</div>\t\n\n####Key behavior in Blue mode\nSettable if: The Action value is \"Remap a key\" *AND* Choose a key to modify is not \"None\" \n\nPivotal parm: Yes\n\nDescription: \n\n>This parm is the same as the parm \"Key behavior\" except that instead of defining the Key Behavior for the Base Key State Mapping Table, it defines the Key Behavior for the Blue Key State Mapping Table.\n\n<div class=\"parm-table\">\n <table class=\"table\">\n\t<tr>\n\t\t<th>Parm Option Name</th>\n\t\t<th>Parm Value</th>\n\t\t<th>Description</th>\n\t</tr>\n  <tr>\n    <td>No change</td>\n    <td>\"0\"</td>\n\t<td>This value (or the absence of this parm from the XML) will not make any change to the Key Behavior of the specified Key in the Blue Key State Mapping Table.</td>\n  </tr>\n  <tr>\n    <td>Send key-code</td>\n    <td>\"2\"</td>\n\t<td>This value will cause the Key Behavior for the specified Key in the Blue Key State Mapping Table to be changed such that the Key acts like a different specified Key.</td>\n  </tr>\n  <tr>\n    <td>Send trigger</td>\n    <td>\"1\"</td>\n\t<td>This value will cause the Key Behavior for the specified Key in the Blue Key State Mapping Table to be changed such that the Key will act as a one of the pre-defined Triggers and hence will cause whatever applications are registered for the selected Trigger to be notified.</td>\n  </tr>\n  <tr>\n    <td>Launch application</td>\n    <td>\"4\"</td>\n\t<td>This value will cause the Key Behavior for the Key in the Blue Key State Mapping Table to be changed such that the Key will launch a specified application.</td>\n  </tr>\n  <tr>\n    <td>Send intent</td>\n    <td>\"3\"</td>\n\t<td>This value will cause the Key Behavior for the Key in the Blue Key State Mapping Table to be changed such that the Key will send an Intent with specified attributes.</td>\n  </tr>\n  <tr>\n    <td>Suppress key</td>\n    <td>\"5\"</td>\n\t<td>This value will cause the Key Behavior for the Key in the Blue Key State Mapping Table to be changed such that the Key will be ignored and to act as if the Key was never pressed.</td>\n  </tr> \n  <tr>\n  <td>Reset to default</td>\n    <td>\"7\"</td>\n\t<td>This value will cause the Key Behavior for the Key in the Blue Key State Mapping Table to be changed such that the Default Key Behavior is restored.</td>\n  </tr>\n</table>\n</div>\t\n\n####Key behavior in Orange mode\nSettable if: The Action value is \"Remap a key\" *AND* Choose a key to modify is not \"None\" \n\nPivotal parm: Yes\n\nDescription: \n\n>This parm is the same as the parm \"Key behavior\" except that instead of defining the Key Behavior for the Base Key State Mapping Table, it defines the Key Behavior for the Orange Key State Mapping Table.\n\n<div class=\"parm-table\">\n <table class=\"table\">\n\t<tr>\n\t\t<th>Parm Option Name</th>\n\t\t<th>Parm Value</th>\n\t\t<th>Description</th>\n\t</tr>\n  <tr>\n    <td>No change</td>\n    <td>\"0\"</td>\n\t<td>This value (or the absence of this parm from the XML) will not make any change to the Key Behavior of the specified Key in the Orange Key State Mapping Table.</td>\n  </tr>\n  <tr>\n    <td>Send key-code</td>\n    <td>\"2\"</td>\n\t<td>This value will cause the Key Behavior for the specified Key in the Orange Key State Mapping Table to be changed such that the Key acts like a different specified Key.</td>\n  </tr>\n  <tr>\n    <td>Send trigger</td>\n    <td>\"1\"</td>\n\t<td>This value will cause the Key Behavior for the specified Key in the Orange Key State Mapping Table to be changed such that the Key will act as a one of the pre-defined Triggers and hence will cause whatever applications are registered for the selected Trigger to be notified.</td>\n  </tr>\n  <tr>\n    <td>Launch application</td>\n    <td>\"4\"</td>\n\t<td>This value will cause the Key Behavior for the Key in the Orange Key State Mapping Table to be changed such that the Key will launch a specified application.</td>\n  </tr>\n  <tr>\n    <td>Send intent</td>\n    <td>\"3\"</td>\n\t<td>This value will cause the Key Behavior for the Key in the Orange Key State Mapping Table to be changed such that the Key will send an Intent with specified attributes.</td>\n  </tr>\n  <tr>\n    <td>Suppress key</td>\n    <td>\"5\"</td>\n\t<td>This value will cause the Key Behavior for the Key in the Orange Key State Mapping Table to be changed such that the Key will be ignored and to act as if the Key was never pressed.</td>\n  </tr> \n  <tr>\n  <td>Reset to default</td>\n    <td>\"7\"</td>\n\t<td>This value will cause the Key Behavior for the Key in the Orange Key State Mapping Table to be changed such that the Default Key Behavior is restored.</td>\n  </tr>\n</table>\n</div>\t\n\n####Key behavior in Grey mode\nSettable if: The Action value is \"Remap a key\" *AND* Choose a key to modify is not \"None\" \n\nPivotal parm: Yes\n\nDescription: \n\n>This parm is the same as the parm \"Key behavior\" except that instead of defining the Key Behavior for the Base Key State Mapping Table, it defines the Key Behavior for the Grey Key State Mapping Table.\n\n<div class=\"parm-table\">\n <table class=\"table\">\n\t<tr>\n\t\t<th>Parm Option Name</th>\n\t\t<th>Parm Value</th>\n\t\t<th>Description</th>\n\t</tr>\n  <tr>\n    <td>No change</td>\n    <td>\"0\"</td>\n\t<td>This value (or the absence of this parm from the XML) will not make any change to the Key Behavior of the specified Key in the Grey Key State Mapping Table.</td>\n  </tr>\n  <tr>\n    <td>Send key-code</td>\n    <td>\"2\"</td>\n\t<td>This value will cause the Key Behavior for the specified Key in the Grey Key State Mapping Table to be changed such that the Key acts like a different specified Key.</td>\n  </tr>\n  <tr>\n    <td>Send trigger</td>\n    <td>\"1\"</td>\n\t<td>This value will cause the Key Behavior for the specified Key in the Grey Key State Mapping Table to be changed such that the Key will act as a one of the pre-defined Triggers and hence will cause whatever applications are registered for the selected Trigger to be notified.</td>\n  </tr>\n  <tr>\n    <td>Launch application</td>\n    <td>\"4\"</td>\n\t<td>This value will cause the Key Behavior for the Key in the Grey Key State Mapping Table to be changed such that the Key will launch a specified application.</td>\n  </tr>\n  <tr>\n    <td>Send intent</td>\n    <td>\"3\"</td>\n\t<td>This value will cause the Key Behavior for the Key in the Grey Key State Mapping Table to be changed such that the Key will send an Intent with specified attributes.</td>\n  </tr>\n  <tr>\n    <td>Suppress key</td>\n    <td>\"5\"</td>\n\t<td>This value will cause the Key Behavior for the Key in the Grey Key State Mapping Table to be changed such that the Key will be ignored and to act as if the Key was never pressed.</td>\n  </tr> \n  <tr>\n  <td>Reset to default</td>\n    <td>\"7\"</td>\n\t<td>This value will cause the Key Behavior for the Key in the Grey Key State Mapping Table to be changed such that the Default Key Behavior is restored.</td>\n  </tr>\n</table>\n</div>\t\n\n####Key behavior in Shift mode\nSettable if: The Action value is \"Remap a key\" *AND* Choose a key to modify is not \"None\" \n\nPivotal parm: Yes\n\nDescription: \n\n>This parm is the same as the parm \"Key behavior\" except that instead of defining the Key Behavior for the Base Key State Mapping Table, it defines the Key Behavior for the Shift Key State Mapping Table.\n\n<div class=\"parm-table\">\n <table class=\"table\">\n\t<tr>\n\t\t<th>Parm Option Name</th>\n\t\t<th>Parm Value</th>\n\t\t<th>Description</th>\n\t</tr>\n  <tr>\n    <td>No change</td>\n    <td>\"0\"</td>\n\t<td>This value (or the absence of this parm from the XML) will not make any change to the Key Behavior of the specified Key in the Shift Key State Mapping Table.</td>\n  </tr>\n  <tr>\n    <td>Send key-code</td>\n    <td>\"2\"</td>\n\t<td>This value will cause the Key Behavior for the specified Key in the Shift Key State Mapping Table to be changed such that the Key acts like a different specified Key.</td>\n  </tr>\n  <tr>\n    <td>Send trigger</td>\n    <td>\"1\"</td>\n\t<td>This value will cause the Key Behavior for the specified Key in the Shift Key State Mapping Table to be changed such that the Key will act as a one of the pre-defined Triggers and hence will cause whatever applications are registered for the selected Trigger to be notified.</td>\n  </tr>\n  <tr>\n    <td>Launch application</td>\n    <td>\"4\"</td>\n\t<td>This value will cause the Key Behavior for the Key in the Shift Key State Mapping Table to be changed such that the Key will launch a specified application.</td>\n  </tr>\n  <tr>\n    <td>Send intent</td>\n    <td>\"3\"</td>\n\t<td>This value will cause the Key Behavior for the Key in the Shift Key State Mapping Table to be changed such that the Key will send an Intent with specified attributes.</td>\n  </tr>\n  <tr>\n    <td>Suppress key</td>\n    <td>\"5\"</td>\n\t<td>This value will cause the Key Behavior for the Key in the Shift Key State Mapping Table to be changed such that the Key will be ignored and to act as if the Key was never pressed.</td>\n  </tr> \n  <tr>\n  <td>Reset to default</td>\n    <td>\"7\"</td>\n\t<td>This value will cause the Key Behavior for the Key in the Shift Key State Mapping Table to be changed such that the Default Key Behavior is restored.</td>\n  </tr>\n</table>\n</div>\t\n\n####Key behavior in Control mode\nSettable if: The Action value is \"Remap a key\" *AND* Choose a key to modify is not \"None\" \n\nPivotal parm: Yes\n\nDescription: \n\n>This parm is the same as the parm \"Key behavior\" except that instead of defining the Key Behavior for the Base Key State Mapping Table, it defines the Key Behavior for the Control Key State Mapping Table.\n\n<div class=\"parm-table\">\n <table class=\"table\">\n\t<tr>\n\t\t<th>Parm Option Name</th>\n\t\t<th>Parm Value</th>\n\t\t<th>Description</th>\n\t</tr>\n  <tr>\n    <td>No change</td>\n    <td>\"0\"</td>\n\t<td>This value (or the absence of this parm from the XML) will not make any change to the Key Behavior of the specified Key in the Control Key State Mapping Table.</td>\n  </tr>\n  <tr>\n    <td>Send key-code</td>\n    <td>\"2\"</td>\n\t<td>This value will cause the Key Behavior for the specified Key in the Control Key State Mapping Table to be changed such that the Key acts like a different specified Key.</td>\n  </tr>\n  <tr>\n    <td>Send trigger</td>\n    <td>\"1\"</td>\n\t<td>This value will cause the Key Behavior for the specified Key in the Control Key State Mapping Table to be changed such that the Key will act as a one of the pre-defined Triggers and hence will cause whatever applications are registered for the selected Trigger to be notified.</td>\n  </tr>\n  <tr>\n    <td>Launch application</td>\n    <td>\"4\"</td>\n\t<td>This value will cause the Key Behavior for the Key in the Control Key State Mapping Table to be changed such that the Key will launch a specified application.</td>\n  </tr>\n  <tr>\n    <td>Send intent</td>\n    <td>\"3\"</td>\n\t<td>This value will cause the Key Behavior for the Key in the Control Key State Mapping Table to be changed such that the Key will send an Intent with specified attributes.</td>\n  </tr>\n  <tr>\n    <td>Suppress key</td>\n    <td>\"5\"</td>\n\t<td>This value will cause the Key Behavior for the Key in the Control Key State Mapping Table to be changed such that the Key will be ignored and to act as if the Key was never pressed.</td>\n  </tr> \n  <tr>\n  <td>Reset to default</td>\n    <td>\"7\"</td>\n\t<td>This value will cause the Key Behavior for the Key in the Control Key State Mapping Table to be changed such that the Default Key Behavior is restored.</td>\n  </tr>\n</table>\n</div>\t\n\n###Key-code Parms\n\nThese parms allow you to specify which Key Code will be sent as the Key Behavior for the specified Key in various Key State Mapping Tables. All of these parms use the same values shown in the table of values provided for the Base Key State Mapping Table.\n\n>**Note:** All these parms also allow you to control the Key State(s) in which the Key Code will be sent. The parms used to control that are covered later in the Advanced Sections.\n\n####Key-code\nSettable if: The Action value is \"Remap a key\" *AND* Choose a key to modify is not \"None\" *AND* the Key Behavior is \"Send key-code\"\n\nPivotal parm: No\n\nParm name:\n\n* For Base Key State Table: BaseKeyCode\n* For Blue Key State Table: BlueKeyCode\n* For Orange Key State Table: OrangeKeyCode\n* For Grey Key State Table: GreyKeyCode\n* For Shift Key State Table: ShiftKeyCode\n* For Control Key State Table: ControlKeyCode\n\nDescription: \n\n>This value allows you to specify which Key Code will be sent as the Key Behavior for the specified Key in the specified Key State Mapping Table. The value must be selected from the following table.\n\n>**Note:** If an attempt is made to specify a Key Behavior for a Key Mapping Table that is not supported on a given device, then an error will be returned in the Result XML. Consult the documentation for a specific device for information on the Key Mapping Tables supported on that device. Alternately, you can query the KeyMappingMgr Feature Type to acquire a list of all Key Mapping Tables that are supported on that device.\n\n<div class=\"parm-table\">\n <table class=\"table\">\n\t<tr>\n\t\t<th>Parm Option Name</th>\n\t\t<th>Parm Value</th>\n\t<!--\t<th>Description</th> -->\n\t</tr>\n  <tr>\n    <td>0</td>\n    <td>\"7\"</td>\n\t<!-- <td></td> -->\n  </tr>\n  <tr>\n    <td>1</td>\n    <td>\"8\"</td>\n\t<!-- <td></td> -->\n  </tr>\n  <tr>\n    <td>2</td>\n    <td>\"9\"</td>\n\t<!-- <td></td> -->\n  </tr>\n  <tr>\n    <td>3</td>\n    <td>\"10\"</td>\n\t<!-- <td></td> -->\n  </tr>\n  <tr>\n    <td>4</td>\n    <td>\"11\"</td>\n\t<!-- <td></td> -->\n  </tr>\n  <tr>\n    <td>5</td>\n    <td>\"12\"</td>\n\t<!-- <td></td> -->\n  </tr>\n  <tr>\n    <td>6</td>\n    <td>\"13\"</td>\n\t<!-- <td></td> -->\n  </tr>\n  <tr>\n    <td>7</td>\n    <td>\"14\"</td>\n\t<!-- <td></td> -->\n  </tr>\n  <tr>\n    <td>8</td>\n    <td>\"15\"</td>\n\t<!-- <td></td> -->\n  </tr>\n  <tr>\n    <td>9</td>\n    <td>\"16\"</td>\n\t<!-- <td></td> -->\n  </tr>\n  <tr>\n    <td>A</td>\n    <td>\"29\"</td>\n\t<!-- <td></td> -->\n  </tr>\n  <tr>\n    <td>B</td>\n    <td>\"30\"</td>\n\t<!-- <td></td> -->\n  </tr>\n  <tr>\n    <td>C</td>\n    <td>\"31\"</td>\n\t<!-- <td></td> -->\n  </tr>\n  <tr>\n    <td>D</td>\n    <td>\"32\"</td>\n\t<!-- <td></td> -->\n  </tr>\n  <tr>\n    <td>E</td>\n    <td>\"33\"</td>\n\t<!-- <td></td> -->\n  </tr>\n  <tr>\n    <td>F</td>\n    <td>\"34\"</td>\n\t<!-- <td></td> -->\n  </tr>\n  <tr>\n    <td>G</td>\n    <td>\"35\"</td>\n\t<!-- <td></td> -->\n  </tr>\n  <tr>\n    <td>H</td>\n    <td>\"36\"</td>\n\t<!-- <td></td> -->\n  </tr>\n  <tr>\n    <td>I</td>\n    <td>\"37\"</td>\n\t<!-- <td></td> -->\n  </tr>\n  <tr>\n    <td>J</td>\n    <td>\"38\"</td>\n\t<!-- <td></td> -->\n  </tr>\n  <tr>\n    <td>K</td>\n    <td>\"39\"</td>\n\t<!-- <td></td> -->\n  </tr>\n  <tr>\n    <td>L</td>\n    <td>\"40\"</td>\n\t<!-- <td></td> -->\n  </tr>\n  <tr>\n    <td>M</td>\n    <td>\"41\"</td>\n\t<!-- <td></td> -->\n  </tr>\n  <tr>\n    <td>N</td>\n    <td>\"42\"</td>\n\t<!-- <td></td> -->\n  </tr>\n  <tr>\n    <td>O</td>\n    <td>\"43\"</td>\n\t<!-- <td></td> -->\n  </tr>\n  <tr>\n    <td>P</td>\n    <td>\"44\"</td>\n\t<!-- <td></td> -->\n  </tr>\n  <tr>\n    <td>Q</td>\n    <td>\"45\"</td>\n\t<!-- <td></td> -->\n  </tr>\n  <tr>\n    <td>R</td>\n    <td>\"46\"</td>\n\t<!-- <td></td> -->\n  </tr>\n  <tr>\n    <td>S</td>\n    <td>\"47\"</td>\n\t<!-- <td></td> -->\n  </tr>\n  <tr>\n    <td>T</td>\n    <td>\"48\"</td>\n\t<!-- <td></td> -->\n  </tr>\n  <tr>\n    <td>U</td>\n    <td>\"49\"</td>\n\t<!-- <td></td> -->\n  </tr>\n  <tr>\n    <td>V</td>\n    <td>\"50\"</td>\n\t<!-- <td></td> -->\n  </tr>\n  <tr>\n    <td>W</td>\n    <td>\"51\"</td>\n\t<!-- <td></td> -->\n  </tr>\n  <tr>\n    <td>X.</td>\n    <td>\"52\"</td>\n\t<!-- <td></td> -->\n  </tr>\n  <tr>\n    <td>Y</td>\n    <td>\"53\"</td>\n\t<!-- <td></td> -->\n  </tr>\n  <tr>\n    <td>Z</td>\n    <td>\"54\"</td>\n\t<!-- <td></td> -->\n  </tr>\n  <tr>\n    <td>Enter</td>\n    <td>\"66\"</td>\n\t<!-- <td></td> -->\n  </tr>\n  <tr>\n    <td>Tab</td>\n    <td>\"61\"</td>\n\t<!-- <td></td> -->\n  </tr>\n  <tr>\n    <td>Space</td>\n    <td>\"62\"</td>\n\t<!-- <td></td> -->\n  </tr>\n  <tr>\n    <td>Escape</td>\n    <td>\"111\"</td>\n\t<!-- <td></td> -->\n  </tr>\n  <tr>\n    <td>Delete</td>\n    <td>\"67\"</td>\n\t<!-- <td></td> -->\n  </tr>\n  <tr>\n    <td>F1</td>\n    <td>\"131\"</td>\n\t<!-- <td></td> -->\n  </tr>\n  <tr>\n    <td>F2</td>\n    <td>\"132\"</td>\n\t<!-- <td></td> -->\n  </tr>\n  <tr>\n    <td>F3</td>\n    <td>\"133\"</td>\n\t<!-- <td></td> -->\n  </tr>\n  <tr>\n    <td>F4</td>\n    <td>\"134\"</td>\n\t<!-- <td></td> -->\n  </tr>\n  <tr>\n    <td>F5</td>\n    <td>\"135\"</td>\n\t<!-- <td></td> -->\n  </tr>\n  <tr>\n    <td>F6</td>\n    <td>\"136\"</td>\n\t<!-- <td></td> -->\n  </tr>\n  <tr>\n    <td>F7</td>\n    <td>\"137\"</td>\n\t<!-- <td></td> -->\n  </tr>\n  <tr>\n    <td>F8</td>\n    <td>\"138\"</td>\n\t<!-- <td></td> -->\n  </tr>\n  <tr>\n    <td>F9</td>\n    <td>\"139\"</td>\n\t<!-- <td></td> -->\n  </tr>\n  <tr>\n    <td>F10</td>\n    <td>\"140\"</td>\n\t<!-- <td></td> -->\n  </tr>\n  <tr>\n    <td>F11</td>\n    <td>\"141\"</td>\n\t<!-- <td></td> -->\n  </tr>\n  <tr>\n    <td>F12</td>\n    <td>\"142\"</td>\n\t<!-- <td></td> -->\n  </tr>\n  <tr>\n    <td>NUMPAD 0</td>\n    <td>\"144\"</td>\n\t<!-- <td></td> -->\n  </tr>\n  <tr>\n    <td>NUMPAD 1</td>\n    <td>\"145\"</td>\n\t<!-- <td></td> -->\n  </tr>\n  <tr>\n    <td>NUMPAD 2</td>\n    <td>\"146\"</td>\n\t<!-- <td></td> -->\n  </tr>\n  <tr>\n    <td>NUMPAD 3</td>\n    <td>\"147\"</td>\n\t<!-- <td></td> -->\n  </tr>\n  <tr>\n    <td>NUMPAD 4</td>\n    <td>148\"\"</td>\n\t<!-- <td></td> -->\n  </tr>\n  <tr>\n    <td>NUMPAD 5</td>\n    <td>\"149\"</td>\n\t<!-- <td></td> -->\n  </tr>\n  <tr>\n    <td>NUMPAD 6</td>\n    <td>\"150\"</td>\n\t<!-- <td></td> -->\n  </tr>\n  <tr>\n    <td>NUMPAD 7</td>\n    <td>\"151\"</td>\n\t<!-- <td></td> -->\n  </tr>\n  <tr>\n    <td>NUMPAD 8</td>\n    <td>\"152\"</td>\n\t<!-- <td></td> -->\n  </tr>\n  <tr>\n    <td>NUMPAD 9</td>\n    <td>\"153\"</td>\n\t<!-- <td></td> -->\n  </tr>\n  <tr>\n    <td>NUMPAD Divide</td>\n    <td>\"154\"</td>\n\t<!-- <td></td> -->\n  </tr>\n  <tr>\n    <td>NUMPAD Multiply</td>\n    <td>\"155\"</td>\n\t<!-- <td></td> -->\n  </tr>\n  <tr>\n    <td>NUMPAD Subtract</td>\n    <td>\"156\"</td>\n\t<!-- <td></td> -->\n  </tr>\n  <tr>\n    <td>NUMPAD Add</td>\n    <td>\"157\"</td>\n\t<!-- <td></td> -->\n  </tr>\n  <tr>\n    <td>NUMPAD Period</td>\n    <td>\"158\"</td>\n\t<!-- <td></td> -->\n  </tr>\n  <tr>\n    <td>NUMPAD Comma</td>\n    <td>\"159\"</td>\n\t<!-- <td></td> -->\n  </tr>\n  <tr>\n    <td>NUMPAD Enter</td>\n    <td>\"160\"</td>\n\t<!-- <td></td> -->\n  </tr>\n  <tr>\n    <td>NUMPAD Equals</td>\n    <td>\"161\"</td>\n\t<!-- <td></td> -->\n  </tr>\n  <tr>\n    <td>NUMPAD Left Parenthesis</td>\n    <td>\"162\"</td>\n\t<!-- <td></td> -->\n  </tr>\n  <tr>\n    <td>NUMPAD Right Parenthesis</td>\n    <td>\"163\"</td>\n\t<!-- <td></td> -->\n  </tr>\n  <tr>\n    <td>DPAD Up</td>\n    <td>\"19\"</td>\n\t<!-- <td></td> -->\n  </tr>\n  <tr>\n    <td>DPAD Down</td>\n    <td>\"20\"</td>\n\t<!-- <td></td> -->\n  </tr>\n  <tr>\n    <td>DPAD Left</td>\n    <td>\"21\"</td>\n\t<!-- <td></td> -->\n  </tr>\n  <tr>\n    <td>DPAD Right</td>\n    <td>\"22\"</td>\n\t<!-- <td></td> -->\n  </tr>\n  <tr>\n    <td>DPAD Center</td>\n    <td>\"23\"</td>\n\t<!-- <td></td> -->\n  </tr>\n  <tr>\n    <td>Move Home</td>\n    <td>\"122\"</td>\n\t<!-- <td></td> -->\n  </tr>\n  <tr>\n    <td>Move End</td>\n    <td>\"123\"</td>\n\t<!-- <td></td> -->\n  </tr>\n  <tr>\n    <td>Page Up</td>\n    <td>\"92\"</td>\n\t<!-- <td></td> -->\n  </tr>\n  <tr>\n    <td>Page Down</td>\n    <td>\"93\"</td>\n\t<!-- <td></td> -->\n  </tr>\n  <tr>\n    <td>Insert</td>\n    <td>\"124\"</td>\n\t<!-- <td></td> -->\n  </tr>\n  <tr>\n    <td>Forward Delete</td>\n    <td>\"112\"</td>\n\t<!-- <td></td> -->\n  </tr>\n  <tr>\n    <td>Clear</td>\n    <td>\"28\"</td>\n\t<!-- <td></td> -->\n  </tr>\n  <tr>\n    <td>Blue</td>\n    <td>\"10027\"</td>\n\t<!-- <td></td> -->\n  </tr>\n  <tr>\n    <td>Orange</td>\n    <td>\"10028\"</td>\n\t<!-- <td></td> -->\n  </tr>\n  <tr>\n    <td>Grey</td>\n    <td>\"10029\"</td>\n\t<!-- <td></td> -->\n  </tr>\n  <tr>\n    <td>Alt</td>\n    <td>\"10030\"</td>\n\t<!-- <td></td> -->\n  </tr>\n  <tr>\n    <td>Control</td>\n    <td>\"10031\"</td>\n\t<!-- <td></td> -->\n  </tr>\n  <tr>\n    <td>Shift</td>\n    <td>\"10032\"</td>\n\t<!-- <td></td> -->\n  </tr>\n  <tr>\n    <td>Left Shift</td>\n    <td>\"59\"</td>\n\t<!-- <td></td> -->\n  </tr>\n  <tr>\n    <td>Right Shift</td>\n    <td>\"60\"</td>\n\t<!-- <td></td> -->\n  </tr>\n  <tr>\n    <td>Left Alt</td>\n    <td>\"57\"</td>\n\t<!-- <td></td> -->\n  </tr>\n  <tr>\n    <td>Right Alt</td>\n    <td>\"58\"</td>\n\t<!-- <td></td> -->\n  </tr>\n  <tr>\n    <td>Left Control</td>\n    <td>\"113\"</td>\n\t<!-- <td></td> -->\n  </tr>\n  <tr>\n    <td>Right Control</td>\n    <td>\"114\"</td>\n\t<!-- <td></td> -->\n  </tr>\n  <tr>\n    <td>Meta Left</td>\n    <td>\"117\"</td>\n\t<!-- <td></td> -->\n  </tr>\n  <tr>\n    <td>Meta Right</td>\n    <td>\"118\"</td>\n\t<!-- <td></td> -->\n  </tr>\n  <tr>\n    <td>Caps Lock</td>\n    <td>\"115\"</td>\n\t<!-- <td></td> -->\n  </tr>\n  <tr>\n    <td>Num Lock</td>\n    <td>\"143\"</td>\n\t<!-- <td></td> -->\n  </tr>\n  <tr>\n    <td>Scroll Lock</td>\n    <td>\"116\"</td>\n\t<!-- <td></td> -->\n  </tr>\n  <tr>\n    <td>SysRq</td>\n    <td>\"120\"</td>\n\t<!-- <td></td> -->\n  </tr>\n  <tr>\n    <td>Break</td>\n    <td>\"121\"</td>\n\t<!-- <td></td> -->\n  </tr>\n  <tr>\n    <td>Function</td>\n    <td>\"119\"</td>\n\t<!-- <td></td> -->\n  </tr>\n  <tr>\n    <td>Plus</td>\n    <td>\"81\"</td>\n\t<!-- <td></td> -->\n  </tr>\n  <tr>\n    <td>Minus</td>\n    <td>\"69\"</td>\n\t<!-- <td></td> -->\n  </tr>\n  <tr>\n    <td>Equals</td>\n    <td>\"70\"</td>\n\t<!-- <td></td> -->\n  </tr>\n  <tr>\n    <td>Left Bracket</td>\n    <td>\"71\"</td>\n\t<!-- <td></td> -->\n  </tr>\n  <tr>\n    <td>Right Bracket</td>\n    <td>\"72\"</td>\n\t<!-- <td></td> -->\n  </tr>\n  <tr>\n    <td>Grave</td>\n    <td>\"68\"</td>\n\t<!-- <td></td> -->\n  </tr>\n  <tr>\n    <td>Slash</td>\n    <td>\"76\"</td>\n\t<!-- <td></td> -->\n  </tr>\n  <tr>\n    <td>Backslash</td>\n    <td>\"73\"</td>\n\t<!-- <td></td> -->\n  </tr>\n  <tr>\n    <td>Semicolon</td>\n    <td>\"74\"</td>\n\t<!-- <td></td> -->\n  </tr>\n  <tr>\n    <td>Apostrophe</td>\n    <td>\"75\"</td>\n\t<!-- <td></td> -->\n  </tr>\n  <tr>\n    <td>Comma</td>\n    <td>\"55\"</td>\n\t<!-- <td></td> -->\n  </tr>\n  <tr>\n    <td>Period</td>\n    <td>\"56\"</td>\n\t<!-- <td></td> -->\n  </tr>\n  <tr>\n    <td>Star</td>\n    <td>\"17\"</td>\n\t<!-- <td></td> -->\n  </tr>\n  <tr>\n    <td>Pound</td>\n    <td>\"18\"</td>\n\t<!-- <td></td> -->\n  </tr>\n  <tr>\n    <td>At</td>\n    <td>\"77\"</td>\n\t<!-- <td></td> -->\n  </tr>\n  <tr>\n    <td>Back</td>\n    <td>\"4\"</td>\n\t<!-- <td></td> -->\n  </tr>\n  <tr>\n    <td>Forward</td>\n    <td>\"125\"</td>\n\t<!-- <td></td> -->\n  </tr>\n  <tr>\n    <td>Home</td>\n    <td>\"3\"</td>\n\t<!-- <td></td> -->\n  </tr>\n  <tr>\n    <td>Menu</td>\n    <td>\"82\"</td>\n\t<!-- <td></td> -->\n  </tr>\n  <tr>\n    <td>Settings</td>\n    <td>\"176\"</td>\n\t<!-- <td></td> -->\n  </tr>\n  <tr>\n    <td>Application Switch</td>\n    <td>\"187\"</td>\n\t<!-- <td></td> -->\n  </tr>\n  <tr>\n    <td>Calculator</td>\n    <td>\"210\"</td>\n\t<!-- <td></td> -->\n  </tr>\n  <tr>\n    <td>Explorer</td>\n    <td>\"64\"</td>\n\t<!-- <td></td> -->\n  </tr>\n  <tr>\n    <td>Envelope</td>\n    <td>\"65\"</td>\n\t<!-- <td></td> -->\n  </tr>\n  <tr>\n    <td>Bookmark</td>\n    <td>\"174\"</td>\n\t<!-- <td></td> -->\n  </tr>\n  <tr>\n    <td>Music</td>\n    <td>\"209\"</td>\n\t<!-- <td></td> -->\n  </tr>\n  <tr>\n    <td>Call</td>\n    <td>\"5\"</td>\n\t<!-- <td></td> -->\n  </tr>\n  <tr>\n    <td>End Call</td>\n    <td>\"6\"</td>\n\t<!-- <td></td> -->\n  </tr>\n  <tr>\n    <td>Microphone Mute</td>\n    <td>\"91\"</td>\n\t<!-- <td></td> -->\n  </tr>\n  <tr>\n    <td>Camera</td>\n    <td>\"27\"</td>\n\t<!-- <td></td> -->\n  </tr>\n  <tr>\n    <td>Search</td>\n    <td>\"84\"</td>\n\t<!-- <td></td> -->\n  </tr>\n  <tr>\n    <td>Contacts</td>\n    <td>\"207\"</td>\n\t<!-- <td></td> -->\n  </tr>\n  <tr>\n    <td>Calendar</td>\n    <td>\"208\"</td>\n\t<!-- <td></td> -->\n  </tr>\n  <tr>\n    <td>Volume Up</td>\n    <td>\"24\"</td>\n\t<!-- <td></td> -->\n  </tr>\n  <tr>\n    <td>Volume Down</td>\n    <td>\"25\"</td>\n\t<!-- <td></td> -->\n  </tr>\n  <tr>\n    <td>Volume Mute</td>\n    <td>\"164\"</td>\n\t<!-- <td></td> -->\n  </tr>\n  <tr>\n    <td>Brightness Up</td>\n    <td>\"221\"</td>\n\t<!-- <td></td> -->\n  </tr>\n  <tr>\n    <td>Brightness Down</td>\n    <td>\"220\"</td>\n\t<!-- <td></td> -->\n  </tr>\n  <tr>\n    <td>Power</td>\n    <td>\"26\"</td>\n\t<!-- <td></td> -->\n  </tr>\n  <tr>\n    <td>Sleep</td>\n    <td>\"223\"</td>\n\t<!-- <td></td> -->\n  </tr>\n  <tr>\n    <td>Wakeup</td>\n    <td>\"224\"</td>\n\t<!-- <td></td> -->\n  </tr>\n  <tr>\n    <td>Headset</td>\n    <td>\"79\"</td>\n\t<!-- <td></td> -->\n  </tr>\n  <tr>\n    <td>Push-to-talk</td>\n    <td>\"228\"</td>\n\t<!-- <td></td> -->\n  </tr>\n  <tr>\n    <td>Camera Focus</td>\n    <td>\"80\"</td>\n\t<!-- <td></td> -->\n  </tr>\n  <tr>\n    <td>Media Play/Pause</td>\n    <td>\"85\"</td>\n\t<!-- <td></td> -->\n  </tr>\n  <tr>\n    <td>Media Stop</td>\n    <td>\"86\"</td>\n\t<!-- <td></td> -->\n  </tr>\n  <tr>\n    <td>Media Next</td>\n    <td>\"87\"</td>\n\t<!-- <td></td> -->\n  </tr>\n  <tr>\n    <td>Media Previous</td>\n    <td>\"88\"</td>\n\t<!-- <td></td> -->\n  </tr>\n  <tr>\n    <td>Media Rewind</td>\n    <td>\"89\"</td>\n\t<!-- <td></td> -->\n  </tr>\n  <tr>\n    <td>Media Fast-Forward</td>\n    <td>\"90\"</td>\n\t<!-- <td></td> -->\n  </tr>\n  <tr>\n    <td>Media Play</td>\n    <td>\"126\"</td>\n\t<!-- <td></td> -->\n  </tr>\n  <tr>\n    <td>Media Pause</td>\n    <td>\"127\"</td>\n\t<!-- <td></td> -->\n  </tr>\n  <tr>\n    <td>Media Close</td>\n    <td>\"128\"</td>\n\t<!-- <td></td> -->\n  </tr>\n  <tr>\n    <td>Media Eject</td>\n    <td>\"129\"</td>\n\t<!-- <td></td> -->\n  </tr>\n  <tr>\n    <td>Media Record</td>\n    <td>\"130\"</td>\n\t<!-- <td></td> -->\n  </tr>\n  <tr>\n    <td>Button L1</td>\n    <td>\"102\"</td>\n\t<!-- <td></td> -->\n  </tr>\n  <tr>\n    <td>Button R1</td>\n    <td>\"103\"</td>\n\t<!-- <td></td> -->\n  </tr>\n  <tr>\n    <td>Button L2\"</td>\n    <td>\"104\"</td>\n\t<!-- <td></td> -->\n  </tr>\n  <tr>\n    <td>Button R2</td>\n    <td>\"105\"</td>\n\t<!-- <td></td> -->\n  </tr>\n  <tr>\n    <td>Button A</td>\n    <td>\"96\"</td>\n\t<!-- <td></td> -->\n  </tr>\n  <tr>\n    <td>Button B</td>\n    <td>\"97\"</td>\n\t<!-- <td></td> -->\n  </tr>\n  <tr>\n    <td>Button C</td>\n    <td>\"98\"</td>\n\t<!-- <td></td> -->\n  </tr>\n  <tr>\n    <td>Button X</td>\n    <td>\"99\"</td>\n\t<!-- <td></td> -->\n  </tr>\n  <tr>\n    <td>Button Y</td>\n    <td>\"100\"</td>\n\t<!-- <td></td> -->\n  </tr>\n  <tr>\n    <td>Button Z</td>\n    <td>\"101\"</td>\n\t<!-- <td></td> -->\n  </tr>\n  <tr>\n    <td>Left Thumb Button</td>\n    <td>\"106\"</td>\n\t<!-- <td></td> -->\n  </tr>\n  <tr>\n    <td>Right Thumb Button</td>\n    <td>\"107\"</td>\n\t<!-- <td></td> -->\n  </tr>\n  <tr>\n    <td>Start Button</td>\n    <td>\"108\"</td>\n\t<!-- <td></td> -->\n  </tr>\n  <tr>\n    <td>Select Button</td>\n    <td>\"109\"</td>\n\t<!-- <td></td> -->\n  </tr>\n  <tr>\n    <td>Mode Button</td>\n    <td>\"110\"</td>\n\t<!-- <td></td> -->\n  </tr>\n  <tr>\n    <td>Gamepad Button 1</td>\n    <td>\"188\"</td>\n\t<!-- <td></td> -->\n  </tr>\n  <tr>\n    <td>Gamepad Button 2</td>\n    <td>\"189\"</td>\n\t<!-- <td></td> -->\n  </tr>\n  <tr>\n    <td>Gamepad Button 3</td>\n    <td>\"190\"</td>\n\t<!-- <td></td> -->\n  </tr>\n  <tr>\n    <td>Gamepad Button 4</td>\n    <td>\"191\"</td>\n\t<!-- <td></td> -->\n  </tr>\n  <tr>\n    <td>Gamepad Button 5</td>\n    <td>\"192\"</td>\n\t<!-- <td></td> -->\n  </tr>\n  <tr>\n    <td>Gamepad Button 6</td>\n    <td>\"193\"</td>\n\t<!-- <td></td> -->\n  </tr>\n  <tr>\n    <td>Gamepad Button 7</td>\n    <td>\"194\"</td>\n\t<!-- <td></td> -->\n  </tr>\n  <tr>\n    <td>Gamepad Button 8</td>\n    <td>\"195\"</td>\n\t<!-- <td></td> -->\n  </tr>\n  <tr>\n    <td>Gamepad Button 9</td>\n    <td>\"196\"</td>\n\t<!-- <td></td> -->\n  </tr>\n  <tr>\n    <td>Gamepad Button 10</td>\n    <td>\"197\"</td>\n\t<!-- <td></td> -->\n  </tr>\n  <tr>\n    <td>Gamepad Button 11</td>\n    <td>\"198\"</td>\n\t<!-- <td></td> -->\n  </tr>\n  <tr>\n    <td>Gamepad Button 12</td>\n    <td>\"199\"</td>\n\t<!-- <td></td> -->\n  </tr>\n  <tr>\n    <td>Gamepad Button 13</td>\n    <td>\"200\"</td>\n\t<!-- <td></td> -->\n  </tr>\n  <tr>\n    <td>Gamepad Button 14</td>\n    <td>\"201\"</td>\n\t<!-- <td></td> -->\n  </tr>\n  <tr>\n    <td>Gamepad Button 15</td>\n    <td>\"202\"</td>\n\t<!-- <td></td> -->\n  </tr>\n  <tr>\n    <td>Gamepad Button 16</td>\n    <td>\"203\"</td>\n\t<!-- <td></td> -->\n  </tr>\n  <tr>\n    <td>Zenkaku/Hankaku</td>\n    <td>\"211\"</td>\n\t<!-- <td></td> -->\n  </tr>\n  <tr>\n    <td>Eisu</td>\n    <td>\"212\"</td>\n\t<!-- <td></td> -->\n  </tr>\n  <tr>\n    <td>Muhenkan</td>\n    <td>\"213\"</td>\n\t<!-- <td></td> -->\n  </tr>\n  <tr>\n    <td>Henkan</td>\n    <td>\"214\"</td>\n\t<!-- <td></td> -->\n  </tr>\n  <tr>\n    <td>Katakana/Hiragana</td>\n    <td>\"215\"</td>\n\t<!-- <td></td> -->\n  </tr>\n  <tr>\n    <td>Yen</td>\n    <td>\"216\"</td>\n\t<!-- <td></td> -->\n  </tr>\n  <tr>\n    <td>Ro</td>\n    <td>\"217\"</td>\n\t<!-- <td></td> -->\n  </tr>\n  <tr>\n    <td>Kana</td>\n    <td>\"218\"</td>\n\t<!-- <td></td> -->\n  </tr>\n</table>\n</div>\t\n\n###Advanced Sections\n\nThe Advanced Sections allow you to specify Key State Modifiers that will be set into the Current Key State when a Key Code is sent as the Key Behavior for the specified Key in various Key State Mapping Tables.\n\n**Note:** Setting one or more Key States allows you a great deal of flexibility in remapping Keys. For example, suppose you had a device with no Shift Key and you wanted to have a Key combination to send an Asterisk (\\*). Since the Asterisk(\\*) is typically obtained by pressing the \"8\" Key in Shifted mode, you could define a Key Mapping in the Blue Key State Mapping Table that send the Key Code for the \"2\" Key with the Shift Key State Modifier set.\n\n####Advanced\nSettable if: The Action value is \"Remap a key\" *AND* Choose a key to modify is not \"None\" *AND* the Key Behavior for the Mapping Table is \"Send key-code\"\n\nPivotal parm: Yes\n\nDescription: \n\n>Each Key State Mapping Table has its own Advanced Section via which you can specify Key State Modifiers that will be set into the Current Key State when a Key Code is sent as the Key Behavior for the specified Key in that Key State Mapping Table.\n\n>This parm allows you to choose whether or not to use the Advanced section for a Key Mapping Table. All Advanced parms use the same values shown in the following table of values.\n\n<div class=\"parm-table\">\n <table class=\"table\">\n\t<tr>\n\t\t<th>Parm Option Name</th>\n\t\t<th>Parm Value</th>\n\t\t<th>Description</th>\n\t</tr>\n  <tr>\n    <td>True</td>\n    <td>\"1\"</td>\n\t<td>This value indicates that Advanced section will be specified.</td>\n  </tr>\n  <tr>\n    <td>False</td>\n    <td>\"2\"</td>\n\t<td>This value (or the absence of this parm from the XML) indicates that the Advanced section will not be specified.</td>\n  </tr>\n</table>\n</div>\t\n\n#####**SHIFT state**\nSettable if: The Action value is \"Remap a key\" *AND* Choose a key to modify is not \"None\" *AND* the Key Behavior is \"Send key-code\" *AND* Advanced is \"True\"\n\nPivotal parm: No\n\nParm name:\n\n* For Base Key State Table: BaseKeyCodeShiftState\n* For Blue Key State Table: BlueKeyCodeShiftState\n* For Orange Key State Table: OrangeKeyCodeShiftState\n* For Grey Key State Table: GreyKeyCodeShiftState\n* For Shift Key State Table: ShiftKeyCodeShiftState\n* For Control Key State Table: ControlKeyCodeShiftState\n\nDescription: \n\n>These parms allow you to control the Shift Key State Modifier when the Key Code is sent as the Key Behavior for the specified Key in the specified Key State Mapping Table. If an attempt is made to set a Key State Modifier that is not supported on a given device, then no error will be returned in the Result XML. When the Key Code is sent, the specified Key State Modifier will be set into the Current Key State, but since the Key State Modifier is not supported by the device, and hence has no associated Key Mapping Table, there will be no noticeable effect produced by setting that Key State Modifier.\n\n<div class=\"parm-table\">\n <table class=\"table\">\n\t<tr>\n\t\t<th>Parm Option Name</th>\n\t\t<th>Parm Value</th>\n\t\t<th>Description</th>\n\t</tr>\n  <tr>\n    <td>Use existing state</td>\n    <td>\"0\"</td>\n\t<td>This value (or the absence of this parm from the XML) will cause the Shift Key State Modifier to be left unchanged, thus making it the same as when the Key was pressed.</td>\n  </tr>\n  <tr>\n    <td>Force ON</td>\n    <td>\"1\"</td>\n\t<td>This value will set the Shift Key State Modifier, thus forcing the Key Code sent to be interpreted as Shifted.</td>\n  </tr>\n  <tr>\n    <td>Force OFF</td>\n    <td>\"2\"</td>\n\t<td>This value will clear the Shift Key State Modifier, thus forcing the Key Code sent to be interpreted as non-Shifted.</td>\n  </tr>\n</table>\n</div>\n\n#####**ALT state**\nSettable if: The Action value is \"Remap a key\" *AND* Choose a key to modify is not \"None\" *AND* the Key Behavior is \"Send key-code\" *AND* Advanced is \"True\"\n\nPivotal parm: No\n\nParm name:\n\n* For Base Key State Table: BaseKeyCodeAltState\n* For Blue Key State Table: BlueKeyCodeAltState\n* For Orange Key State Table: OrangeKeyCodeAltState\n* For Grey Key State Table: GreyKeyCodeAltState\n* For Shift Key State Table: ShiftKeyCodeAltState\n* For Control Key State Table: ControlKeyCodeAltState\n\nDescription: \n\n>These parms allow you to control the ALT Key State Modifier when the Key Code is sent as the Key Behavior for the specified Key in the specified Key State Mapping Table. If an attempt is made to set a Key State Modifier that is not supported on a given device, then no error will be returned in the Result XML. When the Key Code is sent, the specified Key State Modifier will be set into the Current Key State, but since the Key State Modifier is not supported by the device, and hence has no associated Key Mapping Table, there will be no noticeable effect produced by setting that Key State Modifier.\n\n<div class=\"parm-table\">\n <table class=\"table\">\n\t<tr>\n\t\t<th>Parm Option Name</th>\n\t\t<th>Parm Value</th>\n\t\t<th>Description</th>\n\t</tr>\n  <tr>\n    <td>Use existing state</td>\n    <td>\"0\"</td>\n\t<td>This value (or the absence of this parm from the XML) will cause the ALT Key State Modifier to be left unchanged, thus making it the same as when the Key was pressed.</td>\n  </tr>\n  <tr>\n    <td>Force ON</td>\n    <td>\"1\"</td>\n\t<td>This value will set the ALT Key State Modifier, thus forcing the Key Code sent to be interpreted as ALT.</td>\n  </tr>\n  <tr>\n    <td>Force OFF</td>\n    <td>\"2\"</td>\n\t<td>This value will clear the Shift Key State Modifier, thus forcing the Key Code sent to be interpreted as non-ALT.</td>\n  </tr>\n</table>\n</div>\n\n#####**CTRL state**\nSettable if: The Action value is \"Remap a key\" *AND* Choose a key to modify is not \"None\" *AND* the Key Behavior is \"Send key-code\" *AND* Advanced is \"True\"\n\nPivotal parm: No\n\nParm name:\n\n* For Base Key State Table: BaseKeyCodeCtrlState\n* For Blue Key State Table: BlueKeyCodeCtrlState\n* For Orange Key State Table: OrangeKeyCodeCtrlState\n* For Grey Key State Table: GreyKeyCodeCtrlState\n* For Shift Key State Table: ShiftKeyCodeCtrlState\n* For Control Key State Table: ControlKeyCodeCtrlState\n\nDescription: \n\n>These parms allow you to control the Control Key State Modifier when the Key Code is sent as the Key Behavior for the specified Key in the specified Key State Mapping Table. If an attempt is made to set a Key State Modifier that is not supported on a given device, then no error will be returned in the Result XML. When the Key Code is sent, the specified Key State Modifier will be set into the Current Key State, but since the Key State Modifier is not supported by the device, and hence has no associated Key Mapping Table, there will be no noticeable effect produced by setting that Key State Modifier.\n\n<div class=\"parm-table\">\n <table class=\"table\">\n\t<tr>\n\t\t<th>Parm Option Name</th>\n\t\t<th>Parm Value</th>\n\t\t<th>Description</th>\n\t</tr>\n  <tr>\n    <td>Use existing state</td>\n    <td>\"0\"</td>\n\t<td>This value (or the absence of this parm from the XML) will cause the Control Key State Modifier to be left unchanged, thus making it the same as when the Key was pressed.</td>\n  </tr>\n  <tr>\n    <td>Force ON</td>\n    <td>\"1\"</td>\n\t<td>This value will set the Control Key State Modifier, thus forcing the Key Code sent to be interpreted as Control.</td>\n  </tr>\n  <tr>\n    <td>Force OFF</td>\n    <td>\"2\"</td>\n\t<td>This value will clear the Shift Key State Modifier, thus forcing the Key Code sent to be interpreted as non-Control.</td>\n  </tr>\n</table>\n</div>\n\n#####**FN state**\nSettable if: The Action value is \"Remap a key\" *AND* Choose a key to modify is not \"None\" *AND* the Key Behavior is \"Send key-code\" *AND* Advanced is \"True\"\n\nPivotal parm: No\n\nParm name:\n\n* For Base Key State Table: BaseKeyCodeFnState\n* For Blue Key State Table: BlueKeyCodeFnState\n* For Orange Key State Table: OrangeKeyCodeFnState\n* For Grey Key State Table: GreyKeyCodeFnState\n* For Shift Key State Table: ShiftKeyCodeFnState\n* For Control Key State Table: ControlKeyCodeFnState\n\nDescription: \n\n>These parms allow you to control the Function Key State Modifier when the Key Code is sent as the Key Behavior for the specified Key in the specified Key State Mapping Table. If an attempt is made to set a Key State Modifier that is not supported on a given device, then no error will be returned in the Result XML. When the Key Code is sent, the specified Key State Modifier will be set into the Current Key State, but since the Key State Modifier is not supported by the device, and hence has no associated Key Mapping Table, there will be no noticeable effect produced by setting that Key State Modifier.\n\n<div class=\"parm-table\">\n <table class=\"table\">\n\t<tr>\n\t\t<th>Parm Option Name</th>\n\t\t<th>Parm Value</th>\n\t\t<th>Description</th>\n\t</tr>\n  <tr>\n    <td>Use existing state</td>\n    <td>\"0\"</td>\n\t<td>This value (or the absence of this parm from the XML) will cause the Function Key State Modifier to be left unchanged, thus making it the same as when the Key was pressed.</td>\n  </tr>\n  <tr>\n    <td>Force ON</td>\n    <td>\"1\"</td>\n\t<td>This value will set the Control Key State Modifier, thus forcing the Key Code sent to be interpreted as Function.</td>\n  </tr>\n  <tr>\n    <td>Force OFF</td>\n    <td>\"2\"</td>\n\t<td>This value will clear the Shift Key State Modifier, thus forcing the Key Code sent to be interpreted as non-Function.</td>\n  </tr>\n</table>\n</div>\n\n###Trigger Parms\n\nThese parms allow you to specify which Triggers will be performed as the Key Behavior for the specified Key in various Key State Mapping Tables.\n\n####Trigger\nSettable if: The Action value is \"Remap a key\" *AND* Choose a key to modify is not \"None\" *AND* the Key Behavior for the corresponding Key Table is \"Send trigger\"\n\nPivotal parm: No\n\nParm name:\n\n* For Base Key State Table: BaseTrigger\n* For Blue Key State Table: BlueTrigger\n* For Orange Key State Table: OrangeTrigger\n* For Grey Key State Table: GreyTrigger\n* For Shift Key State Table: ShiftTrigger\n* For Control Key State Table: ControlTrigger\n\nDescription: \n\n>This value allows you to specify which Trigger will be performed as the Key Behavior for the specified Key in the specified Key State Mapping Table.\n\n<div class=\"parm-table\">\n <table class=\"table\">\n\t<tr>\n\t\t<th>Parm Option Name</th>\n\t\t<th>Parm Value</th>\n\t\t<th>Description</th>\n\t</tr>\n  <tr>\n    <td>Trigger 1</td>\n    <td>\"10016\"</td>\n\t<td><p>This value indicates that the designated Trigger will be sent as the Key Behavior for the specified Key in the specified Key Mapping Table.</p><p><b>Note:</b> The Trigger designated as Trigger 1 is commonly used by the data acquisition subsystem on devices to initiate Barcode Scanning.</p></td>\n  </tr>\n  <tr>\n    <td>Trigger 2</td>\n    <td>\"10017\"</td>\n\t<td><p>This value indicates that the designated Trigger will be sent as the Key Behavior for the specified Key in the specified Key Mapping Table.</p><p><b>Note:</b> There is currently no standard usage for this Trigger. Please consult the documentation for a specific device to determine what, if any, standard System applications may register for notification of this Trigger.</p></td>\n  </tr>\n  <tr>\n    <td>Trigger 3</td>\n    <td>\"10018\"</td>\n\t<td><p>This value indicates that the designated Trigger will be sent as the Key Behavior for the specified Key in the specified Key Mapping Table.</p><p><b>Note:</b> There is currently no standard usage for this Trigger. Please consult the documentation for a specific device to determine what, if any, standard System applications may register for notification of this Trigger.</p></td>\n  </tr>\n  <tr>\n    <td>Trigger 4</td>\n    <td>\"10019\"</td>\n\t<td><p>This value indicates that the designated Trigger will be sent as the Key Behavior for the specified Key in the specified Key Mapping Table.</p><p><b>Note:</b> There is currently no standard usage for this Trigger. Please consult the documentation for a specific device to determine what, if any, standard System applications may register for notification of this Trigger.</p></td>\n  </tr>\n  <tr>\n    <td>Trigger 5</td>\n    <td>\"10020\"</td>\n\t<td><p>This value indicates that the designated Trigger will be sent as the Key Behavior for the specified Key in the specified Key Mapping Table.</p><p><b>Note:</b> There is currently no standard usage for this Trigger. Please consult the documentation for a specific device to determine what, if any, standard System applications may register for notification of this Trigger.</p></td>\n  </tr>\n  <tr>\n    <td>Trigger 6</td>\n    <td>\"10021\"</td>\n\t<td><p>This value indicates that the designated Trigger will be sent as the Key Behavior for the specified Key in the specified Key Mapping Table.</p><p><b>Note:</b> There is currently no standard usage for this Trigger. Please consult the documentation for a specific device to determine what, if any, standard System applications may register for notification of this Trigger.</p></td>\n  </tr>\n  <tr>\n    <td>Trigger 7</td>\n    <td>\"10022\"</td>\n\t<td><p>This value indicates that the designated Trigger will be sent as the Key Behavior for the specified Key in the specified Key Mapping Table.</p><p><b>Note:</b> There is currently no standard usage for this Trigger.  Please consult the documentation for a specific device to determine what, if any, standard System applications may register for notification of this Trigger.</p></td>\n  </tr>\n  <tr>\n    <td>10023</td>\n    <td>\"Trigger 8\"</td>\n\t<td><p>This value indicates that the designated Trigger will be sent as the Key Behavior for the specified Key in the specified Key Mapping Table.</p><p><b>Note:</b> There is currently no standard usage for this Trigger.  Please consult the documentation for a specific device to determine what, if any, standard System applications may register for notification of this Trigger.</p></td>\n  </tr>\n</table>\n</div>\t\n\n###Intent Parms\n\nThese parms allow you to specify the attributes of an Intent that will be sent as the Key Behavior for the specified Key in various Key State Mapping Tables.\n\n####Send Intent\nSettable if: The Action value is \"Remap a key\" *AND* Choose a key to modify is not \"None\" *AND* the Key Behavior is \"Send intent\"\n\nPivotal parm: No\n\nParm name:\n\n* For Base Key State Table: BaseSendIntent\n* For Blue Key State Table: BlueSendIntent\n* For Orange Key State Table: OrangeSendIntent\n* For Grey Key State Table: GreySendIntent\n* For Shift Key State Table: ShiftSendIntent\n* For Control Key State Table: ControlSendIntent\n\nDescription: \n\n>This parm allows you to specify the conditions under which an Intent will be sent as the Key Behavior for the specified Key in the specified Key State Mapping Table.\n\n<div class=\"parm-table\">\n <table class=\"table\">\n\t<tr>\n\t\t<th>Parm Option Name</th>\n\t\t<th>Parm Value</th>\n\t\t<th>Description</th>\n\t</tr>\n  <tr>\n    <td>On key down</td>\n    <td>\"1\"</td>\n\t<td>This value indicates that the specified Intent should be sent only when the Key transitions from unpressed to pressed.</td>\n  </tr>\n  <tr>\n    <td>On key up</td>\n    <td>\"2\"</td>\n\t<td>This value indicates that the specified Intent should be sent only when the Key transitions from pressed to unpressed.</td>\n  </tr>\n  <tr>\n    <td>On both key down and up</td>\n    <td>\"3\"</td>\n\t<td>This value indicates that the specified Intent should be sent both when the Key transitions from unpressed to pressed and from pressed to unpressed.</td>\n  </tr>\n</table>\n</div>\t\n\n####Intent type\nSettable if: The Action value is \"Remap a key\" *AND* Choose a key to modify is not \"None\" *AND* the Key Behavior is \"Send intent\"\n\nPivotal parm: Yes\n\nDescription: \n\n>This parm allows you to specify how the Intent should be sent as the Key Behavior for the specified Key in the specified Key State Mapping Table.\n\n<div class=\"parm-table\">\n <table class=\"table\">\n\t<tr>\n\t\t<th>Parm Option Name</th>\n\t\t<th>Parm Value</th>\n\t\t<th>Description</th>\n\t</tr>\n  <tr>\n    <td>Start activity</td>\n    <td>\"1\"</td>\n\t<td>This value indicates that the Intent should be sent using Start Activity. This should be used when you want to launch an Activity within an application (to present some UI).</td>\n  </tr>\n  <tr>\n    <td>Broadcast</td>\n    <td>\"2\"</td>\n\t<td>This value indicates that the Intent should be sent using Send Broadcast. This should be used when you want to notify one or more applications (anyone that registers a suitable Broadcast Receiver) and that may invoke an Activity (to present some UI) or a Service (to perform some background processing).</td>\n  </tr>\n</table>\n</div>\t\n\n####Action\nSettable if: The Action value is \"Remap a key\" *AND* Choose a key to modify is not \"None\" *AND* the Key Behavior is \"Send intent\"\n\nPivotal parm: No\n\nParm name:\n\n* For Base Key State Table: BaseIntentAction\n* For Blue Key State Table: BlueIntentAction\n* For Orange Key State Table: OrangeIntentAction\n* For Grey Key State Table: GreyIntentAction\n* For Shift Key State Table: ShiftIntentAction\n* For Control Key State Table: ControlIntentAction\n\nDescription: \n\n>This parm allows you to specify the Action Name attribute for the Intent that will be sent as the Key Behavior for the specified Key in the specified Key State Mapping Table. The Action Name attribute of an Intent generally tells the receiver of the Intent what to do. Specifying an empty (length of zero) value (or the absence of this parm from the XML) will cause no value for this attribute to be set in the Intent. Whether a value for this attribute for a given Intent is required or not will depend on the Intent being sent and the requirements of the application(s) to which the Intent may be sent.\n\nParm value input rules: \n\n* String containing a valid Action Name for the Intent\n\n####Category\nSettable if: The Action value is \"Remap a key\" *AND* Choose a key to modify is not \"None\" *AND* the Key Behavior is \"Send intent\"\n\nPivotal parm: No\n\nParm name:\n\n* For Base Key State Table: BaseIntentCategory\n* For Blue Key State Table: BlueIntentCategory\n* For Orange Key State Table: OrangeIntentCategory\n* For Grey Key State Table: GreyIntentCategory\n* For Shift Key State Table: ShiftIntentCategory\n* For Control Key State Table: ControlIntentCategory\n\nDescription: \n\n>This parm allows you to specify the Category attribute for the Intent that will be sent as the Key Behavior for the specified Key in the specified Key State Mapping Table. The Category attribute of an Intent generally tells the system what types of receivers to send the Intent to. Specifying an empty (length of zero) value (or the absence of this parm from the XML) will cause no value for this attribute to be set in the Intent. Whether a value for this attribute for a given Intent is required or not will depend on the Intent being sent and the requirements of the application(s) to which the Intent may be sent.\n\nParm value input rules: \n\n* String containing a valid category for the Intent\n\n####Package\nSettable if: The Action value is \"Remap a key\" *AND* Choose a key to modify is not \"None\" *AND* the Key Behavior is \"Send intent\" *AND* the Intent Type is \"Start activity\"\n\nPivotal parm: No\n\nParm name:\n\n* For Base Key State Table: BaseIntentPackage\n* For Blue Key State Table: BlueIntentPackage\n* For Orange Key State Table: OrangeIntentPackage\n* For Grey Key State Table: GreyIntentPackage\n* For Shift Key State Table: ShiftIntentPackage\n* For Control Key State Table: ControlIntentPackage\n\nDescription: \n\n>This parm allows you to specify the Package Name attribute for the Intent that will be sent as the Key Behavior for the specified Key in the specified Key State Mapping Table. The Package Name attribute of an Intent generally tells the system exactly which application to send the Intent to. Specifying an empty (length of zero) value (or the absence of this parm from the XML) will cause no value for this attribute to be set in the Intent. Whether a value for this attribute for a given Intent is required or not will depend on the Intent being sent and the requirements of the application(s) to which the Intent may be sent.\n\nParm value input rules: \n\n* String containing a valid Package Name\n\n####Class\nSettable if: The Action value is \"Remap a key\" *AND* Choose a key to modify is not \"None\" *AND* the Key Behavior is \"Send intent\" *AND* the Intent Type is \"Start activity\"\n\nPivotal parm: No\n\nParm name:\n\n* For Base Key State Table: BaseIntentClass\n* For Blue Key State Table: BlueIntentClass\n* For Orange Key State Table: OrangeIntentClass\n* For Grey Key State Table: GreyIntentClass\n* For Shift Key State Table: ShiftIntentClass\n* For Control Key State Table: ControlIntentClass\n\nDescription: \n\n>This parm allows you to specify the Class Name attribute for the Intent that will be sent as the Key Behavior for the specified Key in the specified Key State Mapping Table. The Class Name attribute of an Intent generally tells the system exactly which class within an application to send the Intent to. Specifying an empty (length of zero) value (or the absence of this parm from the XML) will cause no value for this attribute to be set in the Intent. Whether a value for this attribute for a given Intent is required or not will depend on the Intent being sent and the requirements of the application(s) to which the Intent may be sent.\n\nParm value input rules: \n\n* String containing a valid Class Name\n\n####Data URI\nSettable if: The Action value is \"Remap a key\" *AND* Choose a key to modify is not \"None\" *AND* the Key Behavior is \"Send intent\"\n\nPivotal parm: No\n\nParm name:\n\n* For Base Key State Table: BaseIntentUri\n* For Blue Key State Table: BlueIntentUri\n* For Orange Key State Table: OrangeIntentUri\n* For Grey Key State Table: GreyIntentUri\n* For Shift Key State Table: ShiftIntentUri\n* For Control Key State Table: ControlIntentUri\n\nDescription: \n\n>This parm allows you to specify the Data URI attribute for the Intent that will be sent as the Key Behavior for the specified Key in the specified Key State Mapping Table. The Data URI attribute of an Intent generally provides a reference to the data (if any) that should be processed by the application to which the Intent is sent. Specifying an empty (length of zero) value (or the absence of this parm from the XML) will cause no value for this attribute to be set in the Intent. Whether a value for this attribute for a given Intent is required or not will depend on the Intent being sent and the requirements of the application(s) to which the Intent may be sent.\n\nParm value input rules: \n\n* String containing a valid URI value\n\n####MIME type\nSettable if: The Action value is \"Remap a key\" *AND* Choose a key to modify is not \"None\" *AND* the Key Behavior is \"Send intent\"\n\nPivotal parm: No\n\nParm name:\n\n* For Base Key State Table: BaseIntentMimeType\n* For Blue Key State Table: BlueIntentMimeType\n* For Orange Key State Table: OrangeIntentMimeType\n* For Grey Key State Table: GreyIntentMimeType\n* For Shift Key State Table: ShiftIntentMimeType\n* For Control Key State Table: ControlIntentMimeType\n\nDescription: \n\n>This parm allows you to specify the MIME Type attribute for the Intent that will be sent as the Key Behavior for the specified Key in the specified Key State Mapping Table. The MIME Type attribute of an Intent generally provides information about the type of data referenced by the Data URI attribute (if any) that helps qualify the action that should be taken by the application to which the Intent is sent. Specifying an empty (length of zero) value (or the absence of this parm from the XML) will cause no value for this attribute to be set in the Intent. Whether a value for this attribute for a given Intent is required or not will depend on the Intent being sent and the requirements of the application(s) to which the Intent may be sent.\n\nParm value input rules: \n\n* String containing a valid MIME type value\n\n####Extra parameter name\nSettable if: The Action value is \"Remap a key\" *AND* Choose a key to modify is not \"None\" *AND* the Key Behavior is \"Send intent\"\n\nPivotal parm: No\n\nParm name:\n\n* For Base Key State Table: BaseIntentStringExtraName\n* For Blue Key State Table: BlueIntentStringExtraName\n* For Orange Key State Table: OrangeIntentStringExtraName\n* For Grey Key State Table: GreyIntentStringExtraName\n* For Shift Key State Table: ShiftIntentStringExtraName\n* For Control Key State Table: ControlIntentStringExtraName\n\nDescription: \n\n>This parm allows you to specify the Name of an Extra Data attribute for the Intent that will be sent as the Key Behavior for the specified Key in the specified Key State Mapping Table. An Extra Data attribute of an Intent generally provides auxiliary information that helps qualify the action that should be taken on the data by the application to which the Intent is sent. An Extra Data attribute must be specified using both an Extra Name and an Extra Value since both are required to add an Extra Data attribute to an Intent. Specifying an empty (length of zero) value (or the absence of this parm from the XML) will cause no Extra Data attribute to be set in the Intent. Whether an Extra Data attribute for a given Intent is required or not will depend on the Intent being sent and the requirements of the application(s) to which the Intent may be sent.\n\nParm value input rules: \n\n* String containing a valid extra value name\n\n####Extra parameter value\nSettable if: The Action value is \"Remap a key\" *AND* Choose a key to modify is not \"None\" *AND* the Key Behavior is \"Send intent\"\n\nPivotal parm: No\n\nParm name:\n\n* For Base Key State Table: BaseIntentStringExtraValue\n* For Blue Key State Table: BlueIntentStringExtraValue\n* For Orange Key State Table: OrangeIntentStringExtraValue\n* For Grey Key State Table: GreyIntentStringExtraValue\n* For Shift Key State Table: ShiftIntentStringExtraValue\n* For Control Key State Table: ControlIntentStringExtraValue\n\nDescription: \n\n>This parm allows you to specify the Value of an Extra Data attribute for the Intent that will be sent as the Key Behavior for the specified Key in the specified Key State Mapping Table. An Extra Data attribute of an Intent generally provides auxiliary information that helps qualify the action that should be taken on the data by the application to which the Intent is sent. An Extra Data attribute must be specified using both an Extra Name and an Extra Value since both are required to add an Extra Data attribute to an Intent. Specifying an empty (length of zero) value (or the absence of this parm from the XML) will cause no Extra Data attribute to be set in the Intent. Whether an Extra Data attribute for a given Intent is required or not will depend on the Intent being sent and the requirements of the application(s) to which the Intent may be sent.\n\nParm value input rules: \n\n* String containing a valid extra value\n\n####Add key event?\nSettable if: The Action value is \"Remap a key\" *AND* Choose a key to modify is not \"None\" *AND* the Key Behavior is \"Send intent\"\n\nPivotal parm: No\n\nParm name:\n\n* For Base Key State Table: BaseIntentAddKeyState\n* For Blue Key State Table: BlueIntentAddKeyState\n* For Orange Key State Table: OrangeIntentAddKeyState\n* For Grey Key State Table: GreyIntentAddKeyState\n* For Shift Key State Table: ShiftIntentAddKeyState\n* For Control Key State Table: ControlIntentAddKeyState\n\nDescription: \n\n>This parm allows you to choose whether the key event should be added to the Intent that will be sent as the Key Behavior for the specified Key in the specified Key State Mapping Table.\n\n<div class=\"parm-table\">\n <table class=\"table\">\n\t<tr>\n\t\t<th>Parm Option Name</th>\n\t\t<th>Parm Value</th>\n\t\t<th>Description</th>\n\t</tr>\n  <tr>\n    <td>True</td>\n    <td>\"0\"</td>\n\t<td>This value causes Key Event that occurred when the Key was pressed or released to be attached to the Intent. This would generally be valuable only when an application was written specifically to receive such an Intent since it would require the application to understand and interpret the data format used to encode a Key Event.</td>\n  </tr>\n  <tr>\n    <td>False</td>\n    <td>\"1\"</td>\n\t<td>This value causes Key Event that occurred when the Key was pressed or released to not be attached to the Intent.</td>\n  </tr>\n</table>\n</div>\t\n\n####Include additional flags\nSettable if: The Action value is \"Remap a key\" *AND* Choose a key to modify is not \"None\" *AND* the Key Behavior is \"Send intent\"\n\nPivotal parm: No\n\nParm name:\n\n* For Base Key State Table: BaseIntentIncludeFlags\n* For Blue Key State Table: BlueIntentIncludeFlags\n* For Orange Key State Table: OrangeIntentIncludeFlags\n* For Grey Key State Table: GreyIntentIncludeFlags\n* For Shift Key State Table: ShiftIntentIncludeFlags\n* For Control Key State Table: ControlIntentIncludeFlags\n\nDescription: \n\n>This parm allows you to specify the Intent Flags that should be included in the Intent that will be sent as the Key Behavior for the specified Key in the specified Key State Mapping Table. Intent Flags specify information about how an Intent should be processed by the Android system and/or by the application to which the Intent is sent. Specifying an empty (length of zero) value (or the absence of this parm from the XML) will cause no value for this attribute to be set in the Intent.\n\nParm value input rules: \n\n* String containing a valid flag\n\t* The list of valid flags would be the Constant Values, which can be found on this page: http://developer.android.com/reference/android/content/Intent.html\n\t* For example, the value for the FLAG_ACTIVITY_NEW_TASK flag would be \"0x10000000\"\n\t* Also, if more than one flag should be used, the flags will need to be OR'ed together. For example, if you want to use the FLAG_ACTIVITY_NEW_TASK and FLAG_ACTIVITY_SINGLE_TOP flags, their values (\"0x10000000\" and \"0x20000000\") would be OR'ed together to produce the value \"0x30000000\", which would be used as the parm value.\n\n###Application Launch\n\nThese parms allow you to specify the Application Name to launch as the Key Behavior for the specified Key in various Key State Mapping Tables.\n\n####Application name\nSettable if: The Action value is \"Remap a key\" *AND* Choose a key to modify is not \"None\" *AND* the Key Behavior is \"Launch application\"\n\nPivotal parm: No\n\nParm name:\n\n* For Base Key State Table: BaseLaunchActivityName\n* For Blue Key State Table: BlueLaunchActivityName\n* For Orange Key State Table: OrangeLaunchActivityName\n* For Grey Key State Table: GreyLaunchActivityName\n* For Shift Key State Table: ShiftLaunchActivityName\n* For Control Key State Table: ControlLaunchActivityName\n\nDescription: \n\n>This parm allows you to specify the Application Name of the application whose main Activity should be launched as the Key Behavior for the specified Key in various Key State Mapping Tables. The Application Name of an application is separate from the Package Name, although the two could be set the same by the application developer. More commonly, the Application Name is a human readable name that may be displayed on the application title bar and on the App Info section of the System Settings Menu. Using the Application Name to launch an application is generally simpler and friendlier that using the Package Name and Class Name, as would be required when using a more general Intent to launch an application.\n\nParm value input rules: \n\n* String containing a valid Application Name\n\n## Feature Compatibility\n\n<iframe src=\"compare.html#mx=4.3&csp=KeyMappingMgr&os=JB&embed=true\"></iframe> "},{"key":"guide-csp-license","name":" LicenseMgr","md":"# LicenseMgr\n\n## About LicenseMgr\n\n### Overview\n\nSoftware Licensing is a mechanism supported by Zebra Android devices that allows select Software Components to require a suitable Software License to be present on a device in order for those Software Components to be useable on that device. If a Software Component does not require licensing, then the presence or absence of any Software Licenses will have no impact on that Software Component. If a Software Component requires licensing, then the absence of a suitable Software License on a device will limit the full functionality of that Software Component. If a Software Component requires licensing, then applying a suitable Software License to that device will make that Software Component usable on that device and subsequently removing that Software License from that device will limit the full functionality of that Software Component.\n\nSoftware Licenses are acquired from a Zebra Software License Server, are issued as Software License Files, and are associated to specific Software Components through the use of Licensed Feature Names. A given Software License File can only be used to enable use of its associated Licensed Feature Name. A given Software Component could have multiple capabilities, use of each of which could be controlled through separate Licensed Feature Names. Or, a given Software Component could have all of its capabilities controlled through a single Licensed Feature Name.\n\nSoftware Licenses acquired from a Zebra Software License Server may be Individual Device Licenses, with each Software License File tied to a specific device serial number. In such cases, it is necessary to apply the right Software License File to each matching device. Software Licenses acquired from a Zebra Software License Server may also be Enterprise Licenses, issued to all devices owned by a customer instead of to specifically identified devices. In such cases, the same Software License File can be applied to each device owned by that customer.\n\nThe LicenseMgr Feature Type allows you to manage the set of Software Licenses that are present on a device and thereby to control the usability of Software Components that require licensing.\n\n### Main Functionality\n\n* Apply or remove a Software License from a device\n\n##Parameter Notes\n###Specify license action to perform\nPivotal parm: Yes\n\nDescription: \n\n>This parm allows you to specify whether a Software License should be applied or removed from the device.\n\n<div class=\"parm-table\">\n <table class=\"table\">\n\t<tr>\n\t\t<th>Parm Option Name</th>\n\t\t<th>Parm Value</th>\n\t\t<th>Description</th>\n\t</tr>\n  <tr>\n    <td>Do nothing</td>\n    <td>\"\"</td>\n\t<td>This value (or the absence of this parm from the XML) will not cause any changes to the set of Software Licenses that are present on the device.</td>\n  </tr>\n  <tr>\n    <td>Apply</td>\n    <td>\"apply\"</td>\n\t<td>This value will cause a Software License to be applied to the device. Applying a suitable Software License onto a device for a Software Component that requires licensing will make the controlled capability of the associated Software Component usable on that device.</td>\n  </tr>\n  <tr>\n    <td>Remove</td>\n    <td>\"remove\"</td>\n\t<td><p>This value will cause a Software License to be removed from the device. Removing a required Software License from a device for a Software Component that requires licensing make the controlled capability of the associated Software Component unusable on that device.</p><p><b>Note:</b> This will only delete the licence from the private store. The actual license file will still exist on the device and will need to be deleted.</p></td>\n  </tr>\n</table>\n</div>\t\n\n####Specify verification method to use\nSettable if: The \"Specify license action to perform\" is \"Apply\"\n\nPivotal parm: Yes\n\nDescription: \n\n>This parm allows you to specify whether and how the Licensed Feature Name contained within the specified Software License File should be verified.\n\n>**Note:** Verification of the Licensed Feature Name contained within a Software License File is highly recommended since it can help prevent mistakes. When a Software License File is acquired from a Zebra Software License Server, it must be stored in a file and then used via the LicenseMgr Feature Type. The file name to which a Software License File is stored may or may not reflect the Licensed Feature whose use will be enabled by that Software License File. If you intend to apply a Software License for a given Licensed Feature and mistakenly use the wrong Software License File, no error will result so long as the Software License File is contains a valid Software License. But if the Licensed Feature Name contained with the Software License File is not what you intended, then applying that Software License will not result in enabling the use of the Software Component that you intended. By specifying the Licensed Feature Name and indicating that it should be verified, you can catch such a condition. In the event of a mismatch, an error will be returned in the Result XML.\n\n<div class=\"parm-table\">\n <table class=\"table\">\n\t<tr>\n\t\t<th>Parm Option Name</th>\n\t\t<th>Parm Value</th>\n\t\t<th>Description</th>\n\t</tr>\n  <tr>\n    <td>Do not verify feature name</td>\n    <td>\"0\"</td>\n\t<td>This value (or the absence of this parm from the XML) will not cause any verification of the Licensed Feature Name contained within the specified Software License File.</td>\n  </tr>\n  <tr>\n    <td>Verify against a standard feature name</td>\n    <td>\"1\"</td>\n\t<td>This value will cause the Licensed Feature Name contained within the specified Software License File to be verified as matching a specified Standard Licensed Feature Name.</td>\n  </tr>\n  <tr>\n    <td>Verify against a custom feature name</td>\n    <td>\"2\"</td>\n\t<td>This value will cause the Licensed Feature Name contained within the specified Software License File to be verified as matching a specified Custom Licensed Feature Name.</td>\n  </tr>\n</table>\n</div>\t\n\n#####**Specify standard feature name**\nSettable if: The \"Specify license action to perform\" is \"Apply\" *AND* \"Specify verification method to use\" is \"Verify against a standard feature name\"\n\nPivotal parm: No\n\nParm name: VerifyStandardFeatureName\n\nDescription: \n\n>This parm allows you to specify the Standard Licensed Feature Name against which you want to verify the Software License File.\n\n>**Note:** At present, there is only one defined Standard Licensed Feature Name, for SimulScan. Selecting it will avoid the need to enter the exact value of the Licensed Feature Name for SimulScan. In the future, as new Standard Licensed Feature Names are added, the list will be expanded to make those Licensed Feature Names easier to verify. If you acquire a Software License File that is associated with some other Licensed Feature Name, use \"Verify against a custom feature name\" instead so you can enter the specific Licensed Feature Name for the Software License File you acquired.\n\n<div class=\"parm-table\">\n <table class=\"table\">\n\t<tr>\n\t\t<th>Parm Option Name</th>\n\t\t<th>Parm Value</th>\n\t\t<th>Description</th>\n\t</tr>\n  <tr>\n    <td>SimulScan OCR/OMR</td>\n    <td>\"SIMULDC1_0_0\"</td>\n\t<td>This value will cause Licensed Feature Name contained within the Software License File to be verified as matching the Standard Licensed Feature Name of the SimulScan Software Component.</td>\n  </tr>\n</table>\n</div>\t\n\n#####**Enter custom feature name**\nSettable if: The \"Specify license action to perform\" is \"Apply\" *AND* \"Specify verification method to use\" is \"Verify against a custom feature name\"\n\nPivotal parm: No\n\nParm name: VerifyCustomFeatureName\n\nDescription: \n\n>This parm allows you to enter a Custom Licensed Feature Name, which must match exactly the Licensed Feature Name contained within the Software License File acquired from Zebra Software License Server.\n\n>**Note:** You must use this option to verify any Licensed Feature Name that is not contained within the list of Standard Licensed Feature Names. Be careful to enter the exact Licensed Feature Name as acquired from the Zebra Software License Server with identical case and without any additional whitespace or other characters.\n\nParm value input rules: \n\n* String with a valid Custom Licensed Feature Name that was contained within a Software License File acquired from the Zebra Software License Server.\n\n####Specify licensing method\nSettable if: The \"Specify license action to perform\" is \"Apply\"\n\nPivotal parm: Yes\n\nDescription: \n\n>This parm allows you to specify the method that will be used to supply the Software License.\n\n>**Note:** Regardless of the method used to supply the Software License File (Embed or Reference), the supplied Software License File must contain valid contents that were acquired from the Zebra Software License Server. An attempt to apply a Software License File that contains invalid contents will result in an error in the Result XML. In addition, if the Software License File was an Individual Device License, then the device serial number embedded in the Software License File must match the serial number of the device onto which it is being applied. An attempt to apply a Software License File that contains an Individual Device License whose serial number does not match the serial number of the device to which it is being applied will result in an error in the Result XML\n\n<div class=\"parm-table\">\n <table class=\"table\">\n\t<tr>\n\t\t<th>Parm Option Name</th>\n\t\t<th>Parm Value</th>\n\t\t<th>Description</th>\n\t</tr>\n  <tr>\n    <td>Embed the license blob from the license file into the XML</td>\n    <td>\"embed\"</td>\n\t<td><p>This value indicates that the contents of the Software License File will be embedded (Base64 encoded) into the Request XML.</p><p><b>Note:</b> This option has the advantage of making the Request XML self-contained, although it does make the total data size somewhat larger due to the Base64 encoding the Software License File contents. However, this method is recommended because it does not require a license file to be on the device, possibly in a persistant storage location.</p></td>\n  </tr>\n  <tr>\n    <td>Reference a license file already on the mobile device</td>\n    <td>\"reference\"</td>\n\t<td><p>This value indicates that a Software License File, which must be present in the device file system, will be referenced by its path and file name.</p><b>Note:</b> This option requires that the Software License File be transferred to the device file system before the Request XML is submitted and requires that the exact path and file name of the Software License File in the device file system be specified.</p></td>\n  </tr>\n</table>\n</div>\t\n\n#####**License file**\nSettable if: The \"Specify license action to perform\" is \"Apply\" *AND* \"Specify licensing method\" is \"Embed the license blob from the license file into the XML\"\n\nPivotal parm: No\n\nParm name: LicenseBlob\n\nDescription: \n\n>This parm allows you to specify the Software License File whose contents should be embedded in the XML. The contents will be Base64 encoded, and hence will result in increasing the size of the contents by 33%. The Software License encoded within the Request XML will be extracted and applied to the device.\n\nParm value input rules: \n\n* String with a minimum size of 2 characters (minimum required to hold 1 byte of content)\n* The data should be Base64 encoded (4 characters hold 3 bytes of content)\n\n#####**Specify file name and path to the license file**\nSettable if: The \"Specify license action to perform\" is \"Apply\" *AND* \"Specify licensing method\" is \"Reference a license file already on the mobile device\"\n\nPivotal parm: No\n\nParm name: LicensePathAndFileName\n\nDescription: \n\n>This parm allows you to specify the path and file name of a Software License File, which must exist in the device file system. The Software License File must contain the exact contents acquired from the Zebra Software License Server. The Software License contained within the Software License File will be applied to the device.\n\nParm value input rules: \n\n* String with a minimum size of 1 character\n* Must be a valid path and file name identifying a valid Software License File that exists in the device file system\n\n####Specify selection method to use\nSettable if: The \"Specify license action to perform\" is \"Remove\"\n\nPivotal parm: Yes\n\nDescription: \n\n>This parm allows you to specify the method that will be used to specify the Licensed Feature Name that identifies the Software License to be removed from the device.\n\n>**Note:** To be certain that the right Software License is removed from the device, be sure to specify the exact same Licensed Feature Name that was contained within the Software License File when the Software License was applied to the device.\n\n<div class=\"parm-table\">\n <table class=\"table\">\n\t<tr>\n\t\t<th>Parm Option Name</th>\n\t\t<th>Parm Value</th>\n\t\t<th>Description</th>\n\t</tr>\n  <tr>\n    <td>Select using a standard feature name</td>\n    <td>\"1\"</td>\n\t<td>This value indicates that a Standard Licensed Feature Name will be specified to identify the Software License to be removed from the device.</td>\n  </tr>\n  <tr>\n    <td>Select using a custom feature name</td>\n    <td>\"2\"</td>\n\t<td>This value indicates that a Custom Licensed Feature Name will be specified to identify the Software License to be removed from the device.</td>\n  </tr>\n</table>\n</div>\t\n\n#####**Specify standard feature name**\nSettable if: The \"Specify license action to perform\" is \"Remove\" *AND* \"Specify selection method to use\" is \"Select using a standard feature name\"\n\nPivotal parm: No\n\nParm name: SelectStandardFeatureName\n\nDescription: \n\n>This parm allows you to specify the desired Standard Licensed Feature Name that identifies the Software License to be removed from the device.\n\n<div class=\"parm-table\">\n <table class=\"table\">\n\t<tr>\n\t\t<th>Parm Option Name</th>\n\t\t<th>Parm Value</th>\n\t\t<th>Description</th>\n\t</tr>\n  <tr>\n    <td>SimulScan OCR/OMR</td>\n    <td>\"SIMULDC1_0_0\"</td>\n\t<td>This value will cause the Software License for the SimulScan Software Component to be removed from the device.</td>\n  </tr>\n</table>\n</div>\t\n\n#####**Enter custom feature name**\nSettable if: The \"Specify license action to perform\" is \"Remove\" *AND* \"Specify selection method to use\" is \"Select using a custom feature name\"\n\nPivotal parm: No\n\nParm name: SelectCustomFeatureName\n\nDescription: \n\n>This parm allows you to specify a Custom Licensed Feature Name that identifies the Software License to be removed from the device.\n\n>**Note:** Be careful to enter the exact Licensed Feature Name as acquired from the Zebra Software License Server with identical case and without any additional whitespace or other characters.\n\nParm value input rules: \n\n* String with a valid Custom Licensed Feature Name that was contained within a Software License File acquired from the Zebra Software License Server.\n\n## Queries\n\n###Get All Applied Software License Info\n\n####Request XML\n\n\t\t:::XML\n\t\t<wap-provisioningdoc>\n\t\t\t<characteristic-query type=\"LicenseMgr\"/>\n\t\t</wap-provisioningdoc>\n\n####Success Result XML\n\t\t\n\t\t:::XML\n\t\t<wap-provisioningdoc>\n\t\t\t<characteristic type=\"LicenseMgr\" version=\"4.3\" >\n\t\t\t\t<characteristic type=\"ExistingLicense\">\n\t\t\t\t\t<parm name=\"SelectCustomFeatureName\" value=\"SIMULDC1_0_0\"/>\n\t\t\t\t\t<parm name=\"CompanyName\" value=\"CompanyName1\"/>\n\t\t\t\t\t<parm name=\"LicenseType\" value=\"serial\"/>\n\t\t\t\t</characteristic>\n\t\t\t</characteristic>\n\t\t</wap-provisioningdoc>\n\n>**Note:** For the above query Request XML requests information on all Software Licenses that are applied on the device. The Success Result XML shown presupposes that only a single Software License for SimulScan was previously applied to the device. If additional Software Licenses were applied, then additional information would be returned in the Success Result XML. The same Request XML submitted on a device with no Software Licenses applied would return the following Failure Result XML to indicate that there are no Software Licenses applied and hence none that can be queried:\n\t\t\n####Failure Result XML\n\t\t\n\t\t:::XML\n\t\t<wap-provisioningdoc>\n\t\t\t<characteristic type=\"LicenseMgr\" version=\"4.3\" >\n\t\t\t\t<characteristic-error type=\"ExistingLicense\" desc=\"Feature is not licensed\" />\n\t\t\t</characteristic>\n\t\t</wap-provisioningdoc>\n\t\t\n###Get Specific Software License Info\n\n####Request XML\n\t\t\n\t\t:::XML\n\t\t<wap-provisioningdoc>\n\t\t\t<characteristic type=\"LicenseMgr\" >\n\t\t\t\t<characteristic-query type=\"ExistingLicense\">\n\t\t\t\t\t <parm name=\"SelectStandardFeatureName\" value=\"SIMULDC1_0_0\"/>\n\t\t\t\t</characteristic-query>\n\t\t\t</characteristic>\n\t\t</wap-provisioningdoc>\n\n>**Note:** For the above query Request XML, we are explicitly requesting to query just the Software License for the SimulScan Software Component. If that Software License is applied, the Success Result XML will be the same as that shown above for Get All Applied Software Licenses since both queries return only that one Software License. If that Software License is not applied, the Failure Result XML will be the same as that shown above for Get All Applied Software Licenses since both queries indicate that no Software License can be queried. If additional Software Licenses were applied, then this query would return the same Success Result XML since the query requested information about only one specific Software License. In such a case the Success Result XML would be different than that shown above for Get All Applied Software Licenses.\n\n## Feature Compatibility\n\n<iframe src=\"compare.html#mx=4.3&csp=LicenseMgr&os=JB&embed=true\"></iframe> "},{"key":"guide-csp-mx","name":" MX","md":"# MX\n\n## About MX\n\n### Overview\n\nThe MX Feature Type allows you to acquire the version numbers of the MX Management Framework (MXMF) and of the MX CSP itself. Of these two versions, the most likely to be useful is the version of the MXMF, since it is most likely to affect overall capabilities. While the MXMF does not handle the actual details of processing XML (that is left to the CSPs that implement the Feature Types), the MXMF is responsible for some general XML parsing and validation, routing XML to appropriate CSPs, and error handling. As such, over time, bug fixes in the MXMF might be made and knowing the MXMF version might be useful to determine how a given XML Request might be handled. The version of the MX CSP would likely only be relevant in the unlikely event that a bug was fixed related to actually returning the MXMF version.\n\n### Main Functionality\n\n* Query the MXMF version number\n* Query the MX CSP version number\n\n\n##Parameter Notes\n###Version\nParm name: Version\n\nDescription:\n\n>This value returned for this parm is the version number of the MX CSP, which implements the MX Feature Type. As noted earlier, this parm does not tell you what version of the MXMF is present on a device. This parm is present in the Result XML when the Request XML contains a parm-query for this parm.\n\n###MXMF Version\nParm name: MXMFVersion\n\nDescription:\n\n>This value returned for this parm is the version number of the MXMF, which is the main processing point for all XML Requests. As noted earlier, this parm tells you what version of the MXMF is present on a device. This parm is present in the Result XML when the Request XML contains top-level characteristic-query for the MX Feature Type.\n\n## Queries\n###MX Feature Type Version Query\n\nInput\n\n\t:::XML\n\t<wap-provisioningdoc>\n\t\t<characteristic type=\"MX\">\n\t\t\t<parm-query name=\"Version\"/>\n\t\t</characteristic>\n\t</wap-provisioningdoc>\n\nOutput\n\n\t:::XML\n\t<wap-provisioningdoc>\n\t\t<characteristic type=\"MX\" version=\"4.4\">\n\t\t\t<parm name=\"Version\" value=\"4.4.3.6\"/>\n\t\t</characteristic>\n\t</wap-provisioningdoc>\n\n###MXMF Version Query\n\nInput\n\n\t:::XML\n\t<wap-provisioningdoc>\n\t\t<characteristic-query type=\"MX\"/>\n\t</wap-provisioningdoc>\n\t\nOutput\n\n\t:::XML\n\t<wap-provisioningdoc>\n\t\t<characteristic type=\"MX\" version=\"4.4\">\n\t\t\t<parm name=\"MXMFVersion\" value=\"4.4.3.6\"/>\n\t\t</characteristic>\n\t</wap-provisioningdoc>\n\t\n## Feature Compatibility\n\n<iframe src=\"compare.html#mx=4.3&csp=MX&os=JB&embed=true\"></iframe> "},{"key":"guide-csp-persistence","name":" PersistMgr","md":"# PersistMgr\n\n## About PersistMgr\n\n### Overview\n\nIn the context of the MDM Tool Kit and its Feature Types, Persistence is defined as the ability of some configuration performed by a Request XML Document, containing XML created in accordance with one or more Feature Types, to persist across an Enterprise Reset or an OS Update that results in an Enterprise Reset.\n\nOn Zebra Android devices, an Enterprise Reset is the same as a Factory Reset with the exception that the /enterprise partition is preserved (whereas it would be destroyed on a Factory Reset). The purpose of an Enterprise Reset is to return the device to an Enterprise-defined default state, generally as determined by the contents of the /enterprise partition. When using the MDM Tool Kit, an MDM Agent can control the Enterprise-defined default state, and hence what will persist across an Enterprise Reset. This is done by directly controlling which MDM-deployed content is stored in the /enterprise folder, so it will survive an Enterprise Reset, and by controlling which Request XML Documents are persistent.\n\nThe PersistMgr Feature Type allows you to manage the Request XML Documents that are persistent on a device. There are several common use cases for the PersistMgr Feature Type:\n\n* Making an Request XML Document Persistent\n\n\tThis is the most common use case. When submitting an Request XML Document to the MXMF for processing, if a PersistMgr Feature Type is included, the entire Request XML Document can be saved by the PersistMgr to its protected folder under /enterprise. Following an Enterprise Reset, the PersistMgr will resubmit to the MXMS all Request XML Documents that were Persistent at the time the Enterprise Reset occurred. Using the PersistMgr Feature Type, you assign a name and version to the Request XML Document to identify it and an order to control when it is resubmitted, relative to other Request XML Documents that are Persistent. In addition, you can specify whether the Request XML Document should be made Persistent only if there are no errors when it was originally submitted or always, regardless of whether or not there were any errors when it was submitted.\n\n\tFor example, let's assume that you download an APK file to a Persistent location, such as /enterprise/usr/mymdm. Then a Request XML Document is submitted that causes the APK file to be installed and launched. If the Request XML Document that installed and launched the APK file also used the PersistMgr Feature Type to make itself Persistent, then that APK file will become part of the Enterprise-defined default state, and hence would persist across an Enterprise Reset, by virtue of being automatically re-installed and re-launched following the Enterprise Reset.\n\n* Making a Persistent Request XML Document Non-persistent\n\n\tThis use case is used when a Request XML Document was previously made Persistent and you don't want it to be Persistent anymore. If an APK file was made Persistent as described in the prior use case, and you wanted to uninstall that APK file from the device, you might also want that APK file to cease being Persistent on that device. If you simply uninstalled the APK file and did nothing to make it Non-persistent, then the APK file would reappear after the next Enterprise Reset.\n\n\tBy using the PersistMgr Feature Type, you can direct PersistMgr to remove the Request XML Document for a specific name that you previously directed it to save to its protected folder under /enterprise. After a subsequent Enterprise Reset, since that Request XML Document will no longer be present, PersistMgr will no longer resubmit it and hence the APK file will cease to be Persistent. In such a case, you might also choose to remove the APK file from its Persistent location to complete the clean-up and return the device to its state prior to the original installation of the APK.\n\n* Querying which Request XML Documents are Persistent.\n\n\tThis is a less common use case, but one which may be of special interest to MDMs. By using the PersistMgr Feature Type, you can query the names, versions, and order for all Request XML Document that are currently save by PersistMgr in its protected folder under /enterprise. This can be especially useful to determine whether a particular bit of configuration has been made Persistent on a device and, if so, which version. It can also be useful for troubleshooting interactions between multiple Request XML Documents that are Persistent or to get their names so they can be made Non-persistent, if needed.\n\n* Enabling or Disabling a Persistent Request XML Document\n\n\tThis is a less common use case, but one which may be of interest to some MDMs. By using the PersistMgr Feature Type, you can Disable a Persistent Request XML Document or Enable it once it has been Disabled. When a Request XML Document is made Persistent, it is initially Enabled. When a Persistent Request XML Document is Enabled, it is resubmitted to MXMS automatically by PersistMgr, following an Enterprise Reset. If a Persistent Request XML Document is Disabled, it will remain Persistent, but it will not be resubmitted by PersistMgr following an Enterprise Reset.\n\n\tDisabling a Persistent Request XML Document may be a convenient way to temporarily make a Request XML Document Non-persistent without requiring its removal and re-application. It may also be useful when troubleshooting Persistence issues by selecting Disabling and Enabling Request XML Documents and Enterprise Resetting, until the cause of a conflict is discovered.\n\n### Main Functionality\n\n* Make a Request XML Document Persistent\n* Make an existing Persistent Request XML Document Non-persistent\n* Enable or Disable a Persistent Request XML Document\n* Query which Request XML Documents are currently Persistent\n\n##Parameter Notes\n###Persist Action\nPivotal parm: Yes\n\nDescription: \n\n>This parm allows you specify whether to make a Request XML Document Persistent, make a Persistent Request XML Document Non-persistent, or Enable or Disable a Persistent Request XML Document.\n\n<div class=\"parm-table\">\n <table class=\"table\">\n\t<tr>\n\t\t<th>Parm Option Name</th>\n\t\t<th>Parm Value</th>\n\t\t<th>Description</th>\n\t</tr>\n  <tr>\n    <td>Add current XML as a persistent profile</td>\n    <td>\"1\"</td>\n\t<td><p>This value will cause the Request XML Document in which this PersistMgr Feature is contained to be made Persistent. You must specify a Persist As Name and a Persist As Version to identify the Request XML Document. You may also specify a Persist As Order to control when the newly Persisted Request XML Document will be resubmitted relative to other Persistent Request XML Documents.</p><p>There can be at most one Request XML Document Persistent at any one time with a particular Persist As Name. If a Request XML Document is already Persistent with the specified Persist As Name, then it will be replaced by the newly Persisted Request XML Document.</p></td>\n  </tr>\n  <tr>\n    <td>Remove the specified persistent profile</td>\n    <td>\"2\"</td>\n\t<td><p>This value will cause the Persistent Request XML Document, identified by the specified Persist As Name, Persist As Version, and optionally Persist As Order, to be made Non-persistent.</p><p>The combination of the specified values for Persist As Name, Persist As Version and Persist As Order must match an existing Persistent Request XML Document, otherwise an error will be returned in the Result XML.</p></td>\n  </tr>\n  <tr>\n    <td>Enable the specified persistent profile</td>\n    <td>\"3\"</td>\n\t<td><p>This value will cause the Persistent Request XML Document, identified by the specified Persist As Name, Persist As Version, and optionally Persist As Order, to be Enabled.</p><p>The combination of the specified values for Persist As Name, Persist As Version, and Persist As Order must match an existing Persistent Request XML Document, otherwise an error will be returned in the Result XML.</p></td>\n  </tr>\n  <tr>\n    <td>Disable the specified persistent profile</td>\n    <td>\"4\"</td>\n\t<td><p>This value will cause the Persistent Request XML Document, identified by the specified Persist As Name, Persist As Version, and optionally Persist As Order, to be Disabled.</p><p>The combination of the specified values for Persist As Name, Persist As Version and Persist As Order must match an existing Persistent Request XML Document, otherwise an error will be returned in the Result XML.</p></td>\n  </tr>\n</table>\n</div>\t\n\n####Persist As Name\nPivotal parm: No\n\nParm name: PersistAsName\n\nDescription: \n\n>This parm allows you to specify the name to be assigned to a Request XML Document when it is made Persistent and/or to identify a currently existing Persistent Request XML Document that should be operated upon. When identifying a currently existing Persistent Request XML Document, this value is used in conjunction with the values of Persist As Version and Persist As Order (if specified).\n\nParm value input rules: \n\n* String with a minimum size of 1 character and a maximum size of 255 characters\n\n####Persist As Version\nPivotal parm: No\n\nParm name: PersistAsVersion\n\nDescription: \n\n>This parm allows you to specify a version number to be assigned to a Request XML Document when it is made Persistent and/or to help identify a currently existing Persistent Request XML Document that should be operated upon.\n\n>When making a Request XML Document Persistent, this parm will be used to assign a version number to the new Persisted Request XML Document Persistent. If a Persistent Request XML Document already existed with the same Persist As Name, then it will always be replaced by the new Request XML Document.\n\n>When making an existing Persistent Request XML Document Non-persistent or when Enabling or Disabling an existing Persistent Request XML Document, this parm will be used in conjunction with the values of Persist As Name and Persist As Order (if specified). Only if the values of specified parms match will the be operated upon.\n\nParm value input rules: \n\n* String which must contain an integer value from 1 to 10.\n\n####Persist As Order\nPivotal parm: No\n\nParm name: PersistAsOrder\n\nDescription: \n\n>This parm allows you to specify an order in which Request XML Document will be resubmitted relative to other Request XML Documents that are Persistent.\n\n>When making a Request XML Document Persistent, this parm will be used to assign an order to the new Persisted Request XML Document Persistent. If a Persistent Request XML Document already existed with the same Persist As Name, then it will always be replaced by the new Request XML Document.\n\n>When making an existing Persistent Request XML Document Non-persistent or when Enabling or Disabling an existing Persistent Request XML Document, this parm will be used, if it is not empty (length greater than zero) and present in the XML, in conjunction with the values of Persist As Name and Persist As Version. Only if the values of specified parms match will the existing Persistent Request XML Document be operated upon.\n\n>**Note:** When PersistMgr resubmits Persistent Request XML Documents to MXMS after an Enterprise Reset, it always submits those with a lower (numerically less) order before those with a higher (numerically greater) order. PersistMgr will use a value of 99, which is the highest supported order, to resubmit those Persistent Request XML Documents. If two Persistent Request XML Documents have the same effective order, PersistMgr will resubmit them in alphabetical order based on their Persist As Name values.\n\nParm value input rules: \n\n* Integer value with a minimum value of 1 and a maximum value of 99\n\n####Persist If Error?\nSettable if: Persist Action is \"Add current XML as a persistent profile\"\n\nPivotal parm: No\n\nParm name: PersistIfError\n\nDescription: \n\n>This parm allows you to specify whether the Request XML Document in which this PersistMgr Feature is contained should be made Persistent even if errors occur while submitting it.\n\n<div class=\"parm-table\">\n <table class=\"table\">\n\t<tr>\n\t\t<th>Parm Option Name</th>\n\t\t<th>Parm Value</th>\n\t\t<th>Description</th>\n\t</tr>\n  <tr>\n    <td>True</td>\n    <td>\"true\"</td>\n\t<td>This value will cause the Request XML Document in which this PersistMgr Feature is contained to be made Persistent even if top-level characteristic errors are reported in the Result XML returned when the Request XML Document is submitted.</td>\n  </tr>\n  <tr>\n    <td>False</td>\n    <td>\"false\"</td>\n\t<td>This value will cause the Request XML Document in which this PersistMgr Feature is contained to not be made Persistent if any top-level characteristic errors are reported in the Result XML returned when the Request XML Document is submitted.</td>\n  </tr>\n</table>\n</div>\t\n\n##Queries\n\n###Get the List of All of the Persistent Request XML Documents\n\nInput\n\n\t:::XML\n\t<wap-provisioningdoc>\n\t\t<characteristic-query type=\"PersistMgr\"/>\n\t</wap-provisioningdoc>\n\nOutput\n\n\t:::XML\n\t<wap-provisioningdoc>\n\t\t<characteristic type=\"PersistMgr\">\n\t\t\t<parm name=\"PersistAction\" value=\"1\"/>\n\t\t\t<characteristic type=\"persist-details\">\n\t\t\t\t<parm name=\"PersistAsName\" value=\"App-profile\"/>\n\t\t\t\t<parm name=\"PersistAsVersion\" value=\"02\"/>\n\t\t\t\t<parm name=\"PersistAsOrder\" value=\"1\"/>\n\t\t\t\t<parm name=\"PersistIfError\" value=\"true\"/>\n\t\t\t\t<parm name=\"ProfileMethod\" value=\"3\"/>\n\t\t\t</characteristic>\n\t\t</characteristic>\n\t\t<characteristic type=\"PersistMgr\">\n\t\t\t<parm name=\"PersistAction\" value=\"1\"/>\n\t\t\t<characteristic type=\"persist-details\">\n\t\t\t\t<parm name=\"PersistAsName\" value=\"Clock-profile\"/>\n\t\t\t\t<parm name=\"PersistAsVersion\" value=\"01\"/>\n\t\t\t\t<parm name=\"PersistAsOrder\" value=\"3\"/>\n\t\t\t\t<parm name=\"PersistIfError\" value=\"false\"/>\n\t\t\t\t<parm name=\"ProfileMethod\" value=\"3\"/>\n\t\t\t</characteristic>\n\t\t</characteristic>\n\t</wap-provisioningdoc>\n\n###Get the Values for a Specified Persistent Request XML Document\n\nInput\n\n\t:::XML\n\t<wap-provisioningdoc>\n\t\t<characteristic type=\"PersistMgr\">\n\t\t\t<characteristic-query type=\"persist-details\">\n\t\t\t\t<parm name=\"PersistAsName\" value=\"Clock-profile\"/>\n\t\t\t</characteristic-query>\n\t\t</characteristic>\n\t</wap-provisioningdoc>\n\nOutput\n\n\t:::XML\n\t<wap-provisioningdoc>\n\t\t<characteristic type=\"PersistMgr\">\n\t\t\t<parm name=\"PersistAction\" value=\"1\"/>\n\t\t\t<characteristic type=\"persist-details\">\n\t\t\t\t<parm name=\"PersistAsName\" value=\"Clock-profile\"/>\n\t\t\t\t<parm name=\"PersistAsVersion\" value=\"01\"/>\n\t\t\t\t<parm name=\"PersistAsOrder\" value=\"3\"/>\n\t\t\t\t<parm name=\"PersistIfError\" value=\"false\"/>\n\t\t\t\t<parm name=\"ProfileMethod\" value=\"3\"/>\n\t\t\t</characteristic>\n\t\t</characteristic>\n\t</wap-provisioningdoc>\n\n\t\n###Get Persist As Version Value of a Specified Persistent Request XML Document\n\nInput\n\n\t:::XML\n\t<wap-provisioningdoc>\n\t\t<characteristic type=\"PersistMgr\">\n\t\t\t <characteristic type=\"persist-details\">\n\t\t\t\t  <parm name=\"PersistAsName\" value=\"Clock-profile\" /> \n\t\t\t\t  <parm-query name=\"PersistAsVersion\"/> \n\t\t\t  </characteristic>\n\t\t</characteristic>\n\t</wap-provisioningdoc>\n\nOutput\n\n\t:::XML\n\t<wap-provisioningdoc>\n\t\t<characteristic type=\"PersistMgr\" version=\"4.4\">\n\t\t\t<characteristic type=\"persist-details\">\n\t\t\t\t<parm name=\"PersistAsName\" value=\"Clock-profile\"/>\n\t\t\t\t<parm name=\"PersistAsVersion\" value=\"01\"/>\n\t\t\t</characteristic>\n\t\t</characteristic>\n\t</wap-provisioningdoc>\n\n##Example XML\n### Make a Request XML Document Persistent\n\nThis Request XML Document below uses PersistMgr to make itself Persistent.\n\n    :::XML\n\t<wap-provisioningdoc>\n\t\t<characteristic type=\"Clock\" version=\"4.2\">\n\t\t\t<parm name=\"AutoTime\" value=\"true\" /> \n\t\t\t<characteristic type=\"AutoTimeDetails\">\n\t\t\t\t<parm name=\"NTPServer\" value=\"http://time.test.com\" /> \n\t\t\t\t<parm name=\"SyncInterval\" value=\"00:30:00\" /> \n\t\t\t</characteristic>\n\t\t</characteristic>\n\t\t<characteristic type=\"PersistMgr\">\n\t\t\t<parm name=\"PersistAction\" value=\"1\" /> \n\t\t\t<characteristic type=\"persist-details\">\n\t\t\t\t<parm name=\"PersistAsName\" value=\"Clock-profile\" /> \n\t\t\t\t<parm name=\"PersistAsVersion\" value=\"1\" /> \n\t\t\t\t<parm name=\"PersistAsOrder\" value=\"3\"/>\n\t\t\t\t<parm name=\"PersistIfError\" value=\"false\" /> \n\t\t\t</characteristic>\n\t\t</characteristic>\n\t  </wap-provisioningdoc>\n\n### Remove a Persistent Profile\n\nThe Request XML Document below uses PersistMgr to make the Request XML Document that was made Persistent in the previous example, stop being Persistent.\n\n\t:::XML\n\t<wap-provisioningdoc>\n\t\t<characteristic type=\"PersistMgr\" version=\"4.2\" >\n\t\t\t<parm name=\"PersistAction\" value=\"2\"/>\n\t\t\t<characteristic type=\"persist-details\">\n\t\t\t\t<parm name=\"PersistAsName\" value=\"Clock-profile\"/>\n\t\t\t\t<parm name=\"PersistAsVersion\" value=\"1\"/>\n\t\t\t\t<parm name=\"PersistAsOrder\" value=\"3\"/>\n\t\t\t</characteristic>\n\t\t</characteristic>\n\t</wap-provisioningdoc>\n\n### Enable a Persistent Profile\n\nThe Request XML Document below uses PersistMgr to Enable the Request XML Document that was made Persistent in a previous example.\n\n\t:::XML\n\t<wap-provisioningdoc>\n\t\t<characteristic type=\"PersistMgr\" version=\"4.2\" >\n\t\t\t<parm name=\"PersistAction\" value=\"3\"/>\n\t\t\t<characteristic type=\"persist-details\">\n\t\t\t\t<parm name=\"PersistAsName\" value=\"Clock-profile\"/>\n\t\t\t\t<parm name=\"PersistAsVersion\" value=\"1\"/>\n\t\t\t\t<parm name=\"PersistAsOrder\" value=\"3\"/>\n\t\t\t</characteristic>\n\t\t</characteristic>\n\t</wap-provisioningdoc>\n\n### Disable a Persistent Profile\n\nThe Request XML Document below uses PersistMgr to Disable the Request XML Document that was made Persistent in a previous example.\n\n\t:::XML\n\t<wap-provisioningdoc>\n\t\t<characteristic type=\"PersistMgr\" version=\"4.2\" >\n\t\t\t<parm name=\"PersistAction\" value=\"4\"/>\n\t\t\t<characteristic type=\"persist-details\">\n\t\t\t\t<parm name=\"PersistAsName\" value=\"Clock-profile\"/>\n\t\t\t\t<parm name=\"PersistAsVersion\" value=\"1\"/>\n\t\t\t\t<parm name=\"PersistAsOrder\" value=\"3\"/>\n\t\t\t</characteristic>\n\t\t</characteristic>\n\t</wap-provisioningdoc>\n\n## Feature Compatibility\n\n<iframe src=\"compare.html#mx=4.3&csp=PersistMgr&os=JB&embed=true\"></iframe> "},{"key":"guide-csp-power","name":" PowerMgr","md":"# PowerMgr\n\n## About PowerMgr\n\n### Overview\n\nThe PowerMgr Feature Type allows you to perform power-related actions on the device, such as putting it into Sleep mode, rebooting the device, or performing an OS Update. The action will be performed when the configuration is set.\n\nSince this Feature Type only performs actions, there are currently no queries supported other than the ability to query the version of the CSP that implements this Feature Type.\n\n### Main Functionality\n\n* Put the Device to Sleep\n* Reboot the Device\n* Enterprise Reset a Device\n* Factory Reset a Device\n* Wipe a Device\n* Update the OS\n\n##Parameter Notes\n###Reset Action\nPivotal parm: Yes\n\nDescription: \n\n>This parm allows you to choose the power-related action that you wish to perform on the device.\n\n<div class=\"parm-table\">\n <table class=\"table\">\n\t<tr>\n\t\t<th>Parm Option Name</th>\n\t\t<th>Parm Value</th>\n\t\t<th>Description</th>\n\t</tr>\n  <tr>\n    <td>Do Nothing</td>\n    <td>\"0\"</td>\n\t<td>This value (or the absence of this parm from the XML) will not cause any power-related action to be performed on the device.</td>\n  </tr>\n  <tr>\n    <td>Sleep Mode</td>\n    <td>\"1\"</td>\n\t<td>This value will cause the device to be put into Sleep mode. On Android devices, Sleep mode turns off the device display screen and places other subsystems into low power states. Depending on the other device configuration settings, some subsystems (e.g. Wi-Fi or Cellular) may remain on and some applications may continue running while the device is in Sleep mode.</td>\n  </tr>\n  <tr>\n    <td>Reboot</td>\n    <td>\"4\"</td>\n\t<td>This value will cause the Operating System of the device to be rebooted. In Android, this is generally referred to as a Reset or Normal Reset (not to be confused with an Enterprise Reset or a Factory Reset). A Normal Reset generally loses only application state and data that is truly transient and preserves all data that is stored in any device file system.</td>\n  </tr>\n  <tr>\n    <td>Enterprise Reset</td>\n    <td>\"5\"</td>\n\t<td><p>This value will cause an Enterprise Reset to be performed, on the device.  On Zebra Android devices, an Enterprise Reset is the same as a Factory Reset with the exception that the /enterprise partition is preserved (whereas it would be destroyed on a Factory Reset).</p><p>The purpose of an Enterprise Reset is to return the device to an Enterprise-defined default state, generally as determined by the contents of the /enterprise partition.</p><p><b>Note:</b> This action is supported only on Zebra Android devices that are running the Kit Kat version of Android, such as the TC70.  This is because it depends on underlying OS extensions that were not available on Zebra Android devices running the Jelly Bean version of Android.  The same action could be performed using the \"OS Update\" action, if a suitable OS Update ZIP file was obtained and used.</p></td>\n  </tr>\n  <tr>\n    <td>Factory Reset</td>\n    <td>\"6\"</td>\n\t<td><p>This value will cause a Factory Reset to be performed, on the device. On Zebra Android devices, a Factory Reset erases key partitions, including /data, cache, and /enterprise.</p><p>Storage Cards that are implemented using built-in flash memory may or may not be erased, depending on whether they are stored.  For example, a Storage Card implemented within the /data or /enterprise partitions would be erased, whereas a Storage Card implemented via a dedicated partition would not be. A Storage Card implemented via physically removable media (e.g. a Micro SD card) would not be erased.</p><p>The purpose of a Factory Reset is to return the device to a Factory Defined default state. It does do that, because it erases the /enterprise and hence prevents any content that is not erased from being utilized automatically when the device reboots. But since it does not erase all Storage Cards, it may actually not render the device identical to the way it shipped from the factory (when all Storage Cards were empty).</p><p><b>Note:</b> This action is supported only on Zebra Android devices that are running the Kit Kat version of Android, such as the TC70. This is because it depends on underlying OS extensions that were not available on Zebra Android devices running the Jelly Bean version of Android. The same action could be performed using the \"OS Update\" action, if a suitable OS Update ZIP file was obtained and used.</p></td>\n  </tr>\n  <tr>\n    <td>Full Device Wipe</td>\n    <td>\"7\"</td>\n\t<td><p>This value will cause a Full Device Wipe to be performed. On Zebra Android devices, a Full Device Wipe is the same as a Factory Reset except all Storage Cards are also erased.</p><p>The purpose of a Full Device Wipe is to return the device to as close as possible to the identical state it was in when it was shipped from the factory. But since the OS (system) partition may have been updated, via an OS Update, and cannot be returned to its original content, even a Full Device Wipe may not return a device to the identical state it was in when it shipped from the factory ΓÇô only by additionally performing an OS Update to the identical OS version that shipped in the device from the factory could do that. But a Full Device Wipe can be thought of as returning the device to the state it would have been in when it shipped from the factory if it had shipped with the version of the OS that is currently installed on the device.</p><p><b>Note:</b> This action is supported only on Zebra Android devices that are running the Kit Kat version of Android, such as the TC70. This is because it depends on underlying OS extensions that were not available on Zebra Android devices running the Jelly Bean version of Android. The same action could be performed using the \"OS Update\" action, if a suitable OS Update ZIP file was obtained and used.</p></td>\n  </tr>\n  <tr>\n    <td>OS Update</td>\n    <td>\"8\"</td>\n\t<td>This value will cause an OS Update to be performed using a specified OS Update Zip File. An OS Update can completely replace the OS, can patch the OS, or can perform many of the resets discussed above (e.g. Enterprise Reset, Factory Reset, Full Device Wipe) if the right OS Update ZIP file is acquired and utilized.</td>\n  </tr>\n</table>\n</div>\t\n\n####OS Update ZIP File\nSettable if: The Reset Action is \"OS Update\"\n\nPivotal parm: No\n\nParm name: ZipFile\n\nDescription: \n\n>This parm allows you to specify the full path and name of the OS Update ZIP file, which must reside in the device file system at the time the OS Update action is requested.\n\n>**Note:** The specified OS Update file must already exist in a location in the device file system within the device that is suitable for performing OS Updates. The set of locations that can be used for OS Updates is determined based on the following set of rules. Since different devices have different characteristics, the set of locations that meet these rules, and hence the set of locations that can be used for OS Updates will vary by device.\n\n>* In Zebra devices running any version of Android, a location that is not accessible cannot be used for OS Updates. For example, a Storage Card to which access has been blocked, using the SdCardMgr Feature Types, cannot be used for OS Updates. Similarly, a Storage Card that is implemented via physically removable media would not be accessible if there was no media physically present.\n>* In Zebra devices running any version of Android, a location that is encrypted cannot be used for OS Updates. For example, if a Full Storage Card Encryption is enabled for a Storage Card, then no locations on that Storage Card could be used for OS Updates. Similarly, if an Encrypted File System was mounted on a Storage Card, then no locations within that Encrypted File System could be used for OS Updates.\n>* In Zebra devices running any version of Android, a location that cannot be written to by the entity wishing to perform the OS Update cannot be used for OS Updates unless the entity can somehow acquire the permissions necessary to write the OS Update ZIP file to that location.\n>* In Zebra devices running the Jelly Bean version of Android, a Storage Card that is emulated cannot be used for OS Updates. This limitation has been removed from devices running the Kit Kat version of Android.\n\n> To perform an OS Update, an appropriate OS Update ZIP file should be transferred to the device and stored in a suitable location in the device file system. The location to which the OS Update ZIP file is stored must be one of the locations supported for OS Update on that device. Once the OS Update ZIP file is stored in a suitable location in the device file system, the PowerMgr Feature Type can be used to initiate the update.\n\n>**Note:** The path specified to the PowerMgr Feature Type would normally be the same as the path to which the file was written when it was transferred to the device, but it doesn't always need to be the same. There may be multiple paths that can be used to store the file, all of which may cause the file to be stored in the identical location. But not all such paths may work to initiate the OS Update when specified via the PowerMgr Feature Type. So, it is strongly recommended to store the files using one of the paths defined in the following table and then to specify the same path to the PowerMgr Feature Type.\n\n<div class=\"parm-table\">\n <table class=\"table\">\n\t<tr>\n\t\t<th>Device Model</th>\n\t\t<th>Version of Android</th>\n\t\t<th>Location Supported for OS Updates Comments</th>\n\t</tr>\n  <tr>\n    <td>ET1N0</td>\n    <td><p>Jelly Bean</p><p>v02.70.2479</p><p>ET1N0JenRU02702479.zip</p><p>02-4AJ11-2479-0700-00-M1-030215</p></td>\n\t<td> \n\t\t <table class=\"table\">\n\t\t  <tr>\n\t\t\t<td>/sdcard</td>\n\t\t\t<td>Removable Micro SD Card (media must be physically present)</td>\n\t\t  </tr>\n\t\t  <tr>\n\t\t\t<td>/data/tmp</td>\n\t\t\t<td>Internal Data Partition</td>\n\t\t  </tr>\n\t\t  <tr>\n\t\t\t<td>/data/tmp/local</td>\n\t\t\t<td>Internal Data Partition (folder must be created by an entity that does not need system privilege)</td>\n\t\t  </tr>\n\t\t</table>\n\t</td>\n  </tr>\n  <tr>\n    <td>ET1N2</td>\n    <td><p>Jelly Bean</p><p>v02.20.2478</p><p>ET1N2JenRU02202478.zip</p><p>02-4AJ11-2478-0200-00-D1-030215</p></td>\n\t<td> \n\t\t <table class=\"table\">\n\t\t  <tr>\n\t\t\t<td>/sdcard</td>\n\t\t\t<td>Removable Micro SD Card (media must be physically present)</td>\n\t\t  </tr>\n\t\t  <tr>\n\t\t\t<td>/data/tmp</td>\n\t\t\t<td>Internal Data Partition (folder exists and is world writable)</td>\n\t\t  </tr>\n\t\t  <tr>\n\t\t\t<td>/data/tmp/local</td>\n\t\t\t<td>Internal Data Partition (folder must be created by an entity that does not need system privilege)</td>\n\t\t  </tr>\n\t\t</table>\n\t</td>\n  </tr>\n  <tr>\n    <td>MC32</td>\n    <td><p>Jelly Bean</p><p>v00003</p><p>MC32N0JXXXRUEN00003.zip</p><p>00-4AJ11-J-0000-0000-00-M1-112214</p></td>\n\t<td> \n\t\t <table class=\"table\">\n\t\t  <tr>\n\t\t\t<td>/sdcard</td>\n\t\t\t<td>Removable Micro SD Card (media must be physically present)</td>\n\t\t  </tr>\n\t\t  <tr>\n\t\t\t<td>/data/tmp</td>\n\t\t\t<td>Internal Data Partition (folder exists and is world writable)</td>\n\t\t  </tr>\n\t\t  <tr>\n\t\t\t<td>/data/tmp/local</td>\n\t\t\t<td>Internal Data Partition (folder must be created by an entity that does not need system privilege)</td>\n\t\t  </tr>\n\t\t</table>\n\t</td>\n  </tr>\n  <tr>\n    <td>MC40</td>\n    <td><p>Jelly Bean</p><p>v03.09.0514</p><p>M40N0JXXVRUxx30514.zip</p><p>03-4AJ11-J-0900-0016-V0-M1-051415</p></td>\n\t<td> \n\t\t <table class=\"table\">\n\t\t  <tr>\n\t\t\t<td>/sdcard</td>\n\t\t\t<td>Internal Storage Card</td>\n\t\t  </tr>\n\t\t  <tr>\n\t\t\t<td>/data/tmp</td>\n\t\t\t<td>Internal Data Partition (folder exists and is world writable)</td>\n\t\t  </tr>\n\t\t  <tr>\n\t\t\t<td>/data/tmp/local</td>\n\t\t\t<td>Internal Data Partition (folder must be created by an entity that does not need system privilege)</td>\n\t\t  </tr>\n\t\t</table>\n\t</td>\n  </tr>\n  <tr>\n    <td>MC40</td>\n    <td><p>Kit Kat</p><p>v01.12.0720</p><p>M40N0KXXVRUxx10720.zip</p><p>01-12-03-4AJ22-K-V0-M1-072015</p></td>\n\t<td> \n\t\t <table class=\"table\">\n\t\t  <tr>\n\t\t\t<td>/sdcard</td>\n\t\t\t<td>Internal Storage Card</td>\n\t\t  </tr>\n\t\t  <tr>\n\t\t\t<td>/storage/sdcard0</td>\n\t\t\t<td>Internal Storage Card</td>\n\t\t  </tr>\n\t\t  <!--<tr>\n\t\t\t<td>/data/tmp</td>\n\t\t\t<td>Internal Data Partition (folder is not world writable)</td>\n\t\t  </tr>-->\n\t\t  <tr>\n\t\t\t<td>/data/tmp/local</td>\n\t\t\t<td>Internal Data Partition (folder must be created by an entity with system privilege)</td>\n\t\t  </tr>\n\t\t</table>\n\t</td>\n  </tr>\n  <tr>\n    <td>MC67</td>\n    <td><p>Jelly Bean</p><p>v030515</p><p>M67N0JXXVRUEN03055.zip</p><p>01-4AJ11-J-2200-0001-00-M1-030515</p></td>\n\t<td> \n\t\t <table class=\"table\">\n\t\t  <tr>\n\t\t\t<td>/sdcard</td>\n\t\t\t<td>Removable Micro SD Card (media must be physically present)</td>\n\t\t  </tr>\n\t\t  <tr>\n\t\t\t<td>/data/tmp</td>\n\t\t\t<td>Internal Data Partition (folder exists and is world writable)</td>\n\t\t  </tr>\n\t\t  <tr>\n\t\t\t<td>/data/tmp/local</td>\n\t\t\t<td>Internal Data Partition (folder must be created by an entity that does not need system privilege)</td>\n\t\t  </tr>\n\t\t</table>\n\t</td>\n  </tr>\n  <!--\n  <tr>\n    <td>MC92</td>\n    <td><p>Kit Kat TBD</p><p>v??</p></td>\n\t<td> \n\t\t <table class=\"table\">\n\t\t  <tr>\n\t\t\t<td>/sdcard</td>\n\t\t\t<td>Internal Storage Card</td>\n\t\t  </tr>\n\t\t  <tr>\n\t\t\t<td>/storage/sdcard0</td>\n\t\t\t<td>Internal Storage Card</td>\n\t\t  </tr>\n\t\t  <tr>\n\t\t\t<td>/storage/sdcard1</td>\n\t\t\t<td>Removable Micro SD Card (media must be physically present)</td>\n\t\t  </tr>\n\t\t  <tr>\n\t\t\t<td>/data/tmp</td>\n\t\t\t<td>Internal Data Partition (folder is not world writable)</td>\n\t\t  </tr>\n\t\t  <tr>\n\t\t\t<td>/data/tmp/local</td>\n\t\t\t<td>Internal Data Partition (folder must be created by an entity with system privilege)</td>\n\t\t  </tr>\n\t\t</table>\n\t</td>\n  </tr>\n  -->\n  <!--\n  <tr>\n    <td>TC55</td>\n    <td><p>Jelly Bean Non-GMS</p><p>v01.74.00</p><p>T55N0JB0VRUEN17400.zip</p></td>\n\t<td> \n\t\t <table class=\"table\">\n\t  <tr>\n\t\t\t<td>/sdcard</td>\n\t\t\t<td>Internal Storage Card OR Removable Micro SD Card (if media is physically present)</td>\n\t\t  </tr>\n\t      <tr>\n\t\t\t<td>/storage/sdcard0</td>\n\t\t\t<td>Removable Micro SD Card (media must be physically present)</td>\n\t\t  </tr>\n\t   \t <tr>\n\t\t\t<td>/storage/sdcard1</td>\n\t\t\t<td>Internal Storage Card</td>\n\t\t  </tr>\n\t      <tr>\n\t\t\t<td>/data/tmp</td>\n\t\t\t<td>Internal Data Partition (folder exists and is world writable)</td>\n\t\t  </tr>\n\t      <tr>\n\t\t\t<td>/data/tmp/local</td>\n\t\t\t<td>Internal Data Partition (folder must be created by an entity that does not need system privilege)</td>\n\t\t  </tr>\n\t\t</table>\n\t</td>\n  </tr>\n  -->\n  <!--\n  <tr>\n    <td>TC55</td>\n    <td><p>Jelly Bean GMS</p><p>v1.74</p><p>(with or without Enterprise Enabler applied)</p></td>\n\t<td> \n\t\t <table class=\"table\">\n\t\t  <tr>\n\t\t\t<td>/sdcard</td>\n\t\t\t<td>Internal Storage Card OR Removable Micro SD Card (if media is physically present)</td>\n\t\t  </tr>\n\t\t  <tr>\n\t\t\t<td>/storage/sdcard0</td>\n\t\t\t<td>Removable Micro SD Card (media must be physically present)</td>\n\t\t  </tr>\n\t\t  <tr>\n\t\t\t<td>/storage/sdcard1</td>\n\t\t\t<td>Internal Storage Card</td>\n\t\t  </tr>\n\t\t</table>\n\t</td>\n  </tr>\n  -->\n  <!--\n  <tr>\n    <td>TC55</td>\n    <td><p>Jelly Bean GMS</p><p>v1.74</p><p>(without Enterprise Enabler applied)</p></td>\n\t<td> \n\t\t <table class=\"table\">\n\t\t  <tr>\n\t\t\t<td>/data/tmp</td>\n\t\t\t<td>Internal Data Partition (folder is not world writable)</td>\n\t\t  </tr>\n\t\t</table>\n\t</td>\n  </tr>\n  -->\n  <!--\n  <tr>\n    <td>TC55</td>\n    <td><p>Jelly Bean GMS</p><p>v1.74</p><p>(with Enterprise Enabler applied)</p></td>\n\t<td> \n\t\t <table class=\"table\">\n\t\t  <tr>\n\t\t\t<td>/data/tmp</td>\n\t\t\t<td>Internal Data Partition (folder exists and is world writable)</td>\n\t\t  </tr>\n\t\t</table>\n\t</td>\n  </tr>\n  -->\n  <!--\n  <tr>\n    <td>TC55</td>\n    <td><p>Jelly Bean GMS</p><p>v1.74</p><p>(with or without Enterprise Enabler applied)</p></td>\n\t<td> \n\t\t <table class=\"table\">\n\t\t  <tr>\n\t\t\t<td>/data/tmp/local</td>\n\t\t\t<td>Internal Data Partition (folder must be created by an entity that does not need system privilege)</td>\n\t\t  </tr>\n\t\t</table>\n\t</td>\n  </tr>\n  -->\n  <tr>\n    <td>TC55</td>\n    <td><p>Kit Kat GMS</p><p>v2.52.02G.07</p><p>T55N0KXXVRUEN25202G07.zip</p><p>150611-SI-1800EN-02.52.02G.07-23257-4.4.3-user</p></td>\n\t<td> \n\t\t <table class=\"table\">\n\t\t  <tr>\n\t\t\t<td>/sdcard</td>\n\t\t\t<td>Internal Storage Card</td>\n\t\t  </tr>\n\t\t  <tr>\n\t\t\t<td>/storage/sdcard0</td>\n\t\t\t<td>Internal Storage Card</td>\n\t\t  </tr>\n\t\t  <tr>\n\t\t\t<td>/storage/sdcard1</td>\n\t\t\t<td>Removable Micro SD Card (media must be physically present)</td>\n\t\t  </tr>\n\t\t <!--\n\t\t  <tr>\n\t\t\t<td>/data/tmp</td>\n\t\t\t<td>Internal Data Partition (folder is not world writable)</td>\n\t\t  </tr>\n\t\t-->\n\t\t  <tr>\n\t\t\t<td>/data/tmp/local</td>\n\t\t\t<td>Internal Data Partition (folder must be created by an entity with system privilege)</td>\n\t\t  </tr>\n\t\t</table>\n\t</td>\n  </tr>\n  <tr>\n    <td>TC55</td>\n    <td><p>Kit Kat Non-GMS</p><p>v2.52.04</p><p>T55N0KXXVRUEN25202.zip</p><p>150422-AI-1800EN-02.52.02-23257-4.4.4-user</p></td>\n\t<td> \n\t\t <table class=\"table\">\n\t\t  <tr>\n\t\t\t<td>/sdcard</td>\n\t\t\t<td>Internal Storage Card</td>\n\t\t  </tr>\n\t\t  <tr>\n\t\t\t<td>/storage/sdcard0</td>\n\t\t\t<td>Internal Storage Card</td>\n\t\t  </tr>\n\t\t  <tr>\n\t\t\t<td>/storage/sdcard1</td>\n\t\t\t<td>Removable Micro SD Card (media must be physically present)</td>\n\t\t  </tr>\n\t\t <!--\n\t\t  <tr>\n\t\t\t<td>/data/tmp</td>\n\t\t\t<td>Internal Data Partition (folder is not world writable)</td>\n\t\t  </tr>\n\t\t-->\n\t\t  <tr>\n\t\t\t<td>/data/tmp/local</td>\n\t\t\t<td>Internal Data Partition (folder must be created by an entity that does not need system privilege)</td>\n\t\t  </tr>\n\t\t</table>\n\t</td>\n  </tr>\n <!--\n  <tr>\n    <td>TC55</td>\n    <td><p>Kit Kat MR GMS TBD</p><p>v??</p></td>\n\t<td> \n\t\t <table class=\"table\">\n\t\t  <tr>\n\t\t\t<td>/sdcard</td>\n\t\t\t<td>Internal Storage Card</td>\n\t\t  </tr>\n\t\t  <tr>\n\t\t\t<td>/storage/sdcard0</td>\n\t\t\t<td>Internal Storage Card</td>\n\t\t  </tr>\n\t\t  <tr>\n\t\t\t<td>/storage/sdcard1</td>\n\t\t\t<td>Removable Micro SD Card (media must be physically present)</td>\n\t\t  </tr>\n\t\t  <tr>\n\t\t\t<td>/data/tmp</td>\n\t\t\t<td>Internal Data Partition (folder is not world writable)</td>\n\t\t  </tr>\n\t\t  <tr>\n\t\t\t<td>/data/tmp/local</td>\n\t\t\t<td>Internal Data Partition (folder must be created by an entity that does not need system privilege)</td>\n\t\t  </tr>\n\t\t</table>\n\t</td>\n  </tr>\n  -->\n <!--\n  <tr>\n    <td>TC55</td>\n    <td><p>Kit Kat MR Non-GMS TBD</p><p>v??</p></td>\n\t<td> \n\t\t <table class=\"table\">\n\t\t  <tr>\n\t\t\t<td>/sdcard</td>\n\t\t\t<td>Internal Storage Card</td>\n\t\t  </tr>\n\t\t  <tr>\n\t\t\t<td>/storage/sdcard0</td>\n\t\t\t<td>Internal Storage Card</td>\n\t\t  </tr>\n\t\t  <tr>\n\t\t\t<td>/storage/sdcard1</td>\n\t\t\t<td>Removable Micro SD Card (media must be physically present)</td>\n\t\t  </tr>\n\t\t  <tr>\n\t\t\t<td>/data/tmp</td>\n\t\t\t<td>Internal Data Partition (folder is not world writable)</td>\n\t\t  </tr>\n\t\t  <tr>\n\t\t\t<td>/data/tmp/local</td>\n\t\t\t<td>Internal Data Partition (folder exists and is world writable)</td>\n\t\t  </tr>\n\t\t</table>\n\t</td>\n  </tr>\n  -->\n  <tr>\n    <td>TC70</td>\n    <td><p>Kit Kat GA1</p><p>v112414</p><p>T70N0KEXXPUEF11244.zip</p><p>01-23245-K-00-00-00-G1-112414</p></td>\n\t<td> \n\t\t <table class=\"table\">\n\t\t  <tr>\n\t\t\t<td>/sdcard</td>\n\t\t\t<td>Removable Micro SD Card (media must be physically present)</td>\n\t\t  </tr>\n\t\t  <tr>\n\t\t\t<td>/storage/sdcard0</td>\n\t\t\t<td>Removable Micro SD Card (media must be physically present)</td>\n\t\t  </tr>\n\t\t  <tr>\n\t\t\t<td>/storage/sdcard1</td>\n\t\t\t<td>Internal Storage Card</td>\n\t\t  </tr>\n\t\t  <tr>\n\t\t\t<td>/data/tmp</td>\n\t\t\t<td>Internal Data Partition (folder exists and is world writable)</td>\n\t\t  </tr>\n\t\t  <tr>\n\t\t\t<td>/data/tmp/local</td>\n\t\t\t<td>Internal Data Partition (folder must be created by an entity that does not need system privilege)</td>\n\t\t  </tr>\n\t\t</table>\n\t</td>\n  </tr>\n <!--\n  <tr>\n    <td>TC70</td>\n    <td><p>Kit Kat MR TBD</p><p>v??</p></td>\n\t<td> \n\t\t <table class=\"table\">\n\t\t  <tr>\n\t\t\t<td>/sdcard</td>\n\t\t\t<td>Internal Storage Card</td>\n\t\t  </tr>\n\t\t  <tr>\n\t\t\t<td>/storage/sdcard0</td>\n\t\t\t<td>Internal Storage Card </td>\n\t\t  </tr>\n\t\t  <tr>\n\t\t\t<td>/storage/sdcard1</td>\n\t\t\t<td>Removable Micro SD Card (media must be physically present)</td>\n\t\t  </tr>\n\t\t  <tr>\n\t\t\t<td>/data/tmp</td>\n\t\t\t<td>Internal Data Partition (folder is not world writable)</td>\n\t\t  </tr>\n\t\t  <tr>\n\t\t\t<td>/data/tmp/local</td>\n\t\t\t<td>Internal Data Partition (folder must be created by an entity with system privilege)</td>\n\t\t  </tr>\n\t\t</table>\n\t</td>\n  </tr>\n  -->\n  <tr>\n    <td>TC75</td>\n    <td><p>Kit Kat</p><p>v01104</p><p>T75N0KEXXPUEF01104.zip</p><p>01-23257-K-11-04-00-MV</p></td>\n\t<td> \n\t\t <table class=\"table\">\n\t\t  <tr>\n\t\t\t<td>/sdcard</td>\n\t\t\t<td>Internal Storage Card</td>\n\t\t  </tr>\n\t\t  <tr>\n\t\t\t<td>/storage/sdcard0</td>\n\t\t\t<td>Internal Storage Card </td>\n\t\t  </tr>\n\t\t<!--\n\t\t  <tr>\n\t\t\t<td>/storage/sdcard1</td>\n\t\t\t<td>Removable Micro SD Card (media must be physically present)</td>\n\t\t  </tr>\n\t\t-->\n\t\t<!--\n\t\t  <tr>\n\t\t\t<td>/data/tmp</td>\n\t\t\t<td>Internal Data Partition (folder is not world writable)</td>\n\t\t  </tr>\n\t\t-->\n\t\t  <tr>\n\t\t\t<td>/data/tmp/local</td>\n\t\t\t<td>Internal Data Partition (folder must be created by an entity that does not need system privilege)</td>\n\t\t  </tr>\n\t\t</table>\n\t</td>\n  </tr>\n  <!--\n  <tr>\n    <td>TC75</td>\n    <td><p>Kit Kat MR TBD</p><p>v??</p></td>\n\t<td> \n\t\t <table class=\"table\">\n\t\t  <tr>\n\t\t\t<td>/sdcard</td>\n\t\t\t<td>Internal Storage Card</td>\n\t\t  </tr>\n\t\t  <tr>\n\t\t\t<td>/storage/sdcard0</td>\n\t\t\t<td>Internal Storage Card </td>\n\t\t  </tr>\n\t\t  <tr>\n\t\t\t<td>/storage/sdcard1</td>\n\t\t\t<td>Removable Micro SD Card (media must be physically present)</td>\n\t\t  </tr>\n\t\t  <tr>\n\t\t\t<td>/data/tmp</td>\n\t\t\t<td>Internal Data Partition (folder is not world writable)</td>\n\t\t  </tr>\n\t\t  <tr>\n\t\t\t<td>/data/tmp/local</td>\n\t\t\t<td>Internal Data Partition (folder must be created by an entity that does not need system privilege)</td>\n\t\t  </tr>\n\t\t</table>\n\t</td>\n  </tr>\n  -->\n</table>\n</div>\n\n\n\n\n\nParm value input rules: \n\n* String with a minimum size of 1 character and a maximum size of 255 characters\n\n## Example XML\n### Reboot the Device\n\n    :::XML\n\t<wap-provisioningdoc>\n\t    <characteristic type=\"PowerMgr\" version=\"4.2\" >\n\t        <parm name=\"ResetAction\" value=\"4\"/>\n\t    </characteristic>\n\t</wap-provisioningdoc>\n\n### Enterprise Reset the Device\n\n\t:::XML\n\t<wap-provisioningdoc>\n\t\t<characteristic type=\"PowerMgr\" version=\"4.2\" >\n\t\t\t<parm name=\"ResetAction\" value=\"5\"/>\n\t\t</characteristic>\n\t</wap-provisioningdoc>\n\t\n### Factory Reset the Device\n\n    :::XML\n    <wap-provisioningdoc>\n        <characteristic type=\"PowerMgr\" version=\"4.2\" >\n            <parm name=\"ResetAction\" value=\"6\"/>\n        </characteristic>\n    </wap-provisioningdoc>\n\t\n### Full Device Wipe\n\n\t:::XML\n\t<wap-provisioningdoc>\n\t\t<characteristic type=\"PowerMgr\" version=\"4.2\" >\n\t\t\t<parm name=\"ResetAction\" value=\"7\"/>\n\t\t</characteristic>\n\t</wap-provisioningdoc>\n\n### OS Update\n\t:::xml\n\t<wap-provisioningdoc>\n\t\t<characteristic type=\"PowerMgr\" version=\"4.2\" >\n\t\t\t<parm name=\"ResetAction\" value=\"8\"/>\n\t\t\t<characteristic type=\"file-details\">\n\t\t\t\t<parm name=\"ZipFile\" value=\"/sdcard/osupdate.zip\"/>\n\t\t\t</characteristic>\n\t\t</characteristic>\n\t</wap-provisioningdoc>\n\n\n## Feature Compatibility\n\n<iframe src=\"compare.html#mx=4.3&csp=PowerMgr&embed=true\"></iframe> "},{"key":"guide-csp-powerkey","name":" PowerKeyMgr","md":"# PowerKeyMgr\n\n## About PowerKeyMgr\n\n### Overview\n\nZebra Android devices have a menu that is displayed on the device screen when you perform a long press of the Power Key. This menu is called the Power Key Menu and offers the device user the ability to invoke various power-related functions, such as reset (reboot), power off, Airplane Mode, Touch Panel, Safe Mode, etc. The exact set of options that will appear in the Power Key Menu varies based on the capabilities of the device.\n\nThe PowerKeyMgr Feature Type allows you to control whether certain the menu options that are supported on the Power Key Menu for a device will actually appear on the Power Key Menu of the device. This allows you to prevent the device user from using certain supported menu options that may perform operations that are a bit more sensitive and could interfere with the smooth operation of the device.\n\n>**Note:** The PowerKeyMgr Feature Type can be used to prevent access to menu options that are supported on the device and can restore access to menu options to which access was previously prevented, but cannot restore access to menu options that are not supported on that devices.\n\nZebra Android devices support a Screen Lock Timeout, which can be controlled by the DevAdmin Feature Type, that controls how long the device screen must remain off before a screen lock will occur when the display screen is turned back on. When the Power Key is used to turn the device off, as opposed letting the device screen timeout, a screen lock can be required when the display screen is turned back on, even though the timeout did not expire.  The PowerKeyMgr Feature Type allows you to enable or disable this functionality as well as control whether the device user can change this functionality via the in-device System Settings Menu.\n\n\n### Main Functionality\n\n* Allow or prevent use of the following Power Key Menu Options\n\t* Airplane Mode \n\t* Touch Panel\n\t* Safe Mode\n* Allow or prevent use of the Automatic Screen Lock Option in the System Settings Menu\n* Turn On or Off whether a screen lock will always be required when the device screen is turned back on if the device screen was turned off using the Power Key\n\n##Parameter Notes\n###Airplane Mode Power Key Menu Option\nPivotal parm: No\n\nParm name: AirPlaneMode\n\nDescription: \n\n>Turning on Airplane Mode disables all radios, including the cellular radio, the Wi-Fi radio, and the Bluetooth radio. While Airplane Mode is turned off, radios other than the cellular radio can be turned back on individually. Turning off Airplane Mode turns on the cellular radio, but does not change the state of other radios.\n\n>This parm allows you to select whether or not the Airplane Mode menu option should be shown on the Power Key Menu.\n\n<div class=\"parm-table\">\n <table class=\"table\">\n\t<tr>\n\t\t<th>Parm Option Name</th>\n\t\t<th>Parm Value</th>\n\t\t<th>Description</th>\n\t</tr>\n  <tr>\n    <td>Do not change</td>\n    <td>\"0\"</td>\n\t<td>This value (or the absence of this parm from the XML) will cause no changes to whether or not the Airplane Mode menu option appears on the Power Key Menu.</td>\n  </tr>\n  <tr>\n    <td>Show Menu Option</td>\n    <td>\"1\"</td>\n\t<td>This value will cause the Airplane Mode Option to be shown in the Power Key Menu, if the Power Key Menu for the device supports this menu option.</td>\n  </tr>\n  <tr>\n    <td>Do not show Menu Option</td>\n    <td>\"2\"</td>\n\t<td>This value will cause the Airplane Mode menu option to not be shown in the Power Key Menu.</td>\n  </tr>\n</table>\n</div>\t\n\n###Touch Panel Power Key Menu Option\nPivotal parm: No\n\nParm name: TouchPanel\n\nDescription: \n\n>Some Zebra Android devices provide the ability to turn the Touch Panel on and off from the Power Key Menu. Turning off the Touch Panel could be useful in situations where the device screen may come in contact with foreign objects, to prevent inadvertent activation of functions via the Touch Panel.\n\n>This parm allows you to select whether or not the Touch Panel menu option should be shown on the Power Key Menu.\n\n<div class=\"parm-table\">\n <table class=\"table\">\n\t<tr>\n\t\t<th>Parm Option Name</th>\n\t\t<th>Parm Value</th>\n\t\t<th>Description</th>\n\t</tr>\n  <tr>\n    <td>Do not change</td>\n    <td>\"0\"</td>\n\t<td>This value (or the absence of this parm from the XML) will cause no changes to whether or not the Touch Panel menu option appears on the Power Key Menu.</td>\n  </tr>\n  <tr>\n    <td>Show Menu Option</td>\n    <td>\"1\"</td>\n\t<td>This value will cause the Touch Panel menu option to be shown in the Power Key Menu, if the Power Key Menu for the device supports this menu option.</td>\n  </tr>\n  <tr>\n    <td>Do not show Menu Option</td>\n    <td>\"2\"</td>\n\t<td>This value will cause the Touch Panel menu option to not be shown in the Power Key Menu.</td>\n  </tr>\n</table>\n</div>\t\n\n###Safe Mode Power Key Menu Option\nPivotal parm: No\n\nParm name: SafeMode\n\nDescription: \n\n>Some Zebra Android devices provide the ability to boot into a Safe Mode. Safe Mode is typically used to perform troubleshooting operations that might be impeded by certain applications or services that would normally start when booting the device normally. Since booting into Safe Mode could render the operation of the device insecure and likely would impact the ability of the device to perform its production functions, it may be desirable to prevent device users from booting into Safe Mode under normal circumstances.\n\n>This parm allows you to select whether or not the Safe Mode menu option should be shown on the Power Key Menu.\n\n<div class=\"parm-table\">\n <table class=\"table\">\n\t<tr>\n\t\t<th>Parm Option Name</th>\n\t\t<th>Parm Value</th>\n\t\t<th>Description</th>\n\t</tr>\n  <tr>\n    <td>Do not change</td>\n    <td>\"0\"</td>\n\t<td>This value (or the absence of this parm from the XML) will cause no changes to whether or not the Safe Mode menu option appears on the Power Key Menu.</td>\n  </tr>\n  <tr>\n    <td>Show Menu Option</td>\n    <td>\"1\"</td>\n\t<td>This value will cause the Safe Mode menu option to be shown in the Power Key Menu, if the Power Key Menu for the device supports this menu option.</td>\n  </tr>\n  <tr>\n    <td>Do not show Menu Option</td>\n    <td>\"2\"</td>\n\t<td>This value will cause the Safe Mode menu option to not be shown in the Power Key Menu.</td>\n  </tr>\n</table>\n</div>\t\n\n###Automatic Screen Lock on Power Key Option\nPivotal parm: No\n\nParm name: AutoScreenLockOption\n\nDescription: \n\n>This parm allows you to select whether the device user will be allowed to access the option in the System Settings Menu that can be used to Turn On or Off whether a screen lock will always be required when the device screen is turned back on if the device screen was turned off using the Power Key.\n\n<div class=\"parm-table\">\n <table class=\"table\">\n\t<tr>\n\t\t<th>Parm Option Name</th>\n\t\t<th>Parm Value</th>\n\t\t<th>Description</th>\n\t</tr>\n  <tr>\n    <td>Do not change</td>\n    <td>\"0\"</td>\n\t<td>This value (or the absence of this parm from the XML) will not cause any change to whether or not the device user will be allowed to access the option in the System Settings Menu that can be used to Turn On or Off whether a screen lock will always be required when the device screen is turned back on if the device screen was turned off using the Power Key.</td>\n  </tr>\n  <tr>\n    <td>Show option</td>\n    <td>\"1\"</td>\n\t<td>This value will cause the device user to be allowed to access the option in the System Settings Menu that can be used to Turn On or Off whether a screen lock will always be required when the device screen is turned back on if the device screen was turned off using the Power Key.</td>\n  </tr>\n  <tr>\n    <td>Do not show option</td>\n    <td>\"2\"</td>\n\t<td>This value will cause the device user to be prevented from accessing the option in the System Settings Menu that can be used to Turn On or Off whether a screen lock will always be required when the device screen is turned back on if the device screen was turned off using the Power Key.</td>\n  </tr>\n</table>\n</div>\t\n\n###Automatic Screen Lock on Power Key State\nPivotal parm: No\n\nParm name: AutoScreenLockState\n\nDescription: \n\n>This parm allows you to select whether a screen lock will always be required when the device screen is turned back on if the device screen was turned off using the Power Key.\n\n<div class=\"parm-table\">\n <table class=\"table\">\n\t<tr>\n\t\t<th>Parm Option Name</th>\n\t\t<th>Parm Value</th>\n\t\t<th>Description</th>\n\t</tr>\n  <tr>\n    <td>Do not change</td>\n    <td>\"0\"</td>\n\t<td>This value (or the absence of this parm from the XML) will not cause any change to whether or not a screen lock will always be required when the device screen is turned back on if the device screen was turned off using the Power Key.</td>\n  </tr>\n  <tr>\n    <td>Turn on</td>\n    <td>\"1\"</td>\n\t<td>This value will cause a screen lock to always be required when the device screen is turned back on if the device screen was turned off using the Power Key.</td>\n  </tr>\n  <tr>\n    <td>Turn Off</td>\n    <td>\"2\"</td>\n\t<td>This value will cause a screen lock to not be required when the device screen is turned back on unless the device screen was off for at least the Screen Lock Timeout, even if the device screen was turned off using the Power Key.</td>\n  </tr>\n</table>\n</div>\t\n\n## Queries\n\n### Get Air Plane Mode \n\n#### Input \n\n    :::XML\n    <wap-provisioningdoc>\n        <characteristic type=\"PowerKeyMgr\" >\n            <parm-query name=\"AirPlaneMode\"/>\n        </characteristic>\n    </wap-provisioningdoc>\n\n#### Output\n\n    :::XML\n    <wap-provisioningdoc>\n        <characteristic type=\"PowerKeyMgr\" version=\"4.3\" >\n            <parm name=\"AirPlaneMode\" value=\"1\"/>\n        </characteristic>\n    </wap-provisioningdoc>\n\n### Get Touch Panel\n\n#### Input \n\n    :::XML\n    <wap-provisioningdoc>\n        <characteristic type=\"PowerKeyMgr\" >\n            <parm-query name=\"TouchPanel\"/>\n        </characteristic>\n    </wap-provisioningdoc>\n\n#### Output\n\n    :::XML\n    <wap-provisioningdoc>\n        <characteristic type=\"PowerKeyMgr\" version=\"4.3\" >\n            <parm name=\"TouchPanel\" value=\"1\"/>\n        </characteristic>\n    </wap-provisioningdoc>\n\n### Get Safe Mode\n\n#### Input \n\n    :::XML\n    <wap-provisioningdoc>\n        <characteristic type=\"PowerKeyMgr\" >\n            <parm-query name=\"SafeMode\"/>\n        </characteristic>\n    </wap-provisioningdoc>\n\n#### Output\n\n    :::XML\n    <wap-provisioningdoc>\n        <characteristic type=\"PowerKeyMgr\" version=\"4.3\" >\n            <parm name=\"SafeMode\" value=\"1\"/>\n        </characteristic>\n    </wap-provisioningdoc>\n\n### Get Auto Screen Lock Option\n\n#### Input \n\n    :::XML\n    <wap-provisioningdoc>\n        <characteristic type=\"PowerKeyMgr\" >\n            <parm-query name=\"AutoScreenLockOption\"/>\n        </characteristic>\n    </wap-provisioningdoc>\n\n#### Output\n\n    :::XML\n    <wap-provisioningdoc>\n        <characteristic type=\"PowerKeyMgr\" version=\"4.3\" >\n            <parm name=\"AutoScreenLockOption\" value=\"1\"/>\n        </characteristic>\n    </wap-provisioningdoc>\n\n### Get Auto Screen Lock State\n\n#### Input \n\n    :::XML\n    <wap-provisioningdoc>\n        <characteristic type=\"PowerKeyMgr\" >\n            <parm-query name=\"AutoScreenLockState\"/>\n        </characteristic>\n    </wap-provisioningdoc>\n\n#### Output\n\n    :::XML\n    <wap-provisioningdoc>\n        <characteristic type=\"PowerKeyMgr\" version=\"4.3\" >\n            <parm name=\"AutoScreenLockState\" value=\"1\"/>\n        </characteristic>\n    </wap-provisioningdoc>\n\n\n## Feature Compatibility\n\n<iframe src=\"compare.html#mx=4.3&csp=PowerKeyMgr&os=JB&embed=true\"></iframe> "},{"key":"guide-csp-proxy","name":" ProxyMgr","md":"# ProxyMgr\n\n## About ProxyMgr\n\n### Overview\n\n\n\n### Main Functionality\n\n* [List]\n\n\n## Feature Compatibility\n\n<iframe src=\"compare.html#mx=4.3&csp=ProxyMgr&os=JB&embed=true\"></iframe> "},{"key":"guide-csp-sdcard","name":" SdCardMgr","md":"# SdCardMgr\n\n## About SdCardMgr\n\n### Overview\n\nZebra Android devices may have one or more storage areas that are collectively referred to as External Storage and individually as Storage Cards. Some devices support a special Storage Card that is implemented via a physically removable media (e.g. a Micro SD Card), whereas others do not. Most Zebra Android devices also implement at least one Storage Card that is simulated using flash memory that is built-into (not removable from) the device.\n\nWhen a device supports physically removable media, it may be important to control whether the Storage Card implemented by that physically removable media is allowed to be used. For example, removable media could provide a path via which unwanted software could be loaded onto the device or via which sensitive data could be extracted from the device. Disallowing the use of physically removable media could significantly increase device security by ensuring that such media cannot be used as a path to perform such activities.\n\nAll Zebra Android devices support the path \"/sdcard\", which is logically mapped to one of the supported Storage Cards. Most Zebra Android devices also support one or more paths under \"/storage\", such as \"/storage/sdcard0\" and /storage/sdcard1\", to access all supported Storage Cards. The path \"/sdcard\" will generally be a logical link to one of the paths under \"/storage\" corresponding to one of the supported Storage Cards.\n\n**Note:** Various Zebra Android devices support different numbers and types of Storage Cards and the exact path via which an application can access a particular Storage Card will vary by device. Variation is greatest amongst devices that are running the Jelly Bean version of Android and between those devices and devices that are running the Kit Kat version of Android. Variations are considerably less amongst devices that are running the Kit Kat version of Android, although some variations still exist due to differences in core device capabilities (e.g. presence of lack of a physical card slot or total amount of available built-in flash memory).\n\nThe SdCardMgr Feature Type allows you to control whether one specific External Storage on the device can be used. The Storage Card affected by the SdCardMgr Feature Type varies by device. On devices that support physically removable media, such as the TC55, the SdCardMgr Feature Type will always control access to the Storage Card that is implemented by physically removable media, whether or not such media is physically present. On devices that do not support physically removable media, such as the MC40, the SdCardMgr Feature Type will control access to the Primary Storage Card.\n\n**Note:** Since the primary use case for the SdCardMgr Feature Type is to control the security risks associated with physically removable media, the SdCardMgr Feature Type offers significantly less value on devices that do not support physically removable media than it offers on devices that do support physically removable media. In fact, it may be hard to come up with a significant use case for using the SdCardMgr Feature Type on devices that do not support physically removable media, since it may not significantly enhance device security.  Nonetheless, it is provided for completeness.\n\nThere may be many ways in which a Storage Card can be accessed. A Storage Card might be access via built-in privileged System applications, via installed unprivileged applications, or from a PC using a MTP or ADB over USB. A Storage Card might also be encrypted or have one or more encrypted file systems stored on it (see the EncryptMgr Feature Type).  But, if access to a Storage Card is disabled using the SdCardMgr Feature Type, then all access to that Storage Card, even by built-in privileged System applications, will be blocked, with no exceptions, until access is re-enabled again using the SdCardMgr Feature Type.\n\n### Main Functionality\n\n* Enable or Disable the usage of the single Storage Card supported on a given device\n\n##Parameter Notes\n###Enable or Disable use of SdCard\nPivotal parm: No\n\nParm name: SdCardUsage\n\nDescription: \n\n>This parm will allow you to control the Storage Card that is selected to support this feature on a given device. On devices that support physically removable media, that Storage Card will always be the one implemented by physically removable media. When disabled, the affected Storage Card will be completely inaccessible, to the device user and to all applications running on the device. When enabled, access to the Storage Card will not be blocked.\n\n>**Note:** Just because access to a Storage Card is not blocked, the Storage Card may or may not be accessible. For example, if the Storage Card is implemented by physically removable media and there is no media in the slot, then the Storage Card would not be accessible even though access to the Storage Card was enabled. Or, if the Storage Card was encrypted, and the Named Key was removed from the Key Storage Database (see the EncryptMgr Feature Type), the Storage Card would not be accessible even though it was present and not blocked.\n\n<div class=\"parm-table\">\n <table class=\"table\">\n\t<tr>\n\t\t<th>Parm Option Name</th>\n\t\t<th>Parm Value</th>\n\t\t<th>Description</th>\n\t</tr>\n  <tr>\n    <td>Do not change</td>\n    <td>\"0\"</td>\n\t<td>This value (or the absence of this parm from the XML) will cause no changes to whether access to a Storage Card will be blocked.</td>\n  </tr>\n  <tr>\n    <td>Enable</td>\n    <td>\"1\"</td>\n\t<td>This value will cause access to the Storage Card that is selected to support this feature on a given device to be blocked, thus preventing its use.</td>\n  </tr>\n  <tr>\n    <td>Disable</td>\n    <td>\"2\"</td>\n\t<td>This value will cause access to the Storage Card that is selected to support this feature on a given device to be unblocked, thus allowing it to be accessed, if no other circumstances prevent such access.</td>\n  </tr>\n</table>\n</div>\t\n\n## Example XML\n###Enable SD Card\n\t:::xml\n\t<wap-provisioningdoc>\n\t\t<characteristic type=\"SdCardMgr\" version=\"4.3\" >\n\t\t\t<parm name=\"SdCardUsage\" value=\"1\"/>\n\t\t</characteristic>\n\t</wap-provisioningdoc>\n\n## Queries\n\n### Get is SD Card Usage Allowed\n\n#### Input \n\n    :::XML\n    <wap-provisioningdoc>\n        <characteristic type=\"SdCardMgr\" >\n            <parm-query name=\"SdCardUsage\"/>\n        </characteristic>\n    </wap-provisioningdoc>\n\n#### Output\n\n    :::XML\n    <wap-provisioningdoc>\n        <characteristic type=\"SdCardMgr\" version=\"4.3\" >\n            <parm name=\"SdCardUsage\" value=\"1\"/>\n        </characteristic>\n    </wap-provisioningdoc>\n\n## Feature Compatibility\n\n<iframe src=\"compare.html#mx=4.3&csp=SdCardMgr&os=JB&embed=true\"></iframe> \n\n"},{"key":"guide-csp-settings","name":" SettingsMgr","md":"# SettingsMgr\n\n## About SettingsMgr\n\n### Overview\n\nSettingsMgr Feature Type allows you to manage the Settings UI options by allowing you to change what settings are allowed to be configured through this UI.\n\n### Main Functionality\n\n* Enable or Disable the Ability to Perform an Enterprise Reset from the Settings UI\n* Enable or Disable the Ability to turn Wi-Fi on or off from the Settings UI\n* Enable or Disable the Ability to turn Install Apps from Unknown Sources on or off from the Settings UI\n* Enable or Disable the Ability to to turn Airplane Mode on or off from the Settings UI\n* Enable of Disable the Ability to access the \"Apps\" section in the Settings UI\n\n##Parameter Notes\n###Ability to invoke Enterprise Reset in Settings UI\nPivotal parm: No\n\nParm name: InvokeEnterpriseReset\n\nDescription: \n\n>This parm allows you to specify whether or not the ability to invoke Enterprise Reset in Settings UI will be allowed. If an Enterprise Reset is performed, this would clear the data and cache partitions, but also preserve the contents of the Enterprise partition on the device.\n\n<div class=\"parm-table\">\n <table class=\"table\">\n\t<tr>\n\t\t<th>Parm Option Name</th>\n\t\t<th>Parm Value</th>\n\t\t<th>Description</th>\n\t</tr>\n  <tr>\n    <td>Do not change</td>\n    <td>\"0\"</td>\n\t<td>This value (or the absence of this parm from the XML) will cause no changes to whether or not an Enterprise Reset can be invoked from the Settings UI.</td>\n  </tr>\n  <tr>\n    <td>Enable</td>\n    <td>\"1\"</td>\n\t<td>This value will cause the ability to invoke Enterprise Reset in Settings UI to be allowed.</td>\n  </tr>\n  <tr>\n    <td>Disable</td>\n    <td>\"2\"</td>\n\t<td>This value will cause the ability to invoke Enterprise Reset in Settings UI to not be allowed, preventing the user from performing this action from the Settings UI. However, an Enterprise Reset can still be invoked by a System application which uses the OSX API. This also does not prevent the user from using the Enterprise Reset ZIP folder to invoke an Enterprise Reset when the device is in recovery mode.</td>\n  </tr>\n</table>\n</div>\t\n\n###Ability to Turn Wifi On/Off in Settings UI\nPivotal parm: No\n\nParm name: WifiSettingsUI\n\nDescription: \n\n>This parm allows you to specify whether or not the ability to turn Wi-Fi on or off in Settings UI will be allowed.\n\n<div class=\"parm-table\">\n <table class=\"table\">\n\t<tr>\n\t\t<th>Parm Option Name</th>\n\t\t<th>Parm Value</th>\n\t\t<th>Description</th>\n\t</tr>\n  <tr>\n    <td>Do not change</td>\n    <td>\"0\"</td>\n\t<td>This value (or the absence of this parm from the XML) will cause no changes to whether or not an Wi-Fi can be turned on or off from the Settings UI.</td>\n  </tr>\n  <tr>\n    <td>Enable</td>\n    <td>\"1\"</td>\n\t<td>This value will cause the ability to turn Wi-Fi on or off from the Settings UI to be allowed.</td>\n  </tr>\n  <tr>\n    <td>Disable</td>\n    <td>\"2\"</td>\n\t<td>This value will cause the ability to turn Wi-Fi on or off from the Settings UI to not be allowed, preventing the user from changing the state of Wi-Fi from the Settings UI. This only blocks the user from making this change from the UI level and does not prevent the Wi-Fi status from being changed silently.</td>\n  </tr>\n</table>\n</div>\t\n\n###Ability to Turn UnknownSources On/Off in Settings UI\nPivotal parm: No\n\nParm name: UnknownSources\n\nDescription: \n\n>This parm allows you to specify whether or not the ability to Turn Unknown Sources on or off in Settings UI will be allowed. Turning the Unknown Sources option on or off would allow or disallow an application to be installed on the device if it is from an unknown source. \n\n<div class=\"parm-table\">\n <table class=\"table\">\n\t<tr>\n\t\t<th>Parm Option Name</th>\n\t\t<th>Parm Value</th>\n\t\t<th>Description</th>\n\t</tr>\n  <tr>\n    <td>Do not change</td>\n    <td>\"0\"</td>\n\t<td>This value (or the absence of this parm from the XML) will cause no changes to whether or not Unknown Sources can be turned on or off from the Settings UI.</td>\n  </tr>\n  <tr>\n    <td>Enable</td>\n    <td>\"1\"</td>\n\t<td>This value will cause the ability to turn Unknown Sources on or off from the Settings UI to be allowed.</td>\n  </tr>\n  <tr>\n    <td>Disable</td>\n    <td>\"2\"</td>\n\t<td>This value will cause the ability to turn Unknown Sources on or off from the Settings UI to not be allowed, preventing the user from changing the state of Unknown Sources from the Settings UI. This only blocks the user from making this change from the UI level and does not prevent the Unknown Sources status from being changed silently.</td>\n  </tr>\n</table>\n</div>\t\n\n###Ability to Turn Airplane Mode On/Off in Settings UI \n\nPivotal parm: No\n\nParm name: AirplaneMode\n\nDescription: \n\n>This parm allows you to specify whether or not the ability to Turn Airplane Mode on or off in Settings UI will be allowed. If the user turns on Airplane Mode, the device's cellular radio, Wi-Fi and Bluetooth are disabled.\n\n<div class=\"parm-table\">\n <table class=\"table\">\n\t<tr>\n\t\t<th>Parm Option Name</th>\n\t\t<th>Parm Value</th>\n\t\t<th>Description</th>\n\t</tr>\n  <tr>\n    <td>Do not change</td>\n    <td>\"0\"</td>\n\t<td>This value (or the absence of this parm from the XML) will cause no changes to whether or not Airplane Mode can be turned on or off from the Settings UI.</td>\n  </tr>\n  <tr>\n    <td>Enable</td>\n    <td>\"1\"</td>\n\t<td>This value will cause the ability to turn Airplane Mode on or off from the Settings UI to be allowed.</td>\n  </tr>\n  <tr>\n    <td>Disable</td>\n    <td>\"2\"</td>\n\t<td>This value will cause the ability to turn Airplane Mode on or off from the Settings UI to not be allowed, preventing the user from changing the state of Airplane Mode from the Settings UI. This only blocks the user from making this change from the UI level and does not prevent the Airplane Mode status from being changed silently.</td>\n  </tr>\n</table>\n</div>\t\n\n###Ability to Access Apps Section in Settings UI\nPivotal parm: No\n\nParm name: AccessAppsSection\n\nDescription: \n\n>This parm allows you to specify whether or not the ability to access the \"Apps\" section in Settings UI will be allowed.\n\n<div class=\"parm-table\">\n <table class=\"table\">\n\t<tr>\n\t\t<th>Parm Option Name</th>\n\t\t<th>Parm Value</th>\n\t\t<th>Description</th>\n\t</tr>\n  <tr>\n    <td>Do not change</td>\n    <td>\"0\"</td>\n\t<td>This value (or the absence of this parm from the XML) will cause no changes to whether or not the \"Apps\" section can be accessed in the Settings UI.</td>\n  </tr>\n  <tr>\n    <td>Enable</td>\n    <td>\"1\"</td>\n\t<td>This value will cause the ability to access the \"Apps\" section in the Settings UI to be allowed.</td>\n  </tr>\n  <tr>\n    <td>Disable</td>\n    <td>\"2\"</td>\n\t<td>This value will cause the ability to access the \"Apps\" section in the Settings UI to not be allowed.</td>\n  </tr>\n</table>\n</div>\t\n\n## Queries\n\n### Get is Invoke Enterprise Reset Available\n\n#### Input \n\n    :::XML\n    <wap-provisioningdoc>\n        <characteristic type=\"SettingsMgr\" >\n            <parm-query name=\"InvokeEnterpriseReset\"/>\n        </characteristic>\n    </wap-provisioningdoc>\n\n#### Output\n\n    :::XML\n    <wap-provisioningdoc>\n        <characteristic type=\"SettingsMgr\" version=\"4.3\" >\n            <parm name=\"InvokeEnterpriseReset\" value=\"1\"/>\n        </characteristic>\n    </wap-provisioningdoc>\n\n### Get is Wifi Settings UI Available\n\n#### Input \n\n    :::XML\n    <wap-provisioningdoc>\n        <characteristic type=\"SettingsMgr\" >\n            <parm-query name=\"WifiSettingsUI\"/>\n        </characteristic>\n    </wap-provisioningdoc>\n\n#### Output\n\n    :::XML\n    <wap-provisioningdoc>\n        <characteristic type=\"SettingsMgr\" version=\"4.3\" >\n            <parm name=\"WifiSettingsUI\" value=\"1\"/>\n        </characteristic>\n    </wap-provisioningdoc>\n\n### Get is Unknown Sources Available \n\n#### Input \n\n    :::XML\n    <wap-provisioningdoc>\n        <characteristic type=\"SettingsMgr\" >\n            <parm-query name=\"UnknownSources\"/>\n        </characteristic>\n    </wap-provisioningdoc>\n\n#### Output\n\n    :::XML\n    <wap-provisioningdoc>\n        <characteristic type=\"SettingsMgr\" version=\"4.3\" >\n            <parm name=\"UnknownSources\" value=\"1\"/>\n        </characteristic>\n    </wap-provisioningdoc>\n\n### Get is Airplane Mode Available \n\n#### Input \n\n    :::XML\n    <wap-provisioningdoc>\n        <characteristic type=\"SettingsMgr\" >\n            <parm-query name=\"AirplaneMode\"/>\n        </characteristic>\n    </wap-provisioningdoc>\n\n#### Output\n\n    :::XML\n    <wap-provisioningdoc>\n        <characteristic type=\"SettingsMgr\" version=\"4.3\" >\n            <parm name=\"AirplaneMode\" value=\"1\"/>\n        </characteristic>\n    </wap-provisioningdoc>\n\n## Feature Compatibility\n\n<iframe src=\"compare.html#mx=4.3&csp=SettingsMgr&os=JB&embed=true\"></iframe> "},{"key":"guide-csp-statusmgr","name":" StatusMgr","md":"# StatusMgr\n\n## About StatusMgr\n\n### Overview\n\nThe StatusMgr Feature Type has the ability to send the status of various staging Feature Types.\n\n### Main Functionality\n\n* Add, Replace, or Remove Status Requests\n* Notify about Status\n\n##Parameter Notes\n###Status Request Action\nPivotal parm: Yes\n\nDescription: \n\n>This parm allows you to select the Request Action to be performed.\n\n<div class=\"parm-table\">\n <table class=\"table\">\n\t<tr>\n\t\t<th>Parm Option Name</th>\n\t\t<th>Parm Value</th>\n\t\t<th>Description</th>\n\t</tr>\n  <tr>\n    <td>Do nothing</td>\n    <td>\"0\"</td>\n\t<td>This value (or the absence of this parm from the XML) will not cause any Status Request action to be performed.</td>\n  </tr>\n  <tr>\n    <td>Add/Replace Status Request</td>\n    <td>\"1\"</td>\n\t<td>This value will cause a Status Request to be added or replaced.</td>\n  </tr>\n  <tr>\n    <td>Remove Status Request</td>\n    <td>\"2\"</td>\n\t<td>This value will cause a Status Request to be removed.</td>\n  </tr>\n</table>\n</div>\t\n\n####Request Status ID\nSettable if: The Status Request Action is \"Add/Replace Status Request\" or \"Remove Status Request\"\n\nPivotal parm: No\n\nParm name: RequestId\n\nDescription: \n\n>This parm allows you to enter an ID for the status that is being requested.\n\nParm value input rules: \n\n* String with a minimum size of 1 character\n\n####Request Status Filter\nSettable if: The Status Request Action is \"Add/Replace Status Request\"\n\nPivotal parm: No\n\nParm name: RequestFilter\n\nDescription: \n\n>This parm allows you to select the type of status that should be requested.\n\n<div class=\"parm-table\">\n <table class=\"table\">\n\t<tr>\n\t\t<th>Parm Option Name</th>\n\t\t<th>Parm Value</th>\n\t\t<th>Description</th>\n\t</tr>\n  <tr>\n    <td>Request ALL Status</td>\n    <td>\"0\"</td>\n\t<td></td>\n  </tr>\n  <tr>\n    <td>Request Completion Status</td>\n    <td>\"1\"</td>\n\t<td></td>\n  </tr>\n</table>\n</div>\t\n\n####Dispatch Intent Action Name\nSettable if: The Status Request Action is \"Add/Replace Status Request\"\n\nPivotal parm: No\n\nParm name: ActionName\n\nDescription: \n\n>This parm allows you to enter the Android Action Name to include in the intent.\n\nParm value input rules: \n\n* String with a minimum size of 1 character\n\n####Dispatch Intent MIME Type\nSettable if: The Status Request Action is \"Add/Replace Status Request\"\n\nPivotal parm: No\n\nParm name: MimeType\n\nDescription: \n\n>This parm allows you to enter an optional MIME Type to include in the intent. Specifying an empty (length of zero) value (or the absence of this parm from the XML) will cause this value to not be set.\n\nParm value input rules: \n\n* String with a minimum size of 0 characters\n\n####Dispatch Intent Package Name\nSettable if: The Status Request Action is \"Add/Replace Status Request\"\n\nPivotal parm: No\n\nParm name: PackageName\n\nDescription: \n\n>This parm allows you to enter an optional Package Name to include in the intent. Specifying an empty (length of zero) value (or the absence of this parm from the XML) will cause this value to not be set.\n\nParm value input rules: \n\n* String with a minimum size of 0 characters\n\n####Dispatch Intent Class Name\nSettable if: The Status Request Action is \"Add/Replace Status Request\"\n\nPivotal parm: No\n\nParm name: ClassName\n\nDescription: \n\n>This parm allows you to enter an optional Class Name to include in the intent.\n\nParm value input rules: \n\n* String with a minimum size of 0 characters\n\n###Status Notify Action\nPivotal parm: Yes\n\nDescription: \n\n>This parm allows you to select the Notify Action to be performed.\n\n<div class=\"parm-table\">\n <table class=\"table\">\n\t<tr>\n\t\t<th>Parm Option Name</th>\n\t\t<th>Parm Value</th>\n\t\t<th>Description</th>\n\t</tr>\n  <tr>\n    <td>Do nothing</td>\n    <td>\"0\"</td>\n\t<td>This value (or the absence of this parm from the XML) will not cause any Status Notify action to be performed.</td>\n  </tr>\n  <tr>\n    <td>Notify about Status</td>\n    <td>\"1\"</td>\n\t<td></td>\n  </tr>\n</table>\n</div>\t\n\n####Notify Source ID\nSettable if: The Status Notify Action is \"Notify about Status\"\n\nPivotal parm: No\n\nParm name: NotifySourceId\n\nDescription: \n\n>This parm allows you to specify an identifier for the source of the notification.\n\nParm value input rules: \n\n* String with a minimum size of 1 character\n\n####Notify State\nSettable if: The Status Notify Action is \"Notify about Status\"\n\nPivotal parm: No\n\nParm name: NotifyState\n\nDescription: \n\n>This parm allows you to specify the state for the notification. Specifying an empty (length of zero) value (or the absence of this parm from the XML) will cause this value to not be set.\n\nParm value input rules: \n\n* String with a minimum size of 0 character\n\n####Notify Header\nSettable if: The Status Notify Action is \"Notify about Status\"\n\nPivotal parm: No\n\nParm name: NotifyHeader\n\nDescription: \n\n>This parm allows you to enter an optional Text Header for the Notification. Specifying an empty (length of zero) value (or the absence of this parm from the XML) will cause this value to not be set.\n\nParm value input rules: \n\n* String with a minimum size of 0 character\n\n####Notify Body\nSettable if: The Status Notify Action is \"Notify about Status\"\n\nPivotal parm: No\n\nParm name: NotifyBody\n\nDescription: \n\n>This parm allows you to enter an optional text body for the notification. Specifying an empty (length of zero) value (or the absence of this parm from the XML) will cause this value to not be set.\n\nParm value input rules: \n\n* String with a minimum size of 0 character\n\n####Notify Footer\nSettable if: The Status Notify Action is \"Notify about Status\"\n\nPivotal parm: No\n\nParm name: NotifyFooter\n\nDescription: \n\n>This parm allows you to enter an optional text footer for the notification. Specifying an empty (length of zero) value (or the absence of this parm from the XML) will cause this value to not be set.\n\nParm value input rules: \n\n* String with a minimum size of 0 character\n\n####Notify Percentage\nSettable if: The Status Notify Action is \"Notify about Status\"\n\nPivotal parm: No\n\nParm name: NotifyPercent\n\nDescription: \n\n>This parm allows you to enter an optional Percentage Complete value for the notification. Specifying a value of \"-1\" (or the absence of this parm from the XML) will cause this value to not be set.\n\nParm value input rules: \n\n* Integer with a minimum value of \"-1\" and a maximum value of \"100\"\n\n## Feature Compatibility\n\n<iframe src=\"compare.html#mx=4.3&csp=StatusMgr&os=JB&embed=true\"></iframe> "},{"key":"guide-csp-threat","name":" ThreatMgr","md":"# ThreatMgr\n\n## About ThreatMgr\n\n### Overview\n\nThe ThreatMgr Feature Type allows your application to control what security threats a device actively monitors for and how to respond.\n\n### Main Functionality\n\n* Enable or Disable Threat Detection\n* Detectable threats:\n  * Max Password Attempts\n  * MDM Client Removal\n  * Externally Detected \n  * Exchange Active Sync Command\n  * Device is Rooted\n* Counter Measures:\n  *  Format SdCard\n  *  Factory Reset\n  *  Wipe Secure Storage Keys\n  *  Lock Device\n  *  Uninstall Application \n  *  Unsolicited Alert\n  *  Signal Occurrence of Threat\n\n##Parameter Notes\n###Configure handling of a threat\nPivotal parm: Yes\n\nDescription: \n\n>This parm will allow you to select whether a threat should be detected and, if so, how it should be mitigated.\n\n<div class=\"parm-table\">\n <table class=\"table\">\n\t<tr>\n\t\t<th>Parm Option Name</th>\n\t\t<th>Parm Value</th>\n\t\t<th>Description</th>\n\t</tr>\n  <tr>\n    <td>Do Nothing</td>\n    <td>\"0\"</td>\n\t<td>This value (or the absence of this parm from the XML) will not make any change to whether or not Threat Detection is used.</td>\n  </tr>\n  <tr>\n    <td>Turn On</td>\n    <td>\"1\"</td>\n\t<td>This value will cause Threat Detection to be turned on and will allow you to choose how threats should be mitigated.</td>\n  </tr>\n  <tr>\n    <td>Turn Off</td>\n    <td>\"2\"</td>\n\t<td>This will cause Threat Detection to be turned off.</td>\n  </tr>\n</table>\n</div>\t\n\n###Name of the threat to detect\nSettable if: The \"Configure handling of a threat\" value is \"Turn On\" or \"Turn Off\"\n\nPivotal parm: Yes\n\nDescription: \n\n>This parm will specify the name of the threat to be detected or not detected.\n\n<div class=\"parm-table\">\n <table class=\"table\">\n\t<tr>\n\t\t<th>Parm Option Name</th>\n\t\t<th>Parm Value</th>\n\t\t<th>Description</th>\n\t</tr>\n  <tr>\n    <td>Max Password Attempts</td>\n    <td>\"MaxPasswordAttempts\"</td>\n\t<td>This value will cause a threat to be detected when the user tries to login to the device with the wrong password the maximum number of times.</td>\n  </tr>\n  <tr>\n    <td>MDM Client Removal</td>\n    <td>\"MDMClientRemoval\"</td>\n\t<td>This value will cause a threat to be detected when the MDM Client is removed from the device.</td>\n  </tr>\n  <tr>\n    <td>Externally Detected</td>\n    <td>\"ExternallyDetected\"</td>\n\t<td>This value will cause a custom threat to be detected from an external source through receiving an intent from this source.</td>\n  </tr>\n  <tr>\n    <td>Exchange Active Sync Command</td>\n    <td>\"ExchangeActiveSyncCommand\"</td>\n\t<td>This value will cause a threat to be detected when an error occurs when syncing with Exchange.</td>\n  </tr>\n  <tr>\n    <td>Device is Rooted</td>\n    <td>\"DeviceisRooted\"</td>\n\t<td>This value will cause a threat to be detected when the device is rooted.</td>\n  </tr>\n</table>\n</div>\t\n\n####MDM Client Package Name\nSettable if: The \"Configure handling of a threat\" value is \"Turn On\" *AND* the \"Name of the threat to detect\" value is \"MDM Client Removal\"\n\nPivotal parm: No\n\nParm name: MDMPackage\n\nDescription: \n\n>This parm allows you to specify the package name of MDM Client to be observed. If this MDM Client is removed from the device, this will be detected as a threat.\n\n>**Note:** The MDM Client must be a system app to be specified.\n\nParm value input rules: \n\n* String with a minimum size of 1 character and a maximum size of 255 characters\n\n####Counter Measure - Format Sdcard\nSettable if: The \"Configure handling of a threat\" value is \"Turn On\" *AND* the \"Name of the threat to detect\" value is \"Max Password Attempts\", \"MDM Client Removal\", \"Externally Detected\", \"Exchange Active Sync Command\", or \"Device is Rooted\"\n\nPivotal parm: No\n\nParm name: FormatSdcard\n\nDescription: \n\n>This parm allows you to specify if the external SD card should be formatted in response to a detected threat. This would cause all existing data on the SD card to be lost.\n\n<div class=\"parm-table\">\n <table class=\"table\">\n\t<tr>\n\t\t<th>Parm Option Name</th>\n\t\t<th>Parm Value</th>\n\t\t<th>Description</th>\n\t</tr>\n  <tr>\n    <td>Do Not Perform</td>\n    <td>\"0\"</td>\n\t<td>This value (or the absence of this parm from the XML) will not cause the SD card to be formatted in response to a detected threat.</td>\n  </tr>\n  <tr>\n    <td>Perform</td>\n    <td>\"1\"</td>\n\t<td>This value will cause the SD card to be formatted in response to a detected threat.</td>\n  </tr>\n</table>\n</div>\t\n\n####Counter Measure - Factory Reset\nSettable if: The \"Configure handling of a threat\" value is \"Turn On\" *AND* the \"Name of the threat to detect\" value is \"Max Password Attempts\", \"MDM Client Removal\", \"Externally Detected\", \"Exchange Active Sync Command\", or \"Device is Rooted\"\n\nPivotal parm: No\n\nParm name: FactoryReset\n\nDescription: \n\n>This parm allows you to specify if a Factory Reset should be performed in response to a detected threat. This would cause the data, cache and Enterprise partitions to be cleared.\n\n<div class=\"parm-table\">\n <table class=\"table\">\n\t<tr>\n\t\t<th>Parm Option Name</th>\n\t\t<th>Parm Value</th>\n\t\t<th>Description</th>\n\t</tr>\n  <tr>\n    <td>Do Not Perform</td>\n    <td>\"0\"</td>\n\t<td>This value (or the absence of this parm from the XML) will not cause a Factory Reset to be performed in response to a detected threat.</td>\n  </tr>\n  <tr>\n    <td>Perform</td>\n    <td>\"1\"</td>\n\t<td>This value will cause a Factory Reset to be performed in response to a detected threat.</td>\n  </tr>\n</table>\n</div>\t\n\n####Counter Measure - Wipe Secure Storage Keys\nSettable if: The \"Configure handling of a threat\" value is \"Turn On\" *AND* the \"Name of the threat to detect\" value is \"Max Password Attempts\", \"MDM Client Removal\", \"Externally Detected\", \"Exchange Active Sync Command\", or \"Device is Rooted\"\n\nPivotal parm: No\n\nParm name: WipeSecureStorageKeys\n\nDescription: \n\n>This parm allows you to specify if the Secure Storage Keys should be cleared in response to a detected threat.\n\n<div class=\"parm-table\">\n <table class=\"table\">\n\t<tr>\n\t\t<th>Parm Option Name</th>\n\t\t<th>Parm Value</th>\n\t\t<th>Description</th>\n\t</tr>\n  <tr>\n    <td>Do Not Perform</td>\n    <td>\"0\"</td>\n\t<td>This value (or the absence of this parm from the XML) will not cause the Secure Storage Keys to be cleared in response to a detected threat.</td>\n  </tr>\n  <tr>\n    <td>Perform</td>\n    <td>\"1\"</td>\n\t<td>This value will cause the Secure Storage Keys to be cleared in response to a detected threat.</td>\n  </tr>\n</table>\n</div>\t\n\n####Counter Measure - Lock Device\nSettable if: The \"Configure handling of a threat\" value is \"Turn On\" *AND* the \"Name of the threat to detect\" value is \"Max Password Attempts\", \"MDM Client Removal\", \"Externally Detected\", \"Exchange Active Sync Command\", or \"Device is Rooted\"\n\nPivotal parm: No\n\nParm name: LockDevice\n\nDescription: \n\n>This parm allows you to specify if the device should be locked in response to a detected threat. This would require the user to perform any unlock procedure that is configured for the device.\n\n<div class=\"parm-table\">\n <table class=\"table\">\n\t<tr>\n\t\t<th>Parm Option Name</th>\n\t\t<th>Parm Value</th>\n\t\t<th>Description</th>\n\t</tr>\n  <tr>\n    <td>Do Not Perform</td>\n    <td>\"0\"</td>\n\t<td>This value (or the absence of this parm from the XML) will not cause the device to be locked in response to a detected threat.</td>\n  </tr>\n  <tr>\n    <td>Perform</td>\n    <td>\"1\"</td>\n\t<td>This value will cause the device to be locked in response to a detected threat.</td>\n  </tr>\n</table>\n</div>\t\n\n####Counter Measure - Uninstall Application\nSettable if: The \"Configure handling of a threat\" value is \"Turn On\" *AND* the \"Name of the threat to detect\" value is \"Max Password Attempts\", \"MDM Client Removal\", \"Externally Detected\", \"Exchange Active Sync Command\", or \"Device is Rooted\"\n\nPivotal parm: Yes\n\nDescription: \n\n>This parm allows you to specify if an application should be silently uninstalled in response to a detected threat.\n\n<div class=\"parm-table\">\n <table class=\"table\">\n\t<tr>\n\t\t<th>Parm Option Name</th>\n\t\t<th>Parm Value</th>\n\t\t<th>Description</th>\n\t</tr>\n  <tr>\n    <td>Do Not Perform</td>\n    <td>\"0\"</td>\n\t<td>This value (or the absence of this parm from the XML) will not cause an application to be uninstalled in response to a detected threat.</td>\n  </tr>\n  <tr>\n    <td>Perform</td>\n    <td>\"1\"</td>\n\t<td>This value will cause an application to be uninstalled in response to a detected threat.</td>\n  </tr>\n</table>\n</div>\t\n\n#####**Uninstall Package**\nSettable if: The \"Configure handling of a threat\" value is \"Turn On\" *AND* the \"Name of the threat to detect\" value is \"Max Password Attempts\", \"MDM Client Removal\", \"Externally Detected\", \"Exchange Active Sync Command\", or \"Device is Rooted\" *AND* the \"Counter Measure - Uninstall Application\" value is \"Perform\"\n\nPivotal parm: No\n\nParm name: UninstallPackage\n\nDescription: \n\n>This parm allows you to specify the package name of the application that should be uninstalled.\n\nParm value input rules: \n\n* String containing the valid name of the package. For example, 'com.mycompany.mypackage'.\n* The minimum size is 1 character and a maximum size is 255 characters\n\n####Counter Measure - Unsolicited Alert\nSettable if: The \"Configure handling of a threat\" value is \"Turn On\" *AND* the \"Name of the threat to detect\" value is \"Max Password Attempts\", \"MDM Client Removal\", \"Externally Detected\", \"Exchange Active Sync Command\", or \"Device is Rooted\"\n\nPivotal parm: Yes\n\nDescription: \n\n>This parm allows you to specify if an unsolicited alert should be sent in response to a detected threat. This would cause an explicit intent to be sent to an application with an alert message.\n\n<div class=\"parm-table\">\n <table class=\"table\">\n\t<tr>\n\t\t<th>Parm Option Name</th>\n\t\t<th>Parm Value</th>\n\t\t<th>Description</th>\n\t</tr>\n  <tr>\n    <td>Do Not Perform</td>\n    <td>\"0\"</td>\n\t<td>This value (or the absence of this parm from the XML) will not cause an unsolicited alert to be sent in response to a detected threat.</td>\n  </tr>\n  <tr>\n    <td>Perform</td>\n    <td>\"1\"</td>\n\t<td>This value will cause an unsolicited alert to be sent in response to a detected threat.</td>\n  </tr>\n</table>\n</div>\t\n\n####Package for Unsolicited Alert\nSettable if: The \"Configure handling of a threat\" value is \"Turn On\" *AND* the \"Name of the threat to detect\" value is \"Max Password Attempts\", \"MDM Client Removal\", \"Externally Detected\", \"Exchange Active Sync Command\", or \"Device is Rooted\" *AND* the \"Counter Measure - Unsolicited Alert\" value is \"Perform\"\n\nPivotal parm: No\n\nParm name: AlertPackage\n\nDescription: \n\n>This parm will allow you to specify the package name of the application that will receives the unsolicited alert.\n\nParm value input rules: \n\n* String containing the valid name of the package. For example, 'com.mycompany.mypackage'.\n* The minimum size is 1 character and a maximum size is 255 characters\n\n####Class for Unsolicited Alert\nSettable if: The \"Configure handling of a threat\" value is \"Turn On\" *AND* the \"Name of the threat to detect\" value is \"Max Password Attempts\", \"MDM Client Removal\", \"Externally Detected\", \"Exchange Active Sync Command\", or \"Device is Rooted\" *AND* the \"Counter Measure - Unsolicited Alert\" value is \"Perform\"\n\nPivotal parm: No\n\nParm name: AlertClass\n\nDescription: \n\n>This parm will allow you to specify the class of the application that will receive the unsolicited alert.\n\nParm value input rules: \n\n* String containing the valid name of the class.\n* The minimum size is 1 character and a maximum size is 255 characters\n\n####Msg for Unsolicited Alert\nSettable if: The \"Configure handling of a threat\" value is \"Turn On\" *AND* the \"Name of the threat to detect\" value is \"Max Password Attempts\", \"MDM Client Removal\", \"Externally Detected\", \"Exchange Active Sync Command\", or \"Device is Rooted\" *AND* the \"Counter Measure - Unsolicited Alert\" value is \"Perform\"\n\nPivotal parm: No\n\nParm name: AlertMsg\n\nDescription: \n\n>This parm will allow you to specify the alert message that will be included in the explicit intent that is sent for for the unsolicited alert.\n\nParm value input rules: \n\n* String with a minimum size of 1 character and a maximum size of 255 characters\n\n###Signal occurrence of a threat\nPivotal parm: Yes\n\nDescription: \n\n>This parm allows you to select if the occurrence of an externally detected threat should be signaled by sending an intent.\n\n<div class=\"parm-table\">\n <table class=\"table\">\n\t<tr>\n\t\t<th>Parm Option Name</th>\n\t\t<th>Parm Value</th>\n\t\t<th>Description</th>\n\t</tr>\n  <tr>\n    <td>Do Nothing</td>\n    <td>\"0\"</td>\n\t<td>This value (or the absence of this parm from the XML) will not cause a signal to be sent when a threat is detected externally.</td>\n  </tr>\n  <tr>\n    <td>Signal Occurrence</td>\n    <td>\"1\"</td>\n\t<td>This value will cause a signal to be sent when a threat is detected externally.</td>\n  </tr>\n</table>\n</div>\t\n\n####Send threat message\nSettable if: The \"Signal occurrence of a threat\" value is \"Signal Occurrence\"\n\nPivotal parm: No\n\nParm name: SendThreatMsg\n\nDescription: \n\n>This parm will allow you to specify the message that would be included in the intent that is sent when a threat is detected externally.\n\nParm value input rules: \n\n* String with a minimum size of 1 character and a maximum size of 255 characters\n  \n<!--\n## Queries\n\n### Get all Threat / Countermeasure Configurations\n\n#### Input \n\n    :::XML\n    <wap-provisioningdoc>\n        <characteristic-query type=\"ThreatMgr\"/>\n    </wap-provisioningdoc>\n\n#### Output\n\n    :::XML\n    <wap-provisioningdoc>\n        <characteristic type=\"ThreatMgr\" version=\"4.3\">\n            <parm name=\"ThreatAction\" value=\"1\" />\n            <parm name=\"ThreatName\" value=\" MaxPasswordAttempts\" /> \n            <characteristic type=\"CounterMeasure\">\n                <parm name=\"FormatSdcard\" value=\"1\" /> \n                <parm name=\"FactoryReset\" value=\"1\" /> \n                <parm name=\"WipeSecureStorageKeys\" value=\"1\" /> \n                <parm name=\"PasswordResetAllUsers\" value=\"1\" /> \n                <parm name=\"AllUsersPassword\" value=\"PASSWORDALL\" /> \n                <parm name=\"PasswordResetUser\" value=\"1\" /> \n                <parm name=\"SpecificUserName\" value=\"UserName1, UserName2\" /> \n                <parm name=\"SpecificUserPassword\" value=\"Password1, Password2\" /> \n                <parm name=\"LockDevice\" value=\"1\" /> \n                <parm name=\"UninstallApplication\" value=\"1\" /> \n                <parm name=\"UninstallPackage\" value=\"PackageName\" /> \n                <parm name=\"UnsolicitedAlert\" value=\"1\" /> \n                <parm name=\"AlertPackage\" value=\"PackageName\" /> \n                <parm name=\"AlertClass\" value=\"ClassName\" /> \n                <parm name=\"AlertMsg\" value=\"Message\" />  \n            </characteristic>\n        </characteristic>\n        <characteristic type=\"ThreatMgr\" version=\"4.3\">\n            <parm name=\"ThreatAction\" value=\"1\" /> \n            <parm name=\"ThreatName\" value=\"Externally Detected\" /> \n            <characteristic type=\"CounterMeasure\">\n                <parm name=\"FormatSdcard\" value=\"1\" /> \n                <parm name=\"FactoryReset\" value=\"1\" /> \n                <parm name=\"WipeSecureStorageKeys\" value=\"1\" /> \n                <parm name=\"LockDevice\" value=\"1\" /> \n            </characteristic>\n        </characteristic>\n    </wap-provisioningdoc>\n\n\n### Get Configurations for a Specific Threat\n\n#### Input \n\n    :::XML\n    <wap-provisioningdoc>\n        <characteristic type=\"ThreatMgr\" version=\"4.3\">\n            <parm name=\"ThreatName\" value=\" MaxPasswordAttempts\" /> \n            <characteristic-query type=\"CounterMeasure\"/>\n        </characteristic>\n    </wap-provisioningdoc>\n\n#### Output\n\n    :::XML\n    <wap-provisioningdoc>\n        <characteristic type=\"ThreatMgr\" version=\"4.3\">\n            <parm name=\"ThreatAction\" value=\"1\" /> \n            <parm name=\"ThreatName\" value=\" MaxPasswordAttempts\" /> \n            <characteristic type=\"CounterMeasure\">\n                <parm name=\"FormatSdcard\" value=\"1\" /> \n                <parm name=\"FactoryReset\" value=\"1\" /> \n                <parm name=\"WipeSecureStorageKeys\" value=\"1\" /> \n                <parm name=\"PasswordResetAllUsers\" value=\"1\" /> \n                <parm name=\"AllUsersPassword\" value=\"PASSWORDALL\" /> \n                <parm name=\"PasswordResetUser\" value=\"1\" /> \n                <parm name=\"SpecificUserName\" value=\"UserName1, UserName2\" /> \n                <parm name=\"SpecificUserPassword\" value=\"Password1, Password2\" /> \n                <parm name=\"LockDevice\" value=\"1\" /> \n                <parm name=\"UninstallApplication\" value=\"1\" /> \n                <parm name=\"UninstallPackage\" value=\"PackageName\" /> \n                <parm name=\"UnsolicitedAlert\" value=\"1\" /> \n                <parm name=\"AlertPackage\" value=\"PackageName\" /> \n                <parm name=\"AlertClass\" value=\"ClassName\" /> \n                <parm name=\"AlertMsg\" value=\"Message\" />  \n            </characteristic>\n        </characteristic>\n    </wap-provisioningdoc>\n-->\n\n## Feature Compatibility\n\n<iframe src=\"compare.html#mx=4.3&csp=ThreatMgr&os=JB&embed=true\"></iframe> \n\n"},{"key":"guide-csp-touch","name":" TouchMgr","md":"# TouchMgr\n\n## About TouchMgr\n\n### Overview\n\nThe TouchMgr Feature Type allows you set the Touch Mode on your device which will be used to interact with the device's user interface.\n\n### Main Functionality\n\n* Configure the Screen for Stylus and Finger Input\n* Configure the Screen for Glove and Finger Input\n\n##Parameter Notes\n### TouchAction\nPivotal parm: No\n\nParm name: TouchAction\n\nDescription: \n\n>This parm allows you to specify Touch Mode that should be used to interact with the user interface on the device.\n\n<div class=\"parm-table\">\n <table class=\"table\">\n\t<tr>\n\t\t<th>Parm Option Name</th>\n\t\t<th>Parm Value</th>\n\t\t<th>Description</th>\n\t</tr>\n  <tr>\n    <td>Do not change</td>\n    <td>\"Do not change\"</td>\n\t<td>This value (or the absence of this parm from the XML) will not make any change to the device's current Touch Mode settings.</td>\n  </tr>\n  <tr>\n    <td>Stylus and Finger</td>\n    <td>\"Stylus and Finger\"</td>\n\t<td>This parm will cause the Touch Mode of the device to be changed to Stylus and Finger mode.</td>\n  </tr>\n  <tr>\n    <td>Glove and Finger</td>\n    <td>\"Glove and Finger\"</td>\n\t<td>This parm will cause the Touch Mode of the device to be changed to Glove and Finger mode.</td>\n  </tr>\n</table>\n</div>\t\n\n## Feature Compatibility\n\n<iframe src=\"compare.html#mx=4.3&csp=TouchMgr&os=JB&embed=true\"></iframe> \n"},{"key":"guide-csp-ui","name":" UiMgr","md":"# UiMgr\n\n## About UiMgr\n\n### Overview\n\nThe UiMgr Feature Type allows you to manage UI configurations. \n\n### Main Functionality\n\n* Enable or Disable Clipboard\n* Clear Clipboard \n* Enable or Disable Auto Correct\n* Enable or Disable Home Key\n* Enable or Disable Bluetooth Paring Popup\n* Set Current Locale \n* Set Default Input Method \n\n##Parameter Notes\n### Clipboard\nPivotal parm: No \n\nParm name: ClipBoardUsage\n\nDescription: \n\n>This parm will specify whether or not the use of the clipboard will be allowed.\n\n<div class=\"parm-table\">\n <table class=\"table\">\n\t<tr>\n\t\t<th>Parm Option Name</th>\n\t\t<th>Parm Value</th>\n\t\t<th>Description</th>\n\t</tr>\n  <tr>\n    <td>Do not change</td>\n    <td>\"0\"</td>\n\t<td>This value (or the absence of this parm from the XML) will not make any change to whether the clipboard is currently allowed to be used or not.</td>\n  </tr>\n  <tr>\n    <td>Enable</td>\n    <td>\"1\"</td>\n\t<td>This value will allow the clipboard to be used. This will allow the user to be able to copy and paste data to or from the clipboard.</td>\n  </tr>\n  <tr>\n    <td>Disable</td>\n    <td>\"2\"</td>\n\t<td>This value will disallow the clipboard from being used. This will disallow the user from being able to copy and paste data to or from the clipboard and a toast message will appear to tell the user that the use of the clipboard was disabled by the admin.</td>\n  </tr>\n</table>\n</div>\t\n\n###Clear Clipboard?\nPivotal parm: No\n\nParm name: ClipBoardClear\n\nDescription: \n\n>This parm allows you to specify if the clipboard should be cleared. This would erase anything that was copied and saved to the clipboard.\n\n<div class=\"parm-table\">\n <table class=\"table\">\n\t<tr>\n\t\t<th>Parm Option Name</th>\n\t\t<th>Parm Value</th>\n\t\t<th>Description</th>\n\t</tr>\n  <tr>\n    <td>True</td>\n    <td>\"true\"</td>\n\t<td>This value will cause the clipboard to be cleared. This would clear all of the clipboard data for all of the users.</td>\n  </tr>\n  <tr>\n    <td>False</td>\n    <td>\"false\"</td>\n\t<td>This value (or the absence of this parm from the XML) will not cause the clipboard to be cleared.</td>\n  </tr>\n</table>\n</div>\t\n\n###Enable/Disable AutoCorrect\nPivotal parm: No\n\nParm name: AutoCorrectUsage\n\nDescription: \n\n>This parm allows you to specify whether if mistyped words will be allowed to be corrected by Auto Correct.\n\n<div class=\"parm-table\">\n <table class=\"table\">\n\t<tr>\n\t\t<th>Parm Option Name</th>\n\t\t<th>Parm Value</th>\n\t\t<th>Description</th>\n\t</tr>\n  <tr>\n    <td>Do not change</td>\n    <td>\"0\"</td>\n\t<td>This value (or the absence of this parm from the XML) will not make any change to whether Auto Correct is allowed to be used or not.</td>\n  </tr>\n  <tr>\n    <td>Enable</td>\n    <td>\"1\"</td>\n\t<td>This value will allow Auto Correct to be used. This will allow the user to set the auto correction states(off/modest/aggressive/very aggressive) through the Settings application (Settings/Language & Input / Android Keyboard / Auto Correction). Auto Correct will be enabled if any state other than \"Off\" is selected.</td>\n  </tr>\n  <tr>\n    <td>Disable</td>\n    <td>\"2\"</td>\n\t<td>This value will disallow Auto Correct from being used. This would cause the Auto Correct option in the Settings application to be grayed out and the user will be blocked from turning this feature On or Off.</td>\n  </tr>\n</table>\n</div>\t\n\n###Enable/Disable HomeKey\nPivotal parm: No\n\nParm name: HomeKeyUsage\n\nDescription: \n\n>This parm allows you to specify if the use of Home Key will be allowed.\n\n<div class=\"parm-table\">\n <table class=\"table\">\n\t<tr>\n\t\t<th>Parm Option Name</th>\n\t\t<th>Parm Value</th>\n\t\t<th>Description</th>\n\t</tr>\n  <tr>\n    <td>Do not change</td>\n    <td>\"0\"</td>\n\t<td>This value (or the absence of this parm from the XML) will not make any change to whether Home Key is allowed to be used or not.</td>\n  </tr>\n  <tr>\n    <td>Enable</td>\n    <td>\"1\"</td>\n\t<td>This value will allow the Home Key to be used. Therefore, when the user presses the Home Key, the device will go to the home screen.</td>\n  </tr>\n  <tr>\n    <td>Disable</td>\n    <td>\"2\"</td>\n\t<td>This value will disallow the Home Key from being used. Therefore, when the user presses the Home Key, the device will not go to the home screen. Disabling the Home Key also does not affect the key's behavior when it is long pressed.</td>\n  </tr>\n</table>\n</div>\t\n\n###Enable/Disable Bluetooth Pairing Popup\nPivotal parm: No\n\nParm name: BluetoothPairingPopupUsage\n\nDescription: \n\n>This parm will allow you to specify if the use of the Bluetooth Pairing Popup will be allowed.\n\n<div class=\"parm-table\">\n <table class=\"table\">\n\t<tr>\n\t\t<th>Parm Option Name</th>\n\t\t<th>Parm Value</th>\n\t\t<th>Description</th>\n\t</tr>\n  <tr>\n    <td>Do not change</td>\n    <td>\"0\"</td>\n\t<td>This value (or the absence of this parm from the XML) will not make any change to whether Bluetooth Pairing Popup is allowed to be used or not.</td>\n  </tr>\n  <tr>\n    <td>Enable</td>\n    <td>\"1\"</td>\n\t<td>This value will allow the Bluetooth Pairing Popup to be used. Therefore, if the user tries to do Bluetooth pairing with another device, the user will see the Bluetooth Pairing Popup appear.</td>\n  </tr>\n  <tr>\n    <td>Disable</td>\n    <td>\"2\"</td>\n\t<td>This value will disallow the Bluetooth Pairing Popup from being used. Therefore, if the user tries to do Bluetooth pairing with another device, the user will not see the Bluetooth Pairing Popup appear.</td>\n  </tr>\n</table>\n</div>\t\n\n###Set Current Locale\nPivotal parm: No\n\nParm name: CurrentLocale\n\nDescription: \n\n>This parm value will allow you to select the device's current locale.\n\n<div class=\"parm-table\">\n <table class=\"table\">\n\t<tr>\n\t\t<th>Parm Option Name</th>\n\t\t<th>Parm Value</th>\n\t\t<th>Description</th>\n\t</tr>\n  <tr>\n    <td>Do not change</td>\n    <td>\"0\"</td>\n\t<td></td>\n  </tr>\n  <tr>\n    <td>CANADA</td>\n    <td>\"en_CA\"</td>\n\t<td></td>\n  </tr>\n  <tr>\n    <td>CANADA_FRENCH</td>\n    <td>\"fr_CA\"</td>\n\t<td></td>\n  </tr>\n  <tr>\n    <td>CHINA</td>\n    <td>\"zh_CN\"</td>\n\t<td></td>\n  </tr>\n  <tr>\n    <td>CHINESE</td>\n    <td>\"zh\"</td>\n\t<td></td>\n  </tr>\n  <tr>\n    <td>ENGLISH</td>\n    <td>\"en\"</td>\n\t<td></td>\n  </tr>\n  <tr>\n    <td>FRANCE</td>\n    <td>\"fr_FR\"</td>\n\t<td></td>\n  </tr>\n  <tr>\n    <td>FRENCH</td>\n    <td>\"fr\"</td>\n\t<td></td>\n  </tr>\n  <tr>\n    <td>GERMAN</td>\n    <td>\"de\"</td>\n\t<td></td>\n  </tr>\n  <tr>\n    <td>GERMANY</td>\n    <td>\"de_DE\"</td>\n\t<td></td>\n  </tr>\n  <tr>\n    <td>ITALIAN</td>\n    <td>\"it\"</td>\n\t<td></td>\n  </tr>\n  <tr>\n    <td>ITALY</td>\n    <td>\"it_IT\"</td>\n\t<td></td>\n  </tr>\n  <tr>\n    <td>JAPAN</td>\n    <td>\"ja_JP\"</td>\n\t<td></td>\n  </tr>\n  <tr>\n    <td>JAPANESE</td>\n    <td>\"ja\"</td>\n\t<td></td>\n  </tr>\n  <tr>\n    <td>KOREA</td>\n    <td>\"ko_KR\"</td>\n\t<td></td>\n  </tr>\n  <tr>\n    <td>KOREAN</td>\n    <td>\"ko\"</td>\n\t<td></td>\n  </tr>\n  <tr>\n    <td>PRC</td>\n    <td>\"zh_CN\"</td>\n\t<td></td>\n  </tr>\n  <tr>\n    <td>SIMPLIFIED_CHINESE</td>\n    <td>\"zh_CN\"</td>\n\t<td></td>\n  </tr>\n  <tr>\n    <td>TAIWAN</td>\n    <td>\"zh_TW\"</td>\n\t<td></td>\n  </tr>\n  <tr>\n    <td>TRADITIONAL_CHINESE</td>\n    <td>\"zh_TW\"</td>\n\t<td></td>\n  </tr>\n  <tr>\n    <td>UK</td>\n    <td>\"en_GB\"</td>\n\t<td></td>\n  </tr>\n  <tr>\n    <td>US</td>\n    <td>\"en_US\"</td>\n\t<td></td>\n  </tr>\n</table>\n</div>\t\n\n###Set Default Input Method?\nPivotal parm: Yes\n\nDescription: \n\n>This parm value will allow you to select the action for input method.\n\n<div class=\"parm-table\">\n <table class=\"table\">\n\t<tr>\n\t\t<th>Parm Option Name</th>\n\t\t<th>Parm Value</th>\n\t\t<th>Description</th>\n\t</tr>\n  <tr>\n    <td>Do not change</td>\n    <td>\"0\"</td>\n\t<td>This value (or the absence of this parm from the XML) will not make any change to the current input method on the device.</td>\n  </tr>\n  <tr>\n    <td>Change Current Input Method</td>\n    <td>\"1\"</td>\n\t<td>This value will allow you to change the current input method that is used on the device.</td>\n  </tr>\n</table>\n</div>\t\n\n####Select a Default Input Method Option\nSettable if: The \"Set Default Input Method?\" value is \"Change Current Input Method\"\n\nPivotal parm: Yes\n\nDescription: \n\n>This parm value will allow you to select the desired input method. The selected method will be enabled by the CSP and then set as the default.\n\n<div class=\"parm-table\">\n <table class=\"table\">\n\t<tr>\n\t\t<th>Parm Option Name</th>\n\t\t<th>Parm Value</th>\n\t\t<th>Description</th>\n\t</tr>\n  <tr>\n    <td>English(US)</td>\n    <td>\"1\"</td>\n\t<td>This value would set the default input method to English.</td>\n  </tr>\n  <tr>\n    <td>Japanese</td>\n    <td>\"2\"</td>\n\t<td>This value would set the default input method to Japanese.</td>\n  </tr>\n  <tr>\n    <td>Chinese(China)</td>\n    <td>\"3\"</td>\n\t<td>This value would set the default input method to Chinese.</td>\n  </tr>\n  <tr>\n    <td>User defined Input Method</td>\n    <td>\"4\"</td>\n\t<td>This value would set the default input method to a user defined input method which would be installed by the user. The package name and class name would need to be specified.</td>\n  </tr>\n</table>\n</div>\t\n\n#####**Package name of input Method**\nSettable if: The \"Set Default Input Method?\" value is \"Change Current Input Method\" *AND* the \"Select a Default Input Method Option\" is \"User defined Input Method\"\n\nPivotal parm: No\n\nParm name: InputMethodPackageName\n\nDescription: \n\n>This parm will allow you to provide the package name of the user defined input method that will be set to the default input method.\n\nParm value input rules: \n\n* String containing the valid name of the package. For example, 'com.mycompany.mypackage'.\n* String with a minimum size of 1 character\n\n#####**Class name of input Method**\nSettable if: The \"Set Default Input Method?\" value is \"Change Current Input Method\" *AND* the \"Select a Default Input Method Option\" is \"User defined Input Method\"\n\nPivotal parm: No\n\nParm name: InputMethodClassName\n\nDescription: \n\n>This parm will allow you to provide the class name of the user defined input method that will be set to the default input method.\n\nParm value input rules: \n\n* String with a minimum size of 1 character\n\n##Example XML\n### Configuring Device Region and Keyboard\n\n    :::XML\n    <wap-provisioningdoc>\n      <characteristic type=\"UiMgr\" version=\"4.3\" >\n        <parm name=\"CurrentLocale\" value=\"en_GB\"/>\n        <parm name=\"InputMethodAction\" value=\"1\"/>\n        <characteristic type=\"InputMethodDetails\">\n          <parm name=\"InputMethodOption\" value=\"1\"/>\n        </characteristic>\n      </characteristic>\n    </wap-provisioningdoc>\n\n## Queries\n\n### Get Current Locale\n\n#### Input \n\n    :::XML\n     <wap-provisioningdoc>\n        <characteristic type=\"UiMgr\" version=\"4.3\" >\n            <parm-query name=\"CurrentLocale\"/>\n        </characteristic>\n    </wap-provisioningdoc>\n\n#### Output\n\n    :::XML\n    <wap-provisioningdoc>\n        <characteristic type=\"UiMgr\" version=\"4.3\" >\n            <parm name=\"CurrentLocale\" value=\"en\"/>\n        </characteristic>\n    </wap-provisioningdoc>\n\n### Get Home Key Usage\n\n#### Input \n\n    :::XML\n    <wap-provisioningdoc>\n\t\t<characteristic type=\"UiMgr\" version=\"4.3\" >\n\t\t\t<parm-query name=\"HomeKeyUsage\"/>\n\t\t</characteristic>\n\t</wap-provisioningdoc>\n\n#### Output\n\n    :::XML\n\t<wap-provisioningdoc>\n        <characteristic type=\"UiMgr\" version=\"4.3\" >\n            <parm name=\"HomeKeyUsage\" value=\"1\"/>\n        </characteristic>\n    </wap-provisioningdoc>\n\t\n### Get Clipboard Usage\n\n#### Input \n\n    :::XML\n    <wap-provisioningdoc>\n        <characteristic type=\"UiMgr\" version=\"4.3\" >\n            <parm-query name=\"ClipboardUsage\"/>\n        </characteristic>\n    </wap-provisioningdoc>\n\n#### Output\n\n    :::XML\n    <wap-provisioningdoc>\n        <characteristic type=\"UiMgr\" version=\"4.3\" >\n            <parm name=\"ClipboardUsage\" value=\"1\"/>\n        </characteristic>\n    </wap-provisioningdoc>\n\n### Get Auto Correct Usage\n\n#### Input \n\n    :::XML\n    <wap-provisioningdoc>\n        <characteristic type=\"UiMgr\" version=\"4.3\" >\n            <parm-query name=\"AutoCorrectUsage\"/>\n        </characteristic>\n    </wap-provisioningdoc>\n\n#### Output\n\n    :::XML\n    <wap-provisioningdoc>\n        <characteristic type=\"UiMgr\" version=\"4.3\" >\n            <parm name=\"AutoCorrectUsage\" value =\"1\"/> \n        </characteristic>\n    </wap-provisioningdoc>\n\n### Get Paring Popup\n\n#### Input \n\n    :::xml\n    <wap-provisioningdoc>\n        <characteristic type=\"UiMgr\" version=\"4.3\" >\n            <parm-query name=\"BluetoothPairingPopupUsage\"/>\n        </characteristic>\n    </wap-provisioningdoc>\n\n#### Output\n\n    :::XML\n\t<wap-provisioningdoc>\n        <characteristic type=\"UiMgr\" version=\"4.3\" >\n            <parm name=\"BluetoothPairingPopupUsage\" value=\"1\"/>\n        </characteristic>\n    </wap-provisioningdoc>\n\n### Get Input Methods\n\n#### Input \n\n    :::XML\n    <wap-provisioningdoc>\n        <characteristic type=\"UiMgr\" version=\"4.3\" >\n            <characteristic-query type=\"InputMethodDetails\"/>\n        </characteristic>\n    </wap-provisioningdoc>\n\n#### Output \n\n\t:::XML\n\t<wap-provisioningdoc>\n\t\t<characteristic type=\"UiMgr\" version=\"4.3\">\n\t\t\t<parm name=\"InputMethodAction\" value=\"1\"/>\n\t\t\t<characteristic type=\"InputMethodDetails\">\n\t\t\t\t<parm name=\"InputMethodOption\" value=\"1\"/>\n\t\t\t</characteristic>\n\t\t</characteristic>\n\t</wap-provisioningdoc>\n\n\n### Get All Settings\n\n#### Input \n\n    :::xml\n    <wap-provisioningdoc>\n        <characteristic-query type=\"UiMgr\"/>\n    </wap-provisioningdoc>\n\n#### Output\n\n    :::XML\n    <wap-provisioningdoc>\n\t    <characteristic type=\"UiMgr\" version=\"4.3\" >\n            <parm name=\"CurrentLocale\" value=\"en\"/>\n            <parm name=\"HomeKeyUsage\" value=\"1\"/>\n            <parm name=\"ClipboardUsage\" value =\"1\"/>\n            <parm name=\"AutoCorrectUsage\" value =\"1\"/> \n            <parm name=\"InputMethodAction\" value=\"1\"/>\n            <parm name=\"BluetoothPairingPopupUsage\" value=\"1\"/>\n            <characteristic type=\"InputMethodDetails\">\n\t            <parm name=\"InputMethodOption\" value=\"4\"/>\n\t            <parm name=\"InputMethodPackageName\" value=\"PakcageName1\"/>\n\t            <parm name=\"InputMethodClassName\" value=\"ClassName1\"/>\n            </characteristic>\n        </characteristic>\n    </wap-provisioningdoc>\n\n## Feature Compatibility\n\n<iframe src=\"compare.html#mx=4.3&csp=UiMgr&os=JB&embed=true\"></iframe> "},{"key":"guide-csp-usb","name":" UsbMgr","md":"# UsbMgr\n\n## About UsbMgr\n\n### Overview\n\nThe UsbMgr feature allows you to manage USB configurations of your device.\n\n### Main Functionality\n\n* Enable or Disable USB Module Usage\n* Enable or Disable External USB Storage Usage\n* Enable or Disable ADB (Android Debug Bridge) Usage\n* Enable or Disable Device Storage Access over USB\n* Enable or Disable the Ability to Access the Device Using UMS (USB Mass Storage) Mode\n* Enable or Disable the Ability to Access the Device Using MTP (Media Transfer Protocol) Mode\n* Enable or Disable the Ability to Access the Device Using PTP (Picture Transfer Protocol) Mode\n\n##Parameter Notes\n###USB Module Usage\nPivotal parm: Yes\n\nDescription: \n\n>This parm allows you to specify whether the use of USB module will be allowed. Setting this parm would cause all of the USB features to be enabled or disabled.\n\n<div class=\"parm-table\">\n <table class=\"table\">\n\t<tr>\n\t\t<th>Parm Option Name</th>\n\t\t<th>Parm Value</th>\n\t\t<th>Description</th>\n\t</tr>\n  <tr>\n    <td>Do not change</td>\n    <td>\"0\"</td>\n\t<td>This value (or the absence of this parm from the XML) will not make any change to whether or not the USB module can be used. This value will also allow you to enable or disable the USB features individually through use of the other parms in the UsbMgr Feature Type.</td>\n  </tr>\n  <tr>\n    <td>Enable</td>\n    <td>\"1\"</td>\n\t<td>This value will enable usage of the USB module, which would enable the usage of all of the USB features. The other UsbMgr features could still be enabled or disabled individually through the use of the other parms in the UsbMgr Feature Type.</td>\n  </tr>\n  <tr>\n    <td>Disable</td>\n    <td>\"2\"</td>\n\t<td>This value will disable the usage of the USB module, which would disable the usage of all of the USB features.</td>\n  </tr>\n</table>\n</div>\t\n\n###USB External Storage Usage\nSettable if: The \"USB Module Usage\" value is not \"Disable\" \n\nPivotal parm: No\n\nParm name: UsbExternalStorageUsage\n\nDescription: \n\n>This parm allows you to specify whether the use of USB External Storage will be allowed. This would allow or disallow the device to access data an external USB mass storage device, such as a flash drive, through an OTG cable.\n\n>**Note:** This feature is supported on devices that are running KitKat versions of Android like the TC70.\n\n<div class=\"parm-table\">\n <table class=\"table\">\n\t<tr>\n\t\t<th>Parm Option Name</th>\n\t\t<th>Parm Value</th>\n\t\t<th>Description</th>\n\t</tr>\n  <tr>\n    <td>Do not change</td>\n    <td>\"0\"</td>\n\t<td>This value (or the absence of this parm from the XML) will not make any change to whether or not USB External Storage can be used.</td>\n  </tr>\n  <tr>\n    <td>Enable</td>\n    <td>\"1\"</td>\n\t<td>This value will cause the state of the USB External Storage Option to be unlocked, allowing it to be changed by the device user.</td>\n  </tr>\n  <tr>\n    <td>Disable</td>\n    <td>\"2\"</td>\n\t<td>This value will cause the state of the USB External Storage Option to be locked, preventing it from being changed by the device user.</td>\n  </tr>\n</table>\n</div>\t\n\n###USB ADB Usage\nSettable if: The \"USB Module Usage\" value is not \"Disable\" \n\nPivotal parm: No\n\nParm name: UsbADBUsage\n\nDescription: \n\n>This parm allows you to specify whether the use of the Android Debug Bridge (ADB) Mode will be allowed. ADB is a command line tool that allows communication with the Android device from a PC. For example, with ADB, you can use commands that can copy files, install apps, run shell commands, etc.\n\n<div class=\"parm-table\">\n <table class=\"table\">\n\t<tr>\n\t\t<th>Parm Option Name</th>\n\t\t<th>Parm Value</th>\n\t\t<th>Description</th>\n\t</tr>\n  <tr>\n    <td>Do not change</td>\n    <td>\"0\"</td>\n\t<td>This value (or the absence of this parm from the XML) will not make any change to whether or not USB ADB mode can be used.</td>\n  </tr>\n  <tr>\n    <td>Enable</td>\n    <td>\"1\"</td>\n\t<td>This value will cause the state of the USB ADB mode Option to be unlocked, allowing it to be changed by the device user.</td>\n  </tr>\n  <tr>\n    <td>Disable</td>\n    <td>\"2\"</td>\n\t<td>This value will cause the state of the USB ADB mode Option to be locked, preventing it from being changed by the device user.</td>\n  </tr>\n</table>\n</div>\t\n\n###Access device storage from PC via USB\nSettable if: The \"USB Module Usage\" value is not \"Disable\" \n\nPivotal parm: Yes\n\nDescription: \n\n>This parm allows you to specify whether all methods to access device storage from PC via USB, such as USB Mass Storage (UMS), Media Transfer Protocol (MTP), and Picture Transfer Protocol (PTP), will be allowed.\n\n>**Note:** This feature is supported on devices that are running KitKat versions of Android like the TC70.\n\n<div class=\"parm-table\">\n <table class=\"table\">\n\t<tr>\n\t\t<th>Parm Option Name</th>\n\t\t<th>Parm Value</th>\n\t\t<th>Description</th>\n\t</tr>\n  <tr>\n    <td>Do not change</td>\n    <td>\"0\"</td>\n\t<td>This value (or the absence of this parm from the XML) will not make any change to whether or not all of the methods to access device storage from a PC via USB can be used. This value will also allow you to enable or disable the usage of UMS, MTP, or PTP individually through use of the other parms in the UsbMgr Feature Type.</td>\n  </tr>\n  <tr>\n    <td>Enable</td>\n    <td>\"1\"</td>\n\t<td>This value will cause the state of all of the methods to access device storage from a PC via USB to be unlocked, allowing it to be changed by the device user.</td>\n  </tr>\n  <tr>\n    <td>Disable</td>\n    <td>\"2\"</td>\n\t<td>This value will cause the state of all of the methods to access device storage from a PC via USB to be locked, preventing it from being changed by the device user.</td>\n  </tr>\n</table>\n</div>\t\n\n####Access device storage from PC via USB UMS\nSettable if: The \"USB Module Usage\" value is not \"Disable\" *AND* the \"Access device storage from PC via USB\" value is not \"Enable\" or \"Disable\"\n\nPivotal parm: No\n\nParm name: UsbUMSAccessDeviceStorageUsage\n\nDescription: \n\n>This parm allows you to specify whether access to the device storage from a PC via USB Mass Storage (UMS) will be allowed. This is the standard protocol used by flash drives, external hard drives, SD cards, and other USB storage devices. The drive is completely available to the computer, just as if it were an internal drive.\n\n>**Note:** This feature is supported on devices that are running KitKat versions of Android like the TC70.\n\n<div class=\"parm-table\">\n <table class=\"table\">\n\t<tr>\n\t\t<th>Parm Option Name</th>\n\t\t<th>Parm Value</th>\n\t\t<th>Description</th>\n\t</tr>\n  <tr>\n    <td>Do not change</td>\n    <td>\"0\"</td>\n\t<td>This value (or the absence of this parm from the XML) will not make any change to whether or not access to the device storage from a PC via USB UMS can be used.</td>\n  </tr>\n  <tr>\n    <td>Enable</td>\n    <td>\"1\"</td>\n\t<td>This value will cause the state of the USB UMS Option to be unlocked, allowing it to be changed by the device user.</td>\n  </tr>\n  <tr>\n    <td>Disable</td>\n    <td>\"2\"</td>\n\t<td>This value will cause the state of the USB UMS Option to be locked, preventing it from being changed by the device user.</td>\n  </tr>\n</table>\n</div>\n\n####Access device storage from PC via USB MTP\nSettable if: The \"USB Module Usage\" value is not \"Disable\" *AND* the \"Access device storage from PC via USB\" value is not \"Enable\" or \"Disable\"\n\nPivotal parm: No\n\nParm name: UsbMTPAccessDeviceStorageUsage\n\nDescription: \n\n>This parm allows you to specify whether access to the device storage from a PC via USB Media Transfer Protocol (MTP) will be allowed. If MTP is turned on, it would cause the device to appear as a \"Media Device\" on the computer that it is connected to. This protocol is used for transferring audio files.\n\n>**Note:** This feature will be supported on devices that are running KitKat versions of Android like the TC70.\n\n<div class=\"parm-table\">\n <table class=\"table\">\n\t<tr>\n\t\t<th>Parm Option Name</th>\n\t\t<th>Parm Value</th>\n\t\t<th>Description</th>\n\t</tr>\n  <tr>\n    <td>Do not change</td>\n    <td>\"0\"</td>\n\t<td>This value (or the absence of this parm from the XML) will not make any change to whether or not access to the device storage from a PC via USB MTP can be used.</td>\n  </tr>\n  <tr>\n    <td>Enable</td>\n    <td>\"1\"</td>\n\t<td>This value will cause the state of the USB MTP Option to be unlocked, allowing it to be changed by the device user.</td>\n  </tr>\n  <tr>\n    <td>Disable</td>\n    <td>\"2\"</td>\n\t<td>This value will cause the state of the USB MTP Option to be locked, preventing it from being changed by the device user.</td>\n  </tr>\n</table>\n</div>\n\n####Access device storage from PC via USB PTP\nSettable if: The \"USB Module Usage\" value is not \"Disable\" *AND* the \"Access device storage from PC via USB\" value is not \"Enable\" or \"Disable\"\n\nPivotal parm: No\n\nParm name: UsbPTPAccessDeviceStorageUsage\n\nDescription: \n\n>This parm allows you to specify whether access to the device storage from a PC via USB Picture Transfer Protocol (PTP) will be allowed. This protocol is commonly used for communicating with digital cameras.\n\n>**Note:** This feature is supported on devices that are running KitKat versions of Android like the TC70.\n\n<div class=\"parm-table\">\n <table class=\"table\">\n\t<tr>\n\t\t<th>Parm Option Name</th>\n\t\t<th>Parm Value</th>\n\t\t<th>Description</th>\n\t</tr>\n  <tr>\n    <td>Do not change</td>\n    <td>\"0\"</td>\n\t<td>This value (or the absence of this parm from the XML) will not make any change to whether or not access to the device storage from a PC via USB PTP can be used.</td>\n  </tr>\n  <tr>\n    <td>Enable</td>\n    <td>\"1\"</td>\n\t<td>This value will cause the state of the USB PTP Option to be unlocked, allowing it to be changed by the device user.</td>\n  </tr>\n  <tr>\n    <td>Disable</td>\n    <td>\"2\"</td>\n\t<td>This value will cause the state of the USB PTP Option to be locked, preventing it from being changed by the device user.</td>\n  </tr>\n</table>\n</div>\n\n## Feature Compatibility\n\n<iframe src=\"compare.html#mx=4.3&csp=UsbMgr&os=JB&embed=true\"></iframe> "},{"key":"guide-csp-wifi","name":" Wi-Fi","md":"# Wi-Fi\n\n## About Wi-Fi\n\n### Overview\n\nThe Wi-Fi feature type allows you to manage a device's Wi-Fi settings as well as manage the network profiles to be used for connecting and remembering networks.\n\n> **Note:** In other CSPs, the terms \"enable\" and \"disable\" refer to whether or not the user will be allowed to turn the device on or off at all. However, in this CSP, \"enable\" and \"disable\" are equivalent to \"turn on\" and \"turn off\".\n\n\n### Main Functionality\n\n* Enable Wi-Fi\n* Disable Wi-Fi\n* Set Wi-Fi to Never Sleep\n* Set Wi-Fi to Never Sleep When Plugged In\n* Set Wi-Fi to Always Sleep\n* Use Network Notifications\n* Do Not Use Network Notifications\n* Enable Auto Country Selection\n* Manually Select country\n* Set the RF Band\n* Enable Auto RF Band Selection\n* Enable Fusion Advanced Logging\n* Enable the Device to set the Clock off the AP (Access Point) Time\n* Enable HF SR (Hyper Fast Secure Roam)\n* Disable HR SR (Hyper Fast Secure Roam)\n* Enable CCKM (Cisco Centralized Key Management)\n* Disable CCKM (Cisco Centralized Key Management)\n* Enable FT (Fast Transition)\n* Disable FT (Fast Transition)\n* Enable FTRIC (Fast Transition Resource Request)\n* Disable FTRIC (Fast Transition Resource Request)\n* Enable OKC (Opportunistic Key Caching)\n* Disable OKC (Opportunistic Key Caching)\n* Enable PMKID Caching\n* Disable PMKID Caching\n* Enable PreAuth\n* Disable PreAuth\n* Set Power Savings Mode to Always Active\n* Set Power Savings Mode to WMM-PS\n* Set Power Savings Mode to Null Data Power Save\n* Set Power Savings Mode to PS-POLL\n* Enable Advanced Logging\n* Disable Advanced Logging\n* Enable FIPS Compliance\n* Disable FIPS Compliance\n* Enable Restricted WLAN Settings UI\n* Disable Restricted WLAN Settings UI\n* Enable Radio Resource Measurement(802.?11K)\n* Disable Radio Resource Measurement(802.?11K)\n* Enable Management Frame Protection Mode(802.?11w)\n* Disable Management Frame Protection Mode(802.?11w)\n* Set the band preference\n* Enable FTOverTheDS\n* Disable FTOverTheDS\n* Enable AggregatedFT\n* Disable AggregatedFT\n* Enable ScanAssist\n* Disable ScanAssist\n* Enable Coverage Hole Detection\n* Disable Coverage Hole Detection\n* Enable Sub-Net Roam\n* Disable Sub-Net Roam\n* Enable WANCountry\n* Disable WANCountry\n* Add a Wi-Fi Network\n* Remove a Wi-Fi Network\n* Connect to a Wi-Fi Network\n* Disconnect from a Wi-Fi Network\n* Enable an Existing Wi-Fi Network\n* Disable an Existing Wi-Fi Network\n* Disable all Existing Wi-Fi Networks\n* Remove all Existing Wi-Fi Networks\n\n##Parameter Notes\n### Target OS\nPivotal parm: Yes\n\nDescription: \n\n>Specify the target OS of the device.\n\n<div class=\"parm-table\">\n <table class=\"table\">\n\t<tr>\n\t\t<th>Parm Option Name</th>\n\t\t<th>Parm Value</th>\n\t\t<th>Description</th>\n\t</tr>\n  <tr>\n    <td>Android</td>\n    <td>\"2\"</td>\n    <td>This value (or the absence of this parm from the XML) will set the Target OS to Android.</td>\n  </tr>\n</table>\n</div>\n\t\n### Wi-Fi Enable \nPivotal parm: No\n\nParm name: WiFiAction\n\nDescription: \n\n>Turn the Wi-Fi radio on or off.\n\n> **Note:** In order for settings to be applied, Wi-Fi must be turned on. If you do not specify WiFi Enable in the profile, you will get an error when attempting to apply certain settings if the device's Wi-Fi is not already turned on. For example, all of the Network Actions, which are described later in this document, will require that Wi-Fi is turned on. However, other settings, such as Sleep Policy and Network Notification, do not require Wi-Fi to be turned on.\n\n>As a best practice, it is recommended that this is turned on whenever setting another Wi-Fi parm that requires to be on, as it is not harmful to enable the Wi-Fi again if it is already on.\n\n> **Note:** In other CSPs, the terms \"enable\" and \"disable\" refer to whether or not the user will be allowed to turn the device on or off at all. However, in this CSP, \"enable\" and \"disable\" are equivalent to \"turn on\" and \"turn off\".\n\n\n\n<div class=\"parm-table\">\n <table class=\"table\">\n\t<tr>\n\t\t<th>Parm Option Name</th>\n\t\t<th>Parm Value</th>\n\t\t<th>Description</th>\n\t</tr>\n  <tr>\n    <td>Do not change</td>\n    <td>\"0\"</td>\n\t<td>This value (or the absence of this parm from the XML) will not make any change to the whether the Wi-Fi radio is on or off.</td>\n  </tr>\n  <tr>\n    <td>Enable</td>\n    <td>\"enable\"</td>\n\t<td>This value will cause the Wi-Fi radio to be turned on.</td>\n  </tr>\n  <tr>\n    <td>Disable</td>\n    <td>\"disable\"</td>\n\t<td>This value will cause the Wi-Fi radio to be turned off.</td>\n  </tr>\n</table>\n</div>\t\n\n### Sleep Policy\nPivotal parm: No\n\nParm name: WifiSleepPolicy\n\nDescription: \n>Specifies the state of the Wi-Fi radio when the device suspends.\n\n>For Android devices, the device is suspended when the display turns off after idling for a certain amount of time. While the device is suspended, the device's software continues running in a lower power mode, meaning that the device itself is not turned off and software can run when the device is in this state. The amount of power consumption while in this state partially depends on what features are left on.\n\n<div class=\"parm-table\">\n <table class=\"table\">\n\t<tr>\n\t\t<th>Parm Option Name</th>\n\t\t<th>Parm Value</th>\n\t\t<th>Description</th>\n\t</tr>\n  <tr>\n    <td>Do not change</td>\n    <td>\"\"</td>\n\t<td>This value (or the absence of this parm from the XML) will not make any change to the current sleep policy on the device.</td>\n  </tr>\n  <tr>\n    <td>Never Sleep</td>\n    <td>\"AlwaysOn\"</td>\n\t<td>This value will leave the Wi-Fi radio on while the device's display is turned off and Wi-Fi can continue to be used by any software that is running. Existing Wi-Fi connections will be maintained as if the device was not suspended. For example, emails will continue to come in. This behavior may be preferred in some situations. However, this could significantly increase the drain on the battery and reduce the battery life.</td>\n  </tr>\n  <tr>\n    <td>Never Sleep When Plugged</td>\n    <td>\"PluggedIn\"</td>\n\t<td>This value will leave the Wi-Fi radio on while the display is turned off if the device is not running from battery power.</td>\n  </tr>\n  <tr>\n    <td>Always Sleep</td>\n    <td>\"NeverOn\"</td>\n\t<td>This value turns the Wi-Fi radio off while the device's display is turned off. Existing Wi-Fi connections will be dropped and will need to be re-established, if needed, when the display (and Wi-Fi) are turned back on. Software that is running cannot use Wi-Fi while it is off. This can significantly increase the battery life if communications are not needed when the device is suspended.</td>\n  </tr>\n</table>\n</div>\n\n### Network Notification\nPivotal parm: No\n\nParm name: NetworkNotification\n\nDescription: \n>Specifies whether or not to notify the user when an unknown, open network comes in range. If this setting is turned on, the user will be asked if they want to join the network, which could be useful for personal or dual use devices which might want to use a public Wi-Fi connection at some point. However, turning these notifications on is not recommended for devices that are supposed to be used only on a single corporate Wi-Fi network since it might be harmful to offer a user the opportunity to connect to a rogue, non-secure network.\n\n <div class=\"parm-table\">\n <table class=\"table\">\n\t<tr>\n\t\t<th>Parm Option Name</th>\n\t\t<th>Parm Values</th>\n\t\t<th>Description</th>\n\t</tr>\n  <tr>\n    <td>Do not change</td>\n    <td>\"\"</td>\n\t<td>This value (or the absence of this parm from the XML) will not make any change to the current network notification setting.</td>\n  </tr>\n  <tr>\n    <td>Use network notification</td>\n    <td>\"true\"</td>\n\t<td>This value will cause the user to be notified when an unknown, open network comes into range</td>\n  </tr>\n  <tr>\n    <td>Do not use network notification</td>\n    <td>\"false\"</td>\n\t<td>This value will cause the user to not be notified when an unknown, open network comes into range</td>\n  </tr>\n</table>\n</div>\n\n### Country Selection Auto/Manual\nPivotal parm: Yes\n\nDescription: \n>By leaving this option unchecked, the country may be determined by the router or access point setting. To manually select the country, you should select the checkbox. When doing this a country drop-down will appear.\n\n#### Country\nSettable if: The \"Configure Country (Auto/Manual)\" box is not checked\n\nPivotal parm: No\n\nParm name: Country\n\nDescription: \n>Sets the country to use for Wi-Fi regulatory setting. \n\n>When you choose 'AUTO' in the drop-down, 802.11d will be enabled. 802.11d is a mode where the device will listen for a country-specific beacon. It also will not transmit unless it can auto-detect the country, which can be beneficial because the device cannot transmit with a frequency that is inconsistent with the Wi-Fi infrastructure and is therefore less likely to violate country-specific regulations.\n\n>If a Wi-Fi infrastructure does not support, 802.11d, then the country that is used by this infrastructure will need to be selected so that the device can connect to it.\n\n <div class=\"parm-table\">\n <table class=\"table\">\n\t<tr>\n\t\t<th>Parm Option Name</th>\n\t\t<th>Parm Values</th>\n\t</tr>\n  <tr>\n    <td>AUTO (Use 802.11d)</td>\n    <td>\"AUTO\"</td>\n  </tr>\n  <tr>\n    <td>Algeria</td>\n    <td>\"DZ\"</td>\n  </tr>\n  <tr>\n    <td>Anguilla</td>\n    <td>\"AI\"</td>\n  </tr>\n  <tr>\n    <td>Argentina</td>\n    <td>\"AR\"</td>\n  </tr> \n  <tr>\n    <td>Australia</td>\n    <td>\"AU\"</td>\n  </tr> \n  <tr>\n    <td>Austria</td>\n    <td>\"AT\"</td>\n  </tr> \n  <tr>\n    <td>Bahamas</td>\n    <td>\"BS\"</td>\n  </tr> \n  <tr>\n    <td>Bahrain</td>\n    <td>\"BH\"</td>\n  </tr> \n  <tr>\n    <td>Barbados</td>\n    <td>\"BB\"</td>\n  </tr> \n  <tr>\n    <td>Belarus</td>\n    <td>\"BY\"</td>\n  </tr> \n  <tr>\n    <td>Belgium</td>\n    <td>\"BE\"</td>\n  </tr> \n  <tr>\n    <td>Bermuda</td>\n    <td>\"BM\"</td>\n  </tr> \n  <tr>\n    <td>Bolivia</td>\n    <td>\"BO\"</td>\n  </tr> \n  <tr>\n    <td>Bonaire</td>\n    <td>\"BQ\"</td>\n  </tr> \n  <tr>\n    <td>Bosnia and Herzegovina</td>\n    <td>\"BA\"</td>\n  </tr> \n  <tr>\n    <td>Brazil</td>\n    <td>\"BR\"</td>\n  </tr> \n  <tr>\n    <td>Bulgaria</td>\n    <td>\"BG\"</td>\n  </tr> \n  <tr>\n    <td>Canada</td>\n    <td>\"CA\"</td>\n  </tr>\n  <tr>\n    <td>Cayman Islands</td>\n    <td>\"KY\"</td>\n  </tr> \n  <tr>\n    <td>Chile</td>\n    <td>\"CL\"</td>\n  </tr>\n  <tr>\n    <td>China</td>\n    <td>\"CN\"</td>\n  </tr>\n  <tr>\n    <td>Christmas Island</td>\n    <td>\"CX\"</td>\n  </tr>  \n  <tr>\n    <td>Columbia</td>\n    <td>\"CO\"</td>\n  </tr> \n  <tr>\n    <td>Costa Rica</td>\n    <td>\"CR\"</td>\n  </tr>\n  <tr>\n    <td>Croatia</td>\n    <td>\"HR\"</td>\n  </tr>\n  <tr>\n    <td>Curacao</td>\n    <td>\"CW\"</td>\n  </tr> \n  <tr>\n    <td>Cyprus</td>\n    <td>\"CY\"</td>\n  </tr> \n  <tr>\n    <td>Czech Republic</td>\n    <td>\"CZ\"</td>\n  </tr> \n  <tr>\n    <td>Denmark</td>\n    <td>\"DK\"</td>\n  </tr> \n  <tr>\n    <td>Dominican Republic</td>\n    <td>\"DO\"</td>\n  </tr> \n  <tr>\n    <td>Ecuador</td>\n    <td>\"EC\"</td>\n  </tr> \n  <tr>\n    <td>Egypt</td>\n    <td>\"EG\"</td>\n  </tr> \n  <tr>\n    <td>El Salvador</td>\n    <td>\"SV\"</td>\n  </tr> \n  <tr>\n    <td>Estonia</td>\n    <td>\"EE\"</td>\n  </tr> \n  <tr>\n    <td>Falkland Islands(Malvinas)</td>\n    <td>\"FK\"</td>\n  </tr> \n  <tr>\n    <td>Finland</td>\n    <td>\"FI\"</td>\n  </tr> \n  <tr>\n    <td>France</td>\n    <td>\"FR\"</td>\n  </tr> \n    <tr>\n    <td>French Guiana</td>\n    <td>\"GF\"</td>\n  </tr>\n  <tr>\n    <td>Germany</td>\n    <td>\"DE\"</td>\n  </tr>\n  <tr>\n    <td>Greece</td>\n    <td>\"GR\"</td>\n  </tr>\n  <tr>\n    <td>Guadelope</td>\n    <td>\"GP\"</td>\n  </tr> \n  <tr>\n    <td>Guam</td>\n    <td>\"GU\"</td>\n  </tr> \n  <tr>\n    <td>Guatemala</td>\n    <td>\"GT\"</td>\n  </tr> \n  <tr>\n    <td>Guyana</td>\n    <td>\"GY\"</td>\n  </tr> \n  <tr>\n    <td>Haiti</td>\n    <td>\"HT\"</td>\n  </tr> \n  <tr>\n    <td>Honduras</td>\n    <td>\"HN\"</td>\n  </tr> \n  <tr>\n    <td>Hong Kong</td>\n    <td>\"HK\"</td>\n  </tr> \n  <tr>\n    <td>Hungary</td>\n    <td>\"HU\"</td>\n  </tr> \n  <tr>\n    <td>Iceland</td>\n    <td>\"IS\"</td>\n  </tr> \n  <tr>\n    <td>India</td>\n    <td>\"IN\"</td>\n  </tr> \n  <tr>\n    <td>Indonesia</td>\n    <td>\"ID\"</td>\n  </tr> \n  <tr>\n    <td>Ireland</td>\n    <td>\"IE\"</td>\n  </tr> \n  <tr>\n    <td>Israel</td>\n    <td>\"IL\"</td>\n  </tr> \n  <tr>\n    <td>Italy</td>\n    <td>\"IT\"</td>\n  </tr>\n   <tr>\n    <td>Jamaica</td>\n    <td>\"JM\"</td>\n  </tr> \n  <tr>\n    <td>Japan</td>\n    <td>\"JP\"</td>\n  </tr> \n  <tr>\n    <td>Jordan</td>\n    <td>\"JO\"</td>\n  </tr> \n  <tr>\n    <td>Kazakhstan</td>\n    <td>\"KZ\"</td>\n  </tr> \n  <tr>\n    <td>Kenya</td>\n    <td>\"KE\"</td>\n  </tr> \n  <tr>\n    <td>Korea Republic</td>\n    <td>\"KR\"</td>\n  </tr> \n  <tr>\n    <td>Kuwait</td>\n    <td>\"KW\"</td>\n  </tr> \n  <tr>\n    <td>Latvia</td>\n    <td>\"LV\"</td>\n  </tr> \n  <tr>\n    <td>Lebanon</td>\n    <td>\"LB\"</td>\n  </tr> \n  <tr>\n    <td>Liechtenstein</td>\n    <td>\"LI\"</td>\n  </tr> \n  <tr>\n    <td>Lithuania</td>\n    <td>\"LT\"</td>\n  </tr> \n  <tr>\n    <td>Luxembourg</td>\n    <td>\"LU\"</td>\n  </tr> \n  <tr>\n    <td>Macedonia, Former Yugoslav Republic</td>\n    <td>\"MK\"</td>\n  </tr> \n  <tr>\n    <td>Malaysia</td>\n    <td>\"MY\"</td>\n  </tr> \n  <tr>\n    <td>Malta</td>\n    <td>\"MT\"</td>\n  </tr> \n  <tr>\n    <td>Martinique</td>\n    <td>\"MQ\"</td>\n  </tr> \n  <tr>\n    <td>Mexico</td>\n    <td>\"MX\"</td>\n  </tr> \n  <tr>\n    <td>Montenegro</td>\n    <td>\"ME\"</td>\n  </tr> \n  <tr>\n    <td>Morocco</td>\n    <td>\"MA\"</td>\n  </tr> \n  <tr>\n    <td>Netherlands, Antilles</td>\n    <td>\"AN\"</td>\n  </tr>\n   <tr>\n    <td>Netherlands</td>\n    <td>\"NL\"</td>\n  </tr> \n  <tr>\n    <td>New Zealand</td>\n    <td>\"NZ\"</td>\n  </tr> \n  <tr>\n    <td>Nicaragua</td>\n    <td>\"NI\"</td>\n  </tr> \n  <tr>\n    <td>Nigeria</td>\n    <td>\"NG\"</td>\n  </tr> \n  <tr>\n    <td>Niue</td>\n    <td>\"NU\"</td>\n  </tr> \n  <tr>\n    <td>Norfolk Islands</td>\n    <td>\"NF\"</td>\n  </tr> \n  <tr>\n    <td>Northern Marina Islands</td>\n    <td>\"MP\"</td>\n  </tr> \n  <tr>\n    <td>Norway</td>\n    <td>\"NO\"</td>\n  </tr> \n  <tr>\n    <td>Oman</td>\n    <td>\"OM\"</td>\n  </tr> \n  <tr>\n    <td>Pakistan</td>\n    <td>\"PK\"</td>\n  </tr> \n  <tr>\n    <td>Panama</td>\n    <td>\"PA\"</td>\n  </tr> \n  <tr>\n    <td>Paraguay</td>\n    <td>\"PY\"</td>\n  </tr> \n  <tr>\n    <td>Peru</td>\n    <td>\"PE\"</td>\n  </tr> \n  <tr>\n    <td>Philippines</td>\n    <td>\"PH\"</td>\n  </tr> \n  <tr>\n    <td>Poland</td>\n    <td>\"PL\"</td>\n  </tr> \n  <tr>\n    <td>Portugal</td>\n    <td>\"PT\"</td>\n  </tr> \n  <tr>\n    <td>Puerto Rico</td>\n    <td>\"PR\"</td>\n  </tr> \n  <tr>\n    <td>Qatar</td>\n    <td>\"QA\"</td>\n  </tr> \n  <tr>\n    <td>Romania</td>\n    <td>\"RO\"</td>\n  </tr> \n  <tr>\n    <td>Russian Federation</td>\n    <td>\"RU\"</td>\n  </tr> \n  <tr>\n    <td>St. Maarten</td>\n    <td>\"SX\"</td>\n  </tr> \n  <tr>\n    <td>Saudi Arabia</td>\n    <td>\"SA\"</td>\n  </tr> \n  <tr>\n    <td>Serbia</td>\n    <td>\"RS\"</td>\n  </tr> \n  <tr>\n    <td>Singapore</td>\n    <td>\"SG\"</td>\n  </tr> \n  <tr>\n    <td>Slovakia</td>\n    <td>\"SK\"</td>\n  </tr> \n  <tr>\n    <td>Slovenia</td>\n    <td>\"SI\"</td>\n  </tr> \n  <tr>\n    <td>South Africa</td>\n    <td>\"ZA\"</td>\n  </tr> \n  <tr>\n    <td>Spain</td>\n    <td>\"ES\"</td>\n  </tr> \n  <tr>\n    <td>Sri Lanka</td>\n    <td>\"LK\"</td>\n  </tr> \n  <tr>\n    <td>Sweden</td>\n    <td>\"SE\"</td>\n  </tr> \n  <tr>\n    <td>Switzerland</td>\n    <td>\"CH\"</td>\n  </tr> \n  <tr>\n    <td>Taiwan, Province of China</td>\n    <td>\"TW\"</td>\n  </tr> \n  <tr>\n    <td>Thailand</td>\n    <td>\"TH\"</td>\n  </tr> \n  <tr>\n    <td>Trinidad and Tobago</td>\n    <td>\"TT\"</td>\n  </tr> \n  <tr>\n    <td>Tunisia</td>\n    <td>\"TN\"</td>\n  </tr> \n  <tr>\n    <td>Turkey</td>\n    <td>\"TR\"</td>\n  </tr> \n  <tr>\n    <td>Ukraine</td>\n    <td>\"UA\"</td>\n  </tr> \n  <tr>\n    <td>United Arab Emirates</td>\n    <td>\"AE\"</td>\n  </tr> \n  <tr>\n    <td>United Kingdom</td>\n    <td>\"GB\"</td>\n  </tr> \n  <tr>\n    <td>U.S.A.</td>\n    <td>\"US\"</td>\n  </tr> \n  <tr>\n    <td>Uruguay</td>\n    <td>\"UY\"</td>\n  </tr> \n  <tr>\n    <td>Venezuela</td>\n    <td>\"VE\"</td>\n  </tr> \n  <tr>\n    <td>Vietnam</td>\n    <td>\"VN\"</td>\n  </tr> \n  <tr>\n    <td>Virgin Islands(British)</td>\n    <td>\"VG\"</td>\n  </tr> \n  <tr>\n    <td>Virgin Islands(US)</td>\n    <td>\"VI\"</td>\n  </tr>\n</table> \n</div>\n\n### RF Band\nPivotal parm: Yes\n\nDescription: \n>Specifies the 802.11 band(s) to use. The bands to use will usually be determined automatically through negotiation with the Wi-Fi infrastructure. However, in some cases, the Wi-Fi infrastructure may be shared amongst multiple uses, which may mean that it would be preferable to limit the devices to one band and leave the other bands for other purposes. \n\n<div class=\"parm-table\">\n <table class=\"table\">\n\t<tr>\n\t\t<th>Parm Option Name</th>\n\t\t<th>Parm Value</th>\n\t\t<th>Description</th>\n\t</tr>\n  <tr>\n    <td>Unchanged</td>\n    <td>\"\"</td>\n\t<td>This value (or the absence of this parm from the XML) will not make any change to the current selected band on the device.</td>\n  </tr>\n  <tr>\n    <td>2.4GHZ</td>\n    <td>\"2.4GHz\"</td>\n\t<td>This value will enable 2.4GHz band</td>\n  </tr>\n  <tr>\n    <td>5.0GHZ</td>\n    <td>\"5.0GHz\"</td>\n\t<td>This value will enable 5.0GHz band</td>\n  </tr>\n  <tr>\n    <td>Auto</td>\n    <td>\"Auto\"</td>\n\t<td>This value will enable both bands and connect automatically to either</td>\n  </tr>\n</table>\n</div>\n\n#### 2.4GHz Channels \nSettable if: The RF Band that is selected is either 2.4GHz or Auto\n\nPivotal parm: No\n\nParm name: 2.4GHzChannels\n\nDescription: \n>Enable the specified channels in the 2.4GHz band. In most cases, if the 2.4GHZ band is allowed to be used, then the channels in this band that should be used can be determined automatically through negotiation with the Wi-Fi infrastructure. However, it may be beneficial to control the channels manually because different channels or sets of channels might be used for different uses. It may be preferable to limit the devices to only use certain channels so that other channels are left for other purposes. \n\nParm value input rules: \n\n* String containing a set of valid channels.\n\t* Not all channels are available in all every country. Please see the link below for more information:\n\t\t* https://en.wikipedia.org/wiki/List_of_WLAN_channels\n* The minimum length is 0 characters and the maximum length is 64 characters.\n* Comma separated and may contain a range specified with a dash '-'. Example: 1,7-10\n\n#### 5.0GHz Channels \nSettable if: The RF Band that is selected is either 5.0GHz or Auto\n\nPivotal parm: No\n\nParm name: 5.0GHzChannels\n\nDescription: \n>Enable the specified channels in the 5.0GHz band. In most cases, if the 5.0GHZ band is allowed to be used, then the channels in this band that should be used can be determined automatically through negotiation with the Wi-Fi infrastructure. However, it may be beneficial to control the channels manually because different channels or sets of channels might be used for different uses. It may be preferable to limit the devices to only use certain channels so that other channels are left for other purposes.\n\nParm value input rules: \n\n* String containing a set of valid channels. \n\t* Not all channels are available in all every country. Please see the link below for more information:\n\t\t* https://en.wikipedia.org/wiki/List_of_WLAN_channels\n* The minimum length is 0 characters and the maximum length is 64 characters.\n* Comma separated and may contain a range specified with a dash '-'. Example: 36-60\n\n### Specify Diagnostic Options\nPivotal parm: Yes\n\nDescription: \n>Specify whether Diagnostic Options will be used. When turned on, Fusion Advanced Logging can also be turned on. This option can be used to collect additional information for troubleshooting but can impact the performance of a device.\n\n> **Note:** In most cases, this option should not be used except under the direction of Zebra support staff.\n\n#### Fusion Advanced Logging\nSettable if: The \"Specify Diagnostic Options\" box is checked\n\nPivotal parm: No\n\nParm name: FusionAdvancedLogging\n\nDescription: \n>Specify whether Fusion Advanced Logging will be used\n\n### Specify Advanced Options\n\nDescription: \n>Specify whether Advanced Options will be used. In most cases, these options should not be used except under the direction of Zebra support staff. More information about the Advanced Options that can be set, please see [this page.](#guide-csp-wifiAdvancedOptions)\n\n### Network Action\nPivotal parm: Yes\n\nDescription: \n>This is used to manage the Wi-Fi network profiles on the device. A given device can have zero or more Wi-Fi network profiles defined, which are used to specify the information that is needed for the device to connect to a single Wi-Fi network. These profiles can each be enabled or disabled. An enabled Wi-Fi network profile can be used to connect to a network and a disabled profile cannot be used to connect to a network. At any given time, the device can be connected to at most one network using a corresponding Wi-Fi network profile. The potential network connections are controlled by which profiles are defined and enabled on the device. It is also possible to force a connection to the network associated with a specific Wi-Fi network profile.\n\n<div class=\"parm-table\">\n <table class=\"table\">\n\t<tr>\n\t\t<th>Parm Option Name</th>\n\t\t<th>Parm Value</th>\n\t\t<th>Description</th>\n\t</tr>\n  <tr>\n    <td>Do Nothing</td>\n    <td>\"\"</td>\n\t<td>This value (or the absence of this parm from the XML) will not cause any Network Actions to be performed.</td>\n  </tr>\n  <tr>\n    <td>Add a New Network</td>\n    <td>\"Add\"</td>\n\t<td>This value will add a new profile with the provided profile settings. For the options that will be presented when choosing to add a new network, please see the following \"SSID\" parm and the \"Add a New Network Options\" section below</td>\n  </tr>\n  <tr>\n    <td>Remove an Existing Network</td>\n    <td>\"Remove\"</td>\n\t<td>This value will remove the a network profile based on the SSID</td>\n  </tr>\n  <tr>\n    <td>Connect to an Existing Network</td>\n    <td>\"Connect\"</td>\n\t<td>This value will initiate a connection to the network based on the SSID</td>\n  </tr>\n    <tr>\n    <td>Disconnect from an Existing Network </td>\n    <td>\"Disconnect\"</td>\n\t<td>This value will disconnect from a network based on the SSID</td>\n  </tr>\n  <tr>\n    <td>Enable an Existing Network</td>\n    <td>\"Enable\"</td>\n\t<td>This value will enable a network profile based on the SSID</td>\n  </tr>\n  <tr>\n    <td>Disable an Existing Network</td>\n    <td>\"Disable\"</td>\n\t<td>This value will disable a network profile based on the SSID</td>\n  </tr>\n  <tr>\n    <td>Disable All Existing Networks</td>\n    <td>\"DisableAll\"</td>\n\t<td>This value will disable all network profiles</td>\n  </tr>\n    <tr>\n    <td>Remove All Existing Networks</td>\n    <td>\"RemoveAll\"</td>\n\t<td>This value will remove all network profiles</td>\n  </tr>\n</table>\n</div>\n\n#### SSID\nSettable if: The Network Action is any option other than \"Do Nothing\", \"Disable All Existing Networks\", or \"Remove All Existing Networks\"\n\nPivotal parm: No\n\nParm name: SSID\n\nDescription: \n>This is the SSID name of the network, which is the primary mechanism used to identify a Wi-Fi network and is used to identify the Wi-Fi network profile to be acted on. Therefore, any Network Action that is used to affect a single profile need to specify the SSID to select the desired profile.\n\nParm value input rules: \n\n* String with a minimum size of 1 character and a maximum size of 32 characters\n\n### Add a New Network Options\nThe following parms are the parameters that are used for adding a network, in addition to the SSID parm above. \n\n#### Security Mode \nSettable if: The Network Action is \"Add a New Network\"\n\nPivotal parm: Yes\n\nDescription: \n>This specifies the Security Mode used by the network, which determines the degree or class of security to be used on the device. Based on the Security Mode, more or fewer security options will be offered.\n\n<div class=\"parm-table\">\n <table class=\"table\">\n\t<tr>\n\t\t<th>Parm Option Name</th>\n\t\t<th>Parm Value</th>\n\t\t<th>Description</th>\n\t</tr>\n  <tr>\n    <td>Open</td>\n    <td>\"0\"</td>\n\t<td>An open network indicates that the network uses no security. These kinds of networks are generally not advised to be used for transmitting sensitive data unless other protection mechanisms are used, such as VPNs, data encryption, etc. No additional security information will need to be supplied to configure these networks.</td>\n  </tr>\n  <tr>\n    <td>Personal</td>\n    <td>\"1\"</td>\n\t<td>This indicates that the network uses basic security. A Pre-Shared Key (PSK) or Wired Equivalency Privacy (WEP) key, which is known to both the device and the Wi-Fi infrastructure, is used to encrypt data. These networks are more secure than open networks, but may be compromised if the keys are not handled securely and/or are not changed periodically. Security information pertaining to the required key will need to be supplied to configure these networks.</td>\n  </tr>\n  <tr>\n    <td>Enterprise</td>\n    <td>\"2\"</td>\n\t<td>This indicates that the network uses 802.1x Extensible Authentication Protocol (EAP) security. These networks use authentication to establish the entitlement of a device to join the network and then distribute necessary keys once this entitlement has been verified. Security information pertaining to the EAP type and authentication credentials to be used will need to be supplied to configure these networks.</td>\n  </tr>\n</table>\n</div>\n\n#### WPA Mode\nSettable if: The Network Action is \"Add a New Network\" *AND* the Security Mode is \"Personal\" or \"Enterprise\"\n\nPivotal parm: Yes\n\nDescription: \n>When the selected Security Mode is \"Personal\" or \"Enterprise\", the WPA Mode must be specified to determine what sort of key will then be used.\n\n> **Note:** WEP is not supported with a Enterprise Security Mode. It is only supported using Personal Security Mode.\n\n<div class=\"parm-table\">\n <table class=\"table\">\n\t<tr>\n\t\t<th>Parm Option Name</th>\n\t\t<th>Parm Value</th>\n\t\t<th>Description</th>\n\t</tr>\n  <tr>\n    <td>WPA</td>\n    <td>\"1\"</td>\n\t<td>This indicates that the network requires encryption using the Wi-Fi Protected Access (WPA) standard. WPA only performs encryption using the Temporal Key Integrity Protocol. A TKIP-compatible key will therefore need to be specified.</td>\n  </tr>\n  <tr>\n    <td>WPA2</td>\n    <td>\"2\"</td>\n\t<td>This indicates that the network requires encryption using the Wi-Fi Protected Access version 2 (WPA2) standard. WPA2 supports encryption using either the Temporal Key Integrity Protocol (TKIP) for backward compatibility with WPA, or the more secure Advanced Encryption Standard (AES) algorithm.  A decision about whether to use TKIP or AES (or auto-select) will need to be made and then a TKIP or AES-compatible key will need to be specified.</td>\n  </tr>\n  <tr>\n    <td>WPA/WPA2</td>\n    <td>\"3\"</td>\n\t<td>This indicates that the network supports both the Wi-Fi Protected Access (WPA) standard and the Wi-Fi Protected Access version 2 (WPA2) standard. This is essentially the same effect as selecting WPA2 since WPA2 supports backward compatibility with WPA.</td>\n  </tr>\n  <tr>\n    <td>WEP</td>\n    <td>\"4\"</td>\n\t<td>This indicates that the network requires encryption using the older, and less secure, Wired Equivalency Privacy (WEP) standard. A decision about the WEP key size to use will need to be made and then a WEP key of the selected size will need to be specified.</td>\n  </tr>\n</table>\n</div>\n\n#### Authentication\nSettable if: The Network Action is \"Add a New Network\" *AND* the Security Mode is \"Enterprise\"\n\nPivotal parm: No\n\nParm name: Authentication\n\nDescription: \n>This is the Authentication Mode used by the network. When a Security Mode of \"Enterprise\" is selected, an Authentication Mode will need to be specified to determine how authentication will be performed as part of the 802.1x EAP type used by the network.\n\n<div class=\"parm-table\">\n <table class=\"table\">\n\t<tr>\n\t\t<th>Parm Option Name</th>\n\t\t<th>Parm Value</th>\n\t\t<th>Description</th>\n\t</tr>\n  <tr>\n    <td>EAP-TLS</td>\n    <td>\"1\"</td>\n\t<td>This indicates that the network requires authentication using the 802.1x Extensible Authentication Protocol - Transport Layer Security (EAP-TLS) standard (RFC 5216). EAP-TLS requires a device identity to be specified and requires that a client certificate be specified to prove the authenticity of the device identity. In all EAP modes, an optional certificate may be specified to help verify the identity of the authentication server.\n</td>\n  </tr>\n  <tr>\n    <td>EAP-FAST-GTC</td>\n    <td>\"13\"</td>\n\t<td>This indicates that the network requires authentication using a token generated using a Generic Token Card (GTC) within an anonymous TLS tunnel established using the 802.1x Extensible Authentication Protocol - Flexible Authentication via Secure Tunneling (EAP-FAST) standard (RFC 5422). EAP-FAST-GTC requires a device identity to be specified and requires that a token value (typically obtained from a physical token device) be specified to prove the authenticity of that device identity.  An optional client certificate may also be specified to verify the authenticity of the device identity. In all EAP modes, an optional certificate may be specified to help verify the identity of the authentication server.\n</td>\n  </tr>\n  <tr>\n    <td>EAP-FAST-MSCHAPV2</td>\n    <td>\"11\"</td>\n\t<td>This indicates that the network requires authentication using the Microsoft Challenge Authentication Protocol Version 2 (MSCHAPV2) within an anonymous TLS tunnel established using the 802.1x Extensible Authentication Protocol - Flexible Authentication via Secure Tunneling (EAP-FAST) standard (RFC 5422). EAP-FAST-MSCHAPV2 requires a device identity to be specified and requires that a password be specified to prove the authenticity of that device identity.  An optional client certificate may also be specified to verify the authenticity of the device identity. In all EAP modes, an optional certificate may be specified to help verify the identity of the authentication server.\n</td>\n  </tr>\n  <tr>\n    <td>EAP-TTLS-PAP</td>\n    <td>\"8\"</td>\n\t<td>This indicates that the network requires authentication using the Password Authentication Protocol (PAP) within a secure TLS tunnel established using the 802.1x Extensible Authentication Protocol - Tunneled Transport Layer Security (EAP-TTLS) standard (RFC 5281). EAP-TTLS-PAP requires a device identity to be specified and requires that a password be specified to prove the authenticity of that device identity.  An optional client certificate may also be specified to verify the authenticity of the device identity. In all EAP modes, an optional certificate may be specified to help verify the identity of the authentication server.\n</td>\n  </tr>\n   <tr>\n    <td>EAP-TTLS-MSCHAP</td>\n    <td>\"6\"</td>\n\t<td>This indicates that the network requires authentication using the Microsoft Challenge Authentication Protocol (MSCHAP) within a secure TLS tunnel established using the 802.1x Extensible Authentication Protocol - Tunneled Transport Layer Security (EAP-TTLS) standard (RFC 5281). EAP-TTLS-MSCHAP requires a device identity to be specified and requires that a password be specified to prove the authenticity of that device identity.  An optional client certificate may also be specified to verify the authenticity of the device identity. In all EAP modes, an optional certificate may be specified to help verify the identity of the authentication server.\n</td>\n  </tr>\n  <tr>\n    <td>EAP-TTLS-MSCHAPV2</td>\n    <td>\"7\"</td>\n\t<td>This indicates that the network requires authentication using the Microsoft Challenge Authentication Protocol Version 2 (MSCHAPV2) within a secure TLS tunnel established using the 802.1x Extensible Authentication Protocol - Tunneled Transport Layer Security (EAP-TTLS) standard (RFC 5281). EAP-TTLS-MSCHAPV2 requires a device identity to be specified and requires that a password be specified to prove the authenticity of that device identity.  An optional client certificate may also be specified to verify the authenticity of the device identity. In all EAP modes, an optional certificate may be specified to help verify the identity of the authentication server.\n</td>\n  </tr>\n  <tr>\n    <td>LEAP</td>\n    <td>\"4\"</td>\n\t<td>This indicates that the network requires authentication using the Lightweight Extensible Authentication Protocol (LEAP) defined by Cisco.  LEAP uses a modified version of MSCHAP without a secure tunnel and hence can be easily compromised. LEAP requires a device identity to be specified and requires that a password be specified to prove the authenticity of that device identity. Unlike standard EAP modes, LEAP does not support an optional certificate to help verify the identity of the authentication server.\n</td>\n  </tr>\n  <tr>\n    <td>PEAP-MSCHAPV2</td>\n    <td>\"2\"</td>\n\t<td>This indicates that the network requires authentication using the Microsoft Challenge Authentication Protocol Version 2 (MSCHAPV2) within a secure TLS tunnel established using the Protected Extensible Authentication Protocol, (PEAP) defined by Cisco Systems, Microsoft, and RSA Security. PEAP-MSCHAPV2 requires a device identity to be specified and requires that a password be specified to prove the authenticity of that device identity.  An optional client certificate may also be specified to verify the authenticity of the device identity. In all EAP modes, an optional certificate may be specified to help verify the identity of the authentication server.\n</td>\n  </tr> \n  <tr>\n    <td>PEAP-GTC</td>\n    <td>\"10\"</td>\n\t<td>This indicates that the network requires authentication using a token generated using a Generic Token Card (GTC) within a secure TLS tunnel established using the Protected Extensible Authentication Protocol, (PEAP) defined by Cisco Systems, Microsoft, and RSA Security. PEAP-GTC requires a device identity to be specified and requires that a token value (typically obtained from a physical token device) be specified to prove the authenticity of that device identity.  An optional client certificate may also be specified to verify the authenticity of the device identity. In all EAP modes, an optional certificate may be specified to help verify the identity of the authentication server.\n</td>\n  </tr>\n</table>\n</div>\n\n#### Authentication Details\nSpecific authentication settings when Enterprise Mode and specific Authentication modes are selected.\n\n##### **Identity**\nSettable if: The Network Action is \"Add a New Network\" *AND* the Security Mode is \"Enterprise\"\n\nPivotal parm: No\n\nParm name: Identity\n\nDescription: \n>Identity is used only when Authentication is used, which also means that this is only used when the Security Mode is \"Enterprise\". \n\n>This parm is used by the device to specify to the Authentication Server the Identity that it wishes to authenticate as. The Identity is synonymous with \"user name\" in many cases. However, different Authentication Servers can be configured to require different types of Identity, such as email addresses, device unique ID, etc. \n\n>The Identity is used as a way of getting accepted by the Authentication Server so that you can receive the encryption key that is needed to operate on the network. Once you are authenticated, the Identity does not have any further meaning and is not used to identify the device on the network.\n\n>Specifying an empty (length of zero) value (or the absence of this parm from the XML) will cause the Identity will not be set.\n\n\n##### **Anonymous Identity** \nSettable if: The Network Action is \"Add a New Network\" *AND* the Security Mode is \"Enterprise\" *AND* the Authentication is not \"EAP-TLS\" or \"LEAP\"\n\nPivotal parm: No\n\nParm name: AnonymousIdentity\n\nDescription: \n>When using an EAP type that has a secure tunnel over which authentication credentials can be delivered, it may be necessary to specify an Identity outside the tunnel as well as an Identity inside the tunnel. To protect the actual Identity from disclosure when sending it outside the tunnel, an Anonymous Identity can be sent outside the tunnel and the actual Identity, along with the password or other verifying credentials, can be sent inside the tunnel.\n\n>If no Anonymous Identity is specified, then the actual Identity will be sent outside the tunnel, if required. This may not be a problem since the password or other verifying credentials is only sent inside the tunnel, in modes that use a tunnel for secure credential delivery. So, using the actual Identity outside the tunnel would only risk disclosure of part of the information needed to authenticate. A separate Anonymous Identity can only be used if the Authentication Server is set up to support such use.\n\n>Specifying an empty (length of zero) value (or the absence of this parm from the XML) will cause the Anonymous Identity will not be set.\n\nParm value input rules: \n\n* String with a minimum of 0 characters and a maximum of 64 characters\n\n##### **Protect Password**\nSettable if: The Network Action is \"Add a New Network\" *AND* the Security Mode is \"Enterprise\" *AND* the Authentication is not \"EAP-TLS\"\n\nPivotal parm: No\n\nParm name: ProtectPassword\n\nDescription: \n>A Password is an authentication credential that is used to prove the authenticity of an Identity and therefore, is only used when the Security Mode is \"Enterprise\". All Authentication types require a Password except EAP-TLS, which uses a client certificate instead of a Password.\n\n>In most cases, it is important to protect a Password since, combined with the matching Identity, it can be used to authenticate and gain access to a network. Since the Password must be embedded within the XML, it is often desirable to encrypt the Password so that i cannot be extracted and exploited if the XML is intercepted. The ProtectPassword parm is used to indicate whether the Password will be specified in clear, unencrypted text or in encrypted form.\n\n##### **Password** \nPivotal parm: Yes\n\nDescription: \n>The password to be used to connect to the network. The parm name will change depending on the value of ProtectPassword.\n\n> **Note:** Currently, the parm value encryption process is not documented and the key that is needed to encrypt is not published. Therefore, an MDM cannot currently use an encrypted password since there is no way to store an encrypted, server-supplied password in an XML.\n\nParm value input rules: \n\n* String with a minimum of 0 characters and a maximum of 64 characters\n\nIf Protect Password is false:\n\n* Settable if: The Network Action is \"Add a New Network\" *AND* the Security Mode is \"Enterprise\" *AND* Authentication is not \"EAP-TLS\" *AND* Protect Password is false\n* Parm name: PasswordClear\n\nIf Protect Password is true:\n\n* Settable if: The Network Action is \"Add a New Network\" *AND* the Security Mode is \"Enterprise\" *AND* Authentication is not \"EAP-TLS\" *AND* Protect Password is true\n* Parm name: PasswordEncrypted\n\n##### **Server Certificate Name (optional)**\nSettable if: The Network Action is \"Add a New Network\" *AND* the Security Mode is \"Enterprise\" *AND* the Authentication is \"EAP-TLS\", \"PEAP-MSCHAPV2\", \"EAP-TTLS-MSCHAP\", \"EAP-FAST-MSCHAPV2\", \"EAP-TTLS-PAP\", \"PEAP-GTC\", \"EAP-FAST-MSCHAPV2\", or \"EAP-FAST-GTC\"\n\nPivotal parm: No\n\nParm name: OptionalServerCertificate\n\nDescription: \n>The name of the certificate alias that should be used to verify the server (Optional).\n\n>When Security Mode is \"Enterprise\", the device will not need to authenticate to an Authentication Server using the defined Authentication type. This will involve sending potentially sensitive authentication credentials to the Authentication Server. It is usually not recommended to do this unless the authenticity of the Authentication Server can be verified, for example, ensuring it is not a \"man in the middle\".\n\n>The device contacts and challenges the Authentication Server to assert and prove its Identity through the use of a server certificate. The device must be able to establish the validity of that certificate and must trust the chain of authority of the issuer of that certificate. This would all occur whether or not a Server Certificate Name is specified.\n\n>By default, a certificate asserted by an Authentication Server will be trusted if it can be verified to have been validly issued by any trusted certificate authority. If a Server Certificate Name is supplied, then the certificate asserted by an Authentication Server will be trusted only if it is verified to have been validly issued by that specific trusted certificate authority. This increases the security by preventing the use of certificates issued by authorities that are not trusted to issue certificates to authentication servers.\n\n>Specifying an empty (length of zero) value (or the absence of this parm from the XML) will cause the Optional Server Certificate to not be set.\n\nParm value input rules: \n\n* String with a minimum of 0 characters and a maximum of 64 characters\n\n##### **Client Certificate Name (mandatory)**\nSettable if: The Network Action is \"Add a New Network\" and the Security Mode is \"Enterprise\" and the Authentication is \"EAP-TLS\"\n\nPivotal parm: No\n\nParm name: MandatoryClientCertificate\n\nDescription: \n>The name of the certificate alias that should be used to join the network (Mandatory). When Authenticating using EAP-TLS, a client certificate is used instead of a Password. Consequently, when Authentication is EAP-TLS, a client certificate must be specified and a Password must not be specified.\n\nParm value input rules: \n\n* String with a minimum of 0 characters and a maximum of 64 characters\n\n##### **Client Certificate Name (optional)**\nSettable if: The Network Action is \"Add a New Network\" and the Security Mode is \"Enterprise\" the Authentication is \"PEAP-MSCHAPV2\", \"EAP-TTLS-MSCHAP\", \"EAP-TTLS-MSCHAPV2\", \"EAP-TTLS-PAP\", \"PEAP-GTC\", \"EAP-FAST-MSCHAPV2\", or \"EAP-FAST-GTC\"\n\nPivotal parm: No\n\nParm name: OptionalClientCertificate\n\nDescription: \n>The name of the certificate alias that should be used to join the network (Optional). When Authenticating using EAP types other than EAP-TLS, which would not require a client certificate, a client is still allowed. If used, the client certificate will be used to authenticate the device to the authentication server as part of the establishment of the secure tunnel over which further authentication credentials will be delivered. This means that the client certificate do not need to be unique, even if the authentication credentials are. The use of a client certificate can introduce an additional level of protection by requiring a device to possess a valid client certificate as well as valid authentication credentials. The client certificate serves as a first pass filter.\n\n>Specifying an empty (length of zero) value (or the absence of this parm from the XML) will cause the Optional Server Certificate to not be set.\n\nParm value input rules: \n\n* String with a minimum of 0 characters and a maximum of 64 characters\n\n#### Encryption Type\nPivotal parm: No\n\nDescription: \n>Type of encryption used by the network. The values that can be selected for Encryption Type will vary based on the selections made for Security Mode and WPA Mode. But a selection must always be made for Encryption Type whenever Security Mode is not \"Open\" (indicating no encryption).\n\nIf WPA is selected: \n\n* Settable if: The Network Action is \"Add a New Network\" *AND* the Security Mode is \"Personal\" or \"Enterprise\" *AND* the WPA Mode is WPA\n* Parm name: EncryptionWPA\n*  <div class=\"parm-table\"><table class=\"table\">\n\t<tr>\n\t\t<th>Parm Option Name</th>\n\t\t<th>Parm Value</th>\n\t\t<th>Description</th>\n\t</tr>\n  <tr>\n    <td>Default</td>\n    <td>\"0\" </td>\n\t<td>This value (or the absence of this parm from the XML) will not make any change to the encryption type that is currently used on the device.</td>\n  </tr>\n  <tr>\n    <td>TKIP</td>\n    <td>\"1\" </td>\n\t<td>This indicates that the network requires encryption to be performed using the Temporal Key Integrity Protocol (TKIP) standard with a per-packet key length of 128 bits.</td>\n  </tr>\n</table></div>\n\nIf WPA2 is selected:\n\n* Settable if: The Network Action is \"Add a New Network\" *AND* the Security Mode is \"Personal\" or \"Enterprise\" *AND* the WPA Mode is WPA2 or WPA/WPA2\n* Parm name: EncryptionWPA2\n*  <div class=\"parm-table\"><table class=\"table\">\n\t<tr>\n\t\t<th>Parm Option Name</th>\n\t\t<th>Parm Value</th>\n\t\t<th>Description</th>\n\t</tr>\n  <tr>\n    <td>Default</td>\n    <td>\"0\"</td>\n\t<td>This value (or the absence of this parm from the XML) will not make any change to the encryption type that is currently used on the device.</td>\n  </tr>\n  <tr>\n    <td>AES-CCMP</td>\n    <td>\"1\"</td>\n\t<td>This indicates that the network requires encryption to be performed using the Advanced Encryption Standard - Counter mode Cipher block chaining Message authentication code Protocol (AES-CCMP) standard, wherein the AES block cipher is used with a per-packet key length of 128 bits.</td>\n  </tr>\n  <tr>\n    <td>TKIP</td>\n    <td>\"2\"</td>\n\t<td>This indicates that the network requires encryption to be performed using the Temporal Key Integrity Protocol (TKIP) standard with a per-packet key length of 128 bits.</td>\n  </tr>\n  <tr>\n    <td>AES-CCMP/TKIP</td>\n    <td>\"3\"</td>\n\t<td>This indicates that the network allows the use of either the AES-CCMP standard or the TKIP encryption standard and the proper encryption type to use can be automatically determined by negotiation with the Wi-Fi infrastructure.</td>\n  </tr>\n</table></div>\n\nIf WEP is selected:\n\n* Settable if: The Network Action is \"Add a New Network\" *AND* the Security Mode is \"Personal\" or \"Enterprise\" *AND* the WPA Mode is WEP\n* Parm name: EncryptionWEP\n* <div class=\"parm-table\"><table class=\"table\">\n\t<tr>\n\t\t<th>Parm Option Name</th>\n\t\t<th>Parm Value</th>\n\t\t<th>Description</th>\n\t</tr>\n  <tr>\n    <td>WEP-40</td>\n    <td>\"1\"</td>\n\t<td>This indicates that the network requires encryption to be performed using the Wireless Equivalency Privacy (WEP) standard with a key size of 40 bits.</td>\n  </tr>\n  <tr>\n    <td>WEP-104</td>\n    <td>\"2\"</td>\n\t<td>This indicates that the network requires encryption to be performed using the Wireless Equivalency Privacy (WEP) standard with a key size of 104 bits.</td>\n  </tr>\n</table></div> \n\n#### Encryption Key Details\t\n\n##### **Key Type**\nSettable if: The Network Action is \"Add a New Network\" and the Security Mode is \"Personal\"\n\nPivotal parm: Yes\n\nDescription: \n>Specify the type of encryption key to be used by the network. This key is only specified when the Security Mode is \"Personal\" since the \"Open\" Security Mode does not use encryption and the \"Enterprise\" Security Mode distributes keys automatically following Authentication.\n\n>An encryption key can be specified using one of two methods: \n\n>* A hexadecimal value of the actual key\n>* A passphrase that can be used to generate a key using a pre-defined algorithm\n\n>The method that is used usually depends on the configuration of the Wi-Fi infrastructure that implements the network. This is because the key to be used must be known to both the Wi-Fi infrastructure and the client. Therefore, both must use a common method to specify that key.\n\n<div class=\"parm-table\">\n <table class=\"table\">\n\t<tr>\n\t\t<th>Parm Option Name</th>\n\t\t<th>Parm Value</th>\n\t\t<th>Description</th>\n\t</tr>\n  <tr>\n    <td>Hex Key</td>\n    <td>\"HexKey\" </td>\n\t<td>This indicates that the actual key used by the network to perform encryption will be specified.</td>\n  </tr>\n  <tr>\n    <td>Passphrase</td>\n    <td>\"Passphrase\"</td>\n\t<td>This indicates that a passphrase will be specified from which the actual key used by the network to perform encryption can be derived.</td>\n  </tr>\n</table>\n</div>\n\n##### **Protect Key**\nSettable if: The Network Action is \"Add a New Network\" and the Security Mode is \"Personal\"\n\nPivotal parm: Yes\n\nDescription: \n>This enables encryption of the Key. \n\n>A Key, or the Passphrase used to generate a Key, is generally considered sensitive information since possession of the key for a network grants access to that network. Since the Key or Passphrase must be embedded within the XML, it is often desirable to encrypt the Key or Passphrase so it cannot be extracted and exploited if the XML is intercepted. The WPA Mode and the Key Type, which were previously specified, will determine what type of Key or Passphrase will need to be used. The value selected for the ProtectKey parm will deterime whether the Key or Passphrase will be specified in clear, unencrypted text or encrypted form.\n\n##### **Passphrase**\nPivotal parm: No\n\nDescription: \n>When Key Type is Passphrase, then a Passphrase needs to be specified so it can be used to generate a Key. The type of Passphrase required will vary with the WPA Mode specified since it need to be either a WEP Passphrase or a WPA Passphrase.\n\n> **Note:** Currently, the parm value encryption process is not documented and the key that is needed to encrypt is not published. Therefore, an MDM cannot currently use encrypted Keys or Passphrases since there is no way to store an encrypted, server-supplied password in an XML.\n\nIf WEP is selected and Protect Key is false:\n\n* Settable if: The Network Action is \"Add a New Network\" *AND* the Security Mode is \"Personal\" *AND* the Key Type is \"Passphrase\" *AND* the WPA Mode is \"WEP\" *AND* Protect Key is false\n* Parm name: PassphraseWEPClear\n* Parm value input rules: \n\t* String with a minimum of 4 characters and a maximum of 32 characters\n\nIf WEP is selected and Protect Key is true:\n\n* Settable if: The Network Action is \"Add a New Network\" *AND* the Security Mode is \"Personal\" *AND* the Key Type is \"Passphrase\" *AND* the WPA Mode is \"WEP\" *AND* Protect Key is true\n* Parm name: PassphraseWEPEncrypted\n* Parm value input rules: \n\t* String with a minimum of 4 characters and a maximum of 32 characters\n* Currently, this parm cannot be used effectively by an MDM.\n\t\nIf WEP is not selected and Protect Key is false:\n\n* Settable if: The Network Action is \"Add a New Network\" *AND* the Security Mode is \"Personal\" *AND* the Key Type is \"Passphrase\" *AND* the WPA Mode is not \"WEP\" *AND* Protect Key is false\n* Parm name: PassphraseWPAClear\n* Parm value input rules: \n\t* String with a minimum of 8 characters and a maximum of 63 characters\n\nIf WEP is not selected and Protect Key is true:\n\n* Settable if: The Network Action is \"Add a New Network\" *AND* the Security Mode is \"Personal\" *AND* the Key Type is \"Passphrase\" *AND* the WPA Mode is not \"WEP\" *AND* Protect Key is true\n* Parm name: PassphraseWPAEncrypted\n* Parm value input rules: \n\t* String with a minimum of 8 characters and a maximum of 63 characters\n* Currently, this parm cannot be used effectively by an MDM.\n\t\n##### **Hex Key**\nPivotal parm: No\n\nDescription: \n>When Key Type is Hex Key, then a Key, which is expressed as a sequence of hexadecimal characters, needs to be specified. The type of Key required will vary based on the WPA Mode and Encryption Type specified, since it will need to be either a WEP 40 bit Key, a WEP 104 bit Key, or a 256 bit TKIP/AES-CCMP Key.\n\n> **Note:** Currently, the parm value encryption process is not documented and the key that is needed to encrypt is not published. Therefore, an MDM cannot currently use encrypted Keys or Passphrases since there is no way to store an encrypted, server-supplied password in an XML.\n\nIf WEP is not selected and Protect Key is false:\n\n* Settable if: The Network Action is \"Add a New Network\" *AND* the Security Mode is \"Personal\" *AND* the Key Type is \"Hex Key\" *AND* the WPA Mode is not \"WEP\" *AND* Protect Key is false\n* Parm name: HexKeyClear\n* Description: Provide the hex key (64 hex chars) used by network\n* Parm value input rules: \n\t* String with exactly 64 valid hexadecimal characters (e.g. 0-9, A-F) that collectively specify a 256 bit binary key value that can be used for either TKIP or AES-CCMP encryption.\n\t\nIf WEP is not selected and Protect Key is true:\n\n* Settable if: The Network Action is \"Add a New Network\" *AND* the Security Mode is \"Personal\" *AND* the Key Type is \"Hex Key\" *AND* the WPA Mode is not \"WEP\" *AND* Protect Key is true\n* Parm name: HexKeyEncrypted\n* Description: Provide the hex key (64 hex chars) used by network\n* Parm value input rules: \n\t* String with exactly 64 valid hexadecimal characters (e.g. 0-9, A-F) that collectively specify a 256 bit binary key value that can be used for either TKIP or AES-CCMP encryption.\n* Currently, this parm cannot be used effectively by an MDM.\n\t\nIf WEP is selected, the encryption type is WEP-40, and Protect Key is false:\n\n* Settable if: The Network Action is \"Add a New Network\" *AND* the Security Mode is \"Personal\" *AND* the Key Type is \"Hex Key\" *AND* the WPA Mode is \"WEP\" *AND* the Encryption Type is \"WEP-40\" *AND* Protect Key is false\n* Parm name: HexKeyWep40Clear\n* Description: Provide the shared secret WEP-40 key (10 hex chars) used by the network\n* Parm value input rules: \n\t* String with exactly 10 valid hexadecimal characters (e.g. 0-9, A-F) that collectively specify a 40 bit binary key value that can be used for either WEP encryption.\n\t\nIf WEP is selected, the encryption type is WEP-40, and Protect Key is true:\n\n* Settable if: The Network Action is \"Add a New Network\" *AND* the Security Mode is \"Personal\" *AND* the Key Type is \"Hex Key\" *AND* the WPA Mode is \"WEP\" *AND* the Encryption Type is \"WEP-40\" *AND* Protect Key is true\n* Parm name: HexKeyWep40Encrypted\n* Description: Provide the shared secret WEP-40 key (10 hex chars) used by the network\n* Parm value input rules: \n\t* String with exactly 10 valid hexadecimal characters (e.g. 0-9, A-F) that collectively specify a 40 bit binary key value that can be used for either WEP encryption.\n* Currently, this parm cannot be used effectively by an MDM.\n\t\nIf WEP is selected, the encryption type is WEP-104, and Protect Key is false:\n\n* Settable if: The Network Action is \"Add a New Network\" *AND* the Security Mode is \"Personal\" *AND* the Key Type is \"Hex Key\" *AND* the WPA Mode is \"WEP\" *AND* the Encryption Type is \"WEP-104\" *AND* Protect Key is false\n* Parm name: HexKeyWep104Clear\n* Description: Provide the shared secret WEP-104 key (26 hex chars) used by the network\n* Parm value input rules: \n\t* String with exactly 26 valid hexadecimal characters (e.g. 0-9, A-F) that collectively specify a 104 bit binary key value that can be used for either WEP encryption.\n\nIf WEP is selected, the encryption type is WEP-104, and Protect Key is true:\n\n* Settable if: The Network Action is \"Add a New Network\" *AND* the Security Mode is \"Personal\" *AND* the Key Type is \"Hex Key\" *AND* the WPA Mode is \"WEP\" *AND* the Encryption Type is \"WEP-104\" *AND* Protect Key is true\n* Parm name: HexKeyWep104Encrypted\n* Description: Provide the shared secret WEP-104 key (26 hex chars) used by the network\n* Parm value input rules: \n\t* String with exactly 26 valid hexadecimal characters (e.g. 0-9, A-F) that collectively specify a 104 bit binary key value that can be used for either WEP encryption.\n* Currently, this parm cannot be used effectively by an MDM.\n\t\n##### **WEP Key Index**\nSettable if: The Network Action is \"Add a New Network\" *AND* the Security Mode is \"Personal\" *AND* the WPA Mode is \"WEP\"\n\nPivotal parm: No\n\nParm name: WepKeyIndex\n\nDescription: \n>Some Wi-Fi infrastructure that implements a network using WEP encryption may support multiple WEP keys and a WEP index to indicate which key to use at any given time. \n\n> **Note:** Android does not currently support multiple WEP keys per network. Therefore, only the first WEP key (`wep[0]`) is supported. \n\n<div class=\"parm-table\">\n <table class=\"table\">\n\t<tr>\n\t\t<th>Parm Option Name</th>\n\t\t<th>Parm Value</th>\n\t</tr>\n  <tr>\n    <td>wep[0]</td>\n    <td>\"1\"</td>\n  </tr>\n  <tr>\n    <td>wep[1]</td>\n    <td>\"2\"</td>\n  </tr>\n  <tr>\n    <td>wep[2]</td>\n    <td>\"3\"</td>\n  </tr>\n  <tr>\n    <td>wep[3]</td>\n    <td>\"4\"</td>\n  </tr>\n</table>\n</div>\n\n#### Use DHCP\nPivotal parm: Yes\n\nDescription: \n\n>When this parm is selected, DHCP will be used. When not selected, Static IP address is used.\n\n>Most modern networks use DHCP to automatically assign IP Addresses to devices when they join the network. If DHCP is used, then all requisite IP Address information will be obtained automatically and no additional information will need to be provided.\n\n>If DHCP cannot be used for a particular network, then all IP Address information that is needed to operate on that network will need to be specified. None of the following IP Address information parms can be left blank, but they may not all require meaningful values, depending on the network.\n\n##### **Static IP Address**\nSettable if: The Network Action is \"Add a New Network\" *AND* the \"Use DHCP\" box is not checked\n\nPivotal parm: No\n\nParm name: IpAddress\n\nDescription: \n>Provide the static IP address to be assigned to the device on this network. \n\n>When not using DHCP, a valid IP Address for the device to use on the network must be specified and that IP Address must not be assigned to any other device on the same network.\n\nParm value input rules: \n\n* Must be a valid IPV4 address, example: 191.168.0.1\n\n##### **Gateway 1 IP Address**\nSettable if: The Network Action is \"Add a New Network\" *AND* the \"Use DHCP\" box is not checked\n\nPivotal parm: No\n\nParm name: IpGateway1\n\nDescription: \n>Provide the IP address of the first gateway to the network.\n\n>When not using DHCP, a valid Gateway IP Address may or may not be required. If there is a Gateway that can route traffic out of the current network, then the IP Address of that Gateway should be specified if the device will need to send traffic outside that network. If the network is essentially self-contained, then it may not be important what value is specified for this parm.\n\nParm value input rules: \n\n* Must be a valid IPV4 address, example: 191.168.0.1\n\n##### **Subnet Mask**\nSettable if: The Network Action is \"Add a New Network\" *AND* the \"Use DHCP\" box is not checked\n\nPivotal parm: No\n\nParm name: IpMask\n\nDescription: \n>Provide the subnet mask to be used on the network.\n\n>When not using DHCP, a subnet mask must be specified that is consistent with the network and is consistent with the IP Address assigned to the device for use on that network.\n\nParm value input rules: \n\n* Must be a valid IPV4 subnet mask, example: 255.255.255.0\n\n##### **DNS Server 1 IP Address**\nSettable if: The Network Action is \"Add a New Network\" *AND* the \"Use DHCP\" box is not checked\n\nPivotal parm: No\n\nParm name: IpDns1\n\nDescription: \n>Provide the IP address of the first DNS server.\n\n>When not using DHCP, a valid DNS Server IP Address may or may not be required. If there is a DNS Server that can resolve network names to IP Addresses on the current network, then the IP Address of that server should be specified if the device will need to resolve names for that network. If name resolution is not required, then it may not be important what value is specified for this parm.\n\nParm value input rules: \n\n* Must be a valid IPV4 address, example: 191.168.0.1\n\n##### **DNS Server 2 IP Address**\nSettable if: The Network Action is \"Add a New Network\" *AND* the \"Use DHCP\" box is not checked\n\nPivotal parm: No\n\nParm name: IpDns2\n\nDescription: \n>Provide the IP address of the second DNS server. When not using DHCP, a valid DNS Server IP Address may or may not be required. If there is a secondary DNS Server that can resolve network names to IP Addresses on the current network, then the IP Address of that server may be specified as a backup. If no alternate DNS Server is available or required, then it may not be important what value is specified for this parm.\n\n>Specifying an empty (length of zero) value (or the absence of this parm from the XML) will cause the DNS Server 2 IP Address to not be set.\n\nParm value input rules: \n\n* Must be a valid IPV4 address, example: 191.168.0.1\n\n#### Use Proxy\nPivotal parm: Yes\n\nDescription: \n>When selected, a Proxy is used for network connections. A proxy is a an intermediary service that routes HTTP requests and responses between clients on a device and another network (typically the internet or an intranet). When there is a proxy between the Wi-Fi network and some outer network, then HTTP-based applications, such as a Web Browser, may need to negotiate with that proxy to access the services of that outer network.\n\n##### **Proxy Host Name**\nSettable if: The Network Action is \"Add a New Network\" *AND* \"Use Proxy\" box is checked\n\nPivotal parm: No\n\nParm name: ProxyHostName\n\nDescription: \n>Provide the Host Name or IP Address of the computer on which the proxy is running. Host Name can be used only if the network provides suitable name resolution. Otherwise, an IP Address would need to be provided.\n\n>Since different Wi-Fi networks may have different proxies connecting them to different outer networks, proxy information, if needed, must be configured for each network.\n\nParm value input rules: \n\n* String with a minimum of 1 characters and a maximum of 64 characters\n\n##### **Proxy Port**\nSettable if: The Network Action is \"Add a New Network\" *AND* \"Use Proxy\" box is checked\n\nPivotal parm: No\n\nParm name: ProxyPort\n\nDescription: \n>Provide the port number of the proxy server on the computer on which the proxy is running on which the proxy is listening.\n\n##### **Bypass Proxy**\nSettable if: The Network Action is \"Add a New Network\" *AND* \"Use Proxy\" box is checked\n\nPivotal parm: No\n\nParm name: BypassProxy\n\nDescription: \n>Once a proxy is configured for a given network, all HTTP traffic will generally be routed to the outer network via that proxy.  \n\n>In some cases, it may be desirable to avoid routing selected Host Names or IP Addresses through the proxy. For example, you might want to access a local Web Server. This can be accomplished by listing the Host Names or IP Addresses for which the Proxy should be bypassed. To specify multiple Host Names or IP Addresses, separate them with commas.\n\nParm value input rules: \n\n* String with a maximum of 256 characters\n\n##Example XML\n\n### Managing Certificates Related to Wi-Fi Networks\n\n#### Initialize the Android KeyStore\n\n> **Note:** This must be done for a new device before you can install certificates.\n\nWithout a password\n\n\t:::XML\n\t<wap-provisioningdoc>\n\t\t<characteristic type=\"CertMgr\" version=\"4.2\" >\n\t\t\t<parm name=\"CertAction\" value=\"4\"/>\n\t\t</characteristic>\n\t</wap-provisioningdoc>\n\nWith a password\n\n\t:::XML\n\t<wap-provisioningdoc>\n\t\t<characteristic type=\"CertMgr\" version=\"4.2\" >\n\t\t\t<parm name=\"CertAction\" value=\"4\"/>\n\t\t\t<characteristic type=\"keystore-details\">\n\t\t\t\t<parm name=\"KeystorePassword\" value=\"password\"/>\n\t\t\t</characteristic>\n\t\t</characteristic>\n\t</wap-provisioningdoc>\n\n#### Remove a Certificate\n\t\n\t:::XML\n\t<wap-provisioningdoc>\n\t\t<characteristic type=\"CertMgr\" version=\"4.2\" >\n\t\t\t<parm name=\"CertAction\" value=\"2\"/>\n\t\t\t<characteristic type=\"cert-details\">\n\t\t\t\t<parm name=\"CertAlias\" value=\"certName1\"/>\n\t\t\t</characteristic>\n\t\t</characteristic>\n\t</wap-provisioningdoc>\n\n#### Install a CA certificate (.PEM file)\n\n\t:::XML\n\t<wap-provisioningdoc>\n\t\t<characteristic type=\"CertMgr\" version=\"4.2\" >\n\t\t\t<parm name=\"CertAction\" value=\"1\"/>\n\t\t\t<characteristic type=\"cert-details\">\n\t\t\t\t<parm name=\"CertAlias\" value=\"certName2\"/>\n\t\t\t\t<parm name=\"CertType\" value=\"5\"/>\n\t\t\t\t<parm name=\"CertMethod\" value=\"2\"/>\n\t\t\t\t<parm name=\"CertFileCA\" value=\"/path/to/cert.pem\"/>\n\t\t\t\t<parm name=\"CertAdjustClock\" value=\"false\"/>\n\t\t\t</characteristic>\n\t\t</characteristic>\n\t</wap-provisioningdoc>\n\n#### Install a client certificate (.PEM file)\n\n\t:::XML\n\t<wap-provisioningdoc>\n\t\t<characteristic type=\"CertMgr\" version=\"4.2\" >\n\t\t\t<parm name=\"CertAction\" value=\"1\"/>\n\t\t\t<characteristic type=\"cert-details\">\n\t\t\t\t<parm name=\"CertAlias\" value=\"certName2\"/>\n\t\t\t\t<parm name=\"CertType\" value=\"6\"/>\n\t\t\t\t<parm name=\"CertMethod\" value=\"2\"/>\n\t\t\t\t<parm name=\"CertFileClient\" value=\"/path/to/cert.pem\"/>\n\t\t\t\t<parm name=\"CertAdjustClock\" value=\"false\"/>\n\t\t\t</characteristic>\n\t\t</characteristic>\n\t</wap-provisioningdoc>\n\n#### Install a client certificate and private key (.PFX file)\n\n\t:::XML\n\t<wap-provisioningdoc>\n\t\t<characteristic type=\"CertMgr\" version=\"4.2\" >\n\t\t\t<parm name=\"CertAction\" value=\"1\"/>\n\t\t\t<characteristic type=\"cert-details\">\n\t\t\t\t<parm name=\"CertAlias\" value=\"certName2\"/>\n\t\t\t\t<parm name=\"CertType\" value=\"8\"/>\n\t\t\t\t<parm name=\"CertMethod\" value=\"2\"/>\n\t\t\t\t<parm name=\"CertFileClient\" value=\"/path/to/cert.pem\"/>\n\t\t\t\t<parm name=\"CertAdjustClock\" value=\"false\"/>\n\t\t\t\t<parm name=\"PrivateKeyPassword\" value=\"pass\"/>\n\t\t\t</characteristic>\n\t\t</characteristic>\n\t</wap-provisioningdoc>\n\n#### Install a client certificate and private key (.P12 file)\n\n\t:::XML\n\t<wap-provisioningdoc>\n\t\t<characteristic type=\"CertMgr\" version=\"4.2\" >\n\t\t\t<parm name=\"CertAction\" value=\"1\"/>\n\t\t\t<characteristic type=\"cert-details\">\n\t\t\t\t<parm name=\"CertAlias\" value=\"certName2\"/>\n\t\t\t\t<parm name=\"CertType\" value=\"9\"/>\n\t\t\t\t<parm name=\"CertMethod\" value=\"2\"/>\n\t\t\t\t<parm name=\"CertFileClient\" value=\"/path/to/cert.pem\"/>\n\t\t\t\t<parm name=\"CertAdjustClock\" value=\"false\"/>\n\t\t\t\t<parm name=\"PrivateKeyPassword\" value=\"pass\"/>\n\t\t\t</characteristic>\n\t\t</characteristic>\n\t</wap-provisioningdoc>\n\n#### Install a client certificate and private key (.PKCS12 file)\n\n\t:::XML\n\t<wap-provisioningdoc>\n\t\t<characteristic type=\"CertMgr\" version=\"4.2\" >\n\t\t\t<parm name=\"CertAction\" value=\"1\"/>\n\t\t\t<characteristic type=\"cert-details\">\n\t\t\t\t<parm name=\"CertAlias\" value=\"certName2\"/>\n\t\t\t\t<parm name=\"CertType\" value=\"9\"/>\n\t\t\t\t<parm name=\"CertMethod\" value=\"10\"/>\n\t\t\t\t<parm name=\"CertFileClient\" value=\"/path/to/cert.pem\"/>\n\t\t\t\t<parm name=\"CertAdjustClock\" value=\"false\"/>\n\t\t\t\t<parm name=\"PrivateKeyPassword\" value=\"pass\"/>\n\t\t\t</characteristic>\n\t\t</characteristic>\n\t</wap-provisioningdoc>\n\t\n### Country Selection\n\n#### Selecting a Country\n\n\t:::XML\n\t<wap-provisioningdoc>\n\t\t<characteristic type=\"Wi-Fi\" version=\"4.4\" >\n\t\t\t<parm name=\"UseRegulatory\" value=\"1\"/>\n\t\t\t<characteristic type=\"Regulatory\">\n\t\t\t\t<parm name=\"Country\" value=\"US\"/>\n\t\t\t</characteristic>\n\t\t\t<parm name=\"UseDiagnosticOptions\" value=\"0\"/>\n\t\t\t<parm name=\"UseAdvancedOptions\" value=\"0\"/>\n\t\t</characteristic>\n\t</wap-provisioningdoc>\n\n#### Using the Auto Option\n\n\t:::XML\n\t<wap-provisioningdoc>\n\t\t<characteristic type=\"Wi-Fi\" version=\"4.4\" >\n\t\t\t<parm name=\"UseRegulatory\" value=\"1\"/>\n\t\t\t<characteristic type=\"Regulatory\">\n\t\t\t\t<parm name=\"Country\" value=\"AUTO\"/>\n\t\t\t</characteristic>\n\t\t\t<parm name=\"UseDiagnosticOptions\" value=\"0\"/>\n\t\t\t<parm name=\"UseAdvancedOptions\" value=\"0\"/>\n\t\t</characteristic>\n\t</wap-provisioningdoc>\n\t\n### Band Selection\n\n#### Set 2.4 GHz\n\n\t:::XML\n\t<wap-provisioningdoc>\n\t\t<characteristic type=\"Wi-Fi\" version=\"4.4\" >\n\t\t\t<parm name=\"UseRegulatory\" value=\"0\"/>\n\t\t\t<characteristic type=\"Radio\">\n\t\t\t\t<parm name=\"BandSelection\" value=\"2.4GHz\"/>\n\t\t\t\t<characteristic type=\"ChannelSelection\">\n\t\t\t\t\t<parm name=\"2.4GHzChannels\" value=\"1\"/>\n\t\t\t\t</characteristic>\n\t\t\t</characteristic>\n\t\t\t<parm name=\"UseDiagnosticOptions\" value=\"0\"/>\n\t\t\t<parm name=\"UseAdvancedOptions\" value=\"0\"/>\n\t\t</characteristic>\n\t</wap-provisioningdoc>\n\n#### Set 5.0 GHz\n\n\t:::XML\n\t<wap-provisioningdoc>\n\t\t<characteristic type=\"Wi-Fi\" version=\"4.4\" >\n\t\t\t<parm name=\"UseRegulatory\" value=\"0\"/>\n\t\t\t<characteristic type=\"Radio\">\n\t\t\t\t<parm name=\"BandSelection\" value=\"5.0GHz\"/>\n\t\t\t\t<characteristic type=\"ChannelSelection\">\n\t\t\t\t\t<parm name=\"5.0GHzChannels\" value=\"36\"/>\n\t\t\t\t</characteristic>\n\t\t\t</characteristic>\n\t\t\t<parm name=\"UseDiagnosticOptions\" value=\"0\"/>\n\t\t\t<parm name=\"UseAdvancedOptions\" value=\"0\"/>\n\t\t</characteristic>\n\t</wap-provisioningdoc>\n\n#### Set Auto (both 2.4 and 5.0 GHz)\n\n\t:::XML\n\t<wap-provisioningdoc>\n\t\t<characteristic type=\"Wi-Fi\" version=\"4.4\" >\n\t\t\t<parm name=\"UseRegulatory\" value=\"0\"/>\n\t\t\t<characteristic type=\"Radio\">\n\t\t\t\t<parm name=\"BandSelection\" value=\"Auto\"/>\n\t\t\t\t<characteristic type=\"ChannelSelection\">\n\t\t\t\t\t<parm name=\"2.4GHzChannels\" value=\"1\"/>\n\t\t\t\t\t<parm name=\"5.0GHzChannels\" value=\"36\"/>\n\t\t\t\t</characteristic>\n\t\t\t</characteristic>\n\t\t\t<parm name=\"UseDiagnosticOptions\" value=\"0\"/>\n\t\t\t<parm name=\"UseAdvancedOptions\" value=\"0\"/>\n\t\t</characteristic>\n\t</wap-provisioningdoc>\n\n\t\n### Add Wi-Fi Network\n\n#### Adding an Open Network\n\n\t:::XML\n\t<wap-provisioningdoc>\n\t\t<characteristic type=\"Wi-Fi\" version=\"4.4\" >\n\t\t\t<parm name=\"UseRegulatory\" value=\"0\"/>\n\t\t\t<parm name=\"UseDiagnosticOptions\" value=\"0\"/>\n\t\t\t<parm name=\"UseAdvancedOptions\" value=\"0\"/>\n\t\t\t<parm name=\"NetworkAction\" value=\"Add\"/>\n\t\t\t<characteristic type=\"network-profile\">\n\t\t\t\t<parm name=\"SSID\" value=\"Zebra\"/>\n\t\t\t\t<parm name=\"SecurityMode\" value=\"0\"/>\n\t\t\t\t<parm name=\"UseDHCP\" value=\"1\"/>\n\t\t\t\t<parm name=\"UseProxy\" value=\"0\"/>\n\t\t\t</characteristic>\n\t\t</characteristic>\n\t</wap-provisioningdoc>\n\n#### Adding a Personal Network with WPA\n\n\t:::XML\n\t<wap-provisioningdoc>\n\t\t<characteristic type=\"Wi-Fi\" version=\"4.4\" >\n\t\t\t<parm name=\"UseRegulatory\" value=\"0\"/>\n\t\t\t<parm name=\"UseDiagnosticOptions\" value=\"0\"/>\n\t\t\t<parm name=\"UseAdvancedOptions\" value=\"0\"/>\n\t\t\t<parm name=\"NetworkAction\" value=\"Add\"/>\n\t\t\t<characteristic type=\"network-profile\">\n\t\t\t\t<parm name=\"SSID\" value=\"Zebra\"/>\n\t\t\t\t<parm name=\"SecurityMode\" value=\"1\"/>\n\t\t\t\t<parm name=\"WPAMode\" value=\"1\"/>\n\t\t\t\t<characteristic type=\"key-details\">\n\t\t\t\t\t<parm name=\"KeyType\" value=\"Passphrase\"/>\n\t\t\t\t\t<parm name=\"ProtectKey\" value=\"0\"/>\n\t\t\t\t\t<parm name=\"PassphraseWPAClear\" value=\"KsdU6X3u\"/>\n\t\t\t\t</characteristic>\n\t\t\t\t<parm name=\"UseDHCP\" value=\"1\"/>\n\t\t\t\t<parm name=\"UseProxy\" value=\"0\"/>\n\t\t\t</characteristic>\n\t\t</characteristic>\n\t</wap-provisioningdoc>\n\n\t\n#### Adding a Personal Network with WPA and TKIP\n\n\t:::XML\n\t<wap-provisioningdoc>\n\t\t<characteristic type=\"Wi-Fi\" version=\"4.4\" >\n\t\t\t<parm name=\"UseRegulatory\" value=\"0\"/>\n\t\t\t<parm name=\"UseDiagnosticOptions\" value=\"0\"/>\n\t\t\t<parm name=\"UseAdvancedOptions\" value=\"0\"/>\n\t\t\t<parm name=\"NetworkAction\" value=\"Add\"/>\n\t\t\t<characteristic type=\"network-profile\">\n\t\t\t\t<parm name=\"SSID\" value=\"Zebra\"/>\n\t\t\t\t<parm name=\"SecurityMode\" value=\"1\"/>\n\t\t\t\t<parm name=\"WPAMode\" value=\"1\"/>\n\t\t\t\t<characteristic type=\"auth-details\">\n\t\t\t\t\t<characteristic type=\"encryption-details\">\n\t\t\t\t\t\t<parm name=\"EncryptionWPA\" value=\"1\"/>\n\t\t\t\t\t</characteristic>\n\t\t\t\t</characteristic>\n\t\t\t\t<characteristic type=\"key-details\">\n\t\t\t\t\t<parm name=\"KeyType\" value=\"Passphrase\"/>\n\t\t\t\t\t<parm name=\"ProtectKey\" value=\"0\"/>\n\t\t\t\t\t<parm name=\"PassphraseWPAClear\" value=\"KsdU6X3u\"/>\n\t\t\t\t</characteristic>\n\t\t\t\t<parm name=\"UseDHCP\" value=\"1\"/>\n\t\t\t\t<parm name=\"UseProxy\" value=\"0\"/>\n\t\t\t</characteristic>\n\t\t</characteristic>\n\t</wap-provisioningdoc>\n\n#### Adding a Personal Network with WPA2\n\n\t:::XML\n\t<wap-provisioningdoc>\n\t\t<characteristic type=\"Wi-Fi\" version=\"4.4\" >\n\t\t\t<parm name=\"UseRegulatory\" value=\"0\"/>\n\t\t\t<parm name=\"UseDiagnosticOptions\" value=\"0\"/>\n\t\t\t<parm name=\"UseAdvancedOptions\" value=\"0\"/>\n\t\t\t<parm name=\"NetworkAction\" value=\"Add\"/>\n\t\t\t<characteristic type=\"network-profile\">\n\t\t\t\t<parm name=\"SSID\" value=\"Zebra\"/>\n\t\t\t\t<parm name=\"SecurityMode\" value=\"1\"/>\n\t\t\t\t<parm name=\"WPAMode\" value=\"2\"/>\n\t\t\t\t<characteristic type=\"key-details\">\n\t\t\t\t\t<parm name=\"KeyType\" value=\"Passphrase\"/>\n\t\t\t\t\t<parm name=\"ProtectKey\" value=\"0\"/>\n\t\t\t\t\t<parm name=\"PassphraseWPAClear\" value=\"KsdU6X3u\"/>\n\t\t\t\t</characteristic>\n\t\t\t\t<parm name=\"UseDHCP\" value=\"1\"/>\n\t\t\t\t<parm name=\"UseProxy\" value=\"0\"/>\n\t\t\t</characteristic>\n\t\t</characteristic>\n\t</wap-provisioningdoc>\n\n#### Adding a Personal Network with WPA/WPA2\n\n\t:::XML\n\t<wap-provisioningdoc>\n\t\t<characteristic type=\"Wi-Fi\" version=\"4.4\" >\n\t\t\t<parm name=\"UseRegulatory\" value=\"0\"/>\n\t\t\t<parm name=\"UseDiagnosticOptions\" value=\"0\"/>\n\t\t\t<parm name=\"UseAdvancedOptions\" value=\"0\"/>\n\t\t\t<parm name=\"NetworkAction\" value=\"Add\"/>\n\t\t\t<characteristic type=\"network-profile\">\n\t\t\t\t<parm name=\"SSID\" value=\"Zebra\"/>\n\t\t\t\t<parm name=\"SecurityMode\" value=\"1\"/>\n\t\t\t\t<parm name=\"WPAMode\" value=\"3\"/>\n\t\t\t\t<characteristic type=\"key-details\">\n\t\t\t\t\t<parm name=\"KeyType\" value=\"Passphrase\"/>\n\t\t\t\t\t<parm name=\"ProtectKey\" value=\"0\"/>\n\t\t\t\t\t<parm name=\"PassphraseWPAClear\" value=\"KsdU6X3u\"/>\n\t\t\t\t</characteristic>\n\t\t\t\t<parm name=\"UseDHCP\" value=\"1\"/>\n\t\t\t\t<parm name=\"UseProxy\" value=\"0\"/>\n\t\t\t</characteristic>\n\t\t</characteristic>\n\t</wap-provisioningdoc>\n\n#### Adding a Personal Network with WEP\n\n\t:::XML\n\t<wap-provisioningdoc>\n\t\t<characteristic type=\"Wi-Fi\" version=\"4.4\" >\n\t\t\t<parm name=\"UseRegulatory\" value=\"0\"/>\n\t\t\t<parm name=\"UseDiagnosticOptions\" value=\"0\"/>\n\t\t\t<parm name=\"UseAdvancedOptions\" value=\"0\"/>\n\t\t\t<parm name=\"NetworkAction\" value=\"Add\"/>\n\t\t\t<characteristic type=\"network-profile\">\n\t\t\t\t<parm name=\"SSID\" value=\"Zebra\"/>\n\t\t\t\t<parm name=\"SecurityMode\" value=\"1\"/>\n\t\t\t\t<parm name=\"WPAMode\" value=\"4\"/>\n\t\t\t\t<characteristic type=\"auth-details\">\n\t\t\t\t\t<characteristic type=\"encryption-details\">\n\t\t\t\t\t\t<parm name=\"EncryptionWEP\" value=\"1\"/>\n\t\t\t\t\t</characteristic>\n\t\t\t\t</characteristic>\n\t\t\t\t<characteristic type=\"key-details\">\n\t\t\t\t\t<parm name=\"KeyType\" value=\"Passphrase\"/>\n\t\t\t\t\t<parm name=\"ProtectKey\" value=\"0\"/>\n\t\t\t\t\t<parm name=\"PassphraseWEPClear\" value=\"KsdU6X3u\"/>\n\t\t\t\t\t<parm name=\"WepKeyIndex\" value=\"1\"/>\n\t\t\t\t</characteristic>\n\t\t\t\t<parm name=\"UseDHCP\" value=\"1\"/>\n\t\t\t\t<parm name=\"UseProxy\" value=\"0\"/>\n\t\t\t</characteristic>\n\t\t</characteristic>\n\t</wap-provisioningdoc>\n\t\n#### Adding an Enterprise Network with WPA\n\n\t:::XML\n\t<wap-provisioningdoc>\n\t\t<characteristic type=\"Wi-Fi\" version=\"4.4\" >\n\t\t\t<parm name=\"UseRegulatory\" value=\"0\"/>\n\t\t\t<parm name=\"UseDiagnosticOptions\" value=\"0\"/>\n\t\t\t<parm name=\"UseAdvancedOptions\" value=\"0\"/>\n\t\t\t<parm name=\"NetworkAction\" value=\"Add\"/>\n\t\t\t<characteristic type=\"network-profile\">\n\t\t\t\t<parm name=\"SSID\" value=\"Zebra\"/>\n\t\t\t\t<parm name=\"SecurityMode\" value=\"2\"/>\n\t\t\t\t<parm name=\"WPAMode\" value=\"1\"/>\n\t\t\t\t<parm name=\"Authentication\" value=\"1\"/>\n\t\t\t\t<characteristic type=\"auth-details\">\n\t\t\t\t\t<parm name=\"OptionalServerCertificate\" value=\"serverCertName\"/>\n\t\t\t\t\t<parm name=\"MandatoryClientCertificate\" value=\"clientCertName\"/>\n\t\t\t\t</characteristic>\n\t\t\t\t<parm name=\"UseDHCP\" value=\"1\"/>\n\t\t\t\t<parm name=\"UseProxy\" value=\"0\"/>\n\t\t\t</characteristic>\n\t\t</characteristic>\n\t</wap-provisioningdoc>\n\n#### Adding an Enterprise Network with WPA2\n\n\t:::XML\n\t<wap-provisioningdoc>\n\t\t<characteristic type=\"Wi-Fi\" version=\"4.4\" >\n\t\t\t<parm name=\"UseRegulatory\" value=\"0\"/>\n\t\t\t<parm name=\"UseDiagnosticOptions\" value=\"0\"/>\n\t\t\t<parm name=\"UseAdvancedOptions\" value=\"0\"/>\n\t\t\t<parm name=\"NetworkAction\" value=\"Add\"/>\n\t\t\t<characteristic type=\"network-profile\">\n\t\t\t\t<parm name=\"SSID\" value=\"Zebra\"/>\n\t\t\t\t<parm name=\"SecurityMode\" value=\"2\"/>\n\t\t\t\t<parm name=\"WPAMode\" value=\"2\"/>\n\t\t\t\t<parm name=\"Authentication\" value=\"1\"/>\n\t\t\t\t<characteristic type=\"auth-details\">\n\t\t\t\t\t<parm name=\"OptionalServerCertificate\" value=\"serverCertName\"/>\n\t\t\t\t\t<parm name=\"MandatoryClientCertificate\" value=\"clientCertName\"/>\n\t\t\t\t</characteristic>\n\t\t\t\t<parm name=\"UseDHCP\" value=\"1\"/>\n\t\t\t\t<parm name=\"UseProxy\" value=\"0\"/>\n\t\t\t</characteristic>\n\t\t</characteristic>\n\t</wap-provisioningdoc>\n\n#### Adding an Enterprise Network with WPA/WPA2\n\n\t:::XML\n\t<wap-provisioningdoc>\n\t\t<characteristic type=\"Wi-Fi\" version=\"4.4\" >\n\t\t\t<parm name=\"UseRegulatory\" value=\"0\"/>\n\t\t\t<parm name=\"UseDiagnosticOptions\" value=\"0\"/>\n\t\t\t<parm name=\"UseAdvancedOptions\" value=\"0\"/>\n\t\t\t<parm name=\"NetworkAction\" value=\"Add\"/>\n\t\t\t<characteristic type=\"network-profile\">\n\t\t\t\t<parm name=\"SSID\" value=\"Zebra\"/>\n\t\t\t\t<parm name=\"SecurityMode\" value=\"2\"/>\n\t\t\t\t<parm name=\"WPAMode\" value=\"3\"/>\n\t\t\t\t<parm name=\"Authentication\" value=\"1\"/>\n\t\t\t\t<characteristic type=\"auth-details\">\n\t\t\t\t\t<parm name=\"OptionalServerCertificate\" value=\"serverCertName\"/>\n\t\t\t\t\t<parm name=\"MandatoryClientCertificate\" value=\"clientCertName\"/>\n\t\t\t\t</characteristic>\n\t\t\t\t<parm name=\"UseDHCP\" value=\"1\"/>\n\t\t\t\t<parm name=\"UseProxy\" value=\"0\"/>\n\t\t\t</characteristic>\n\t\t</characteristic>\n\t</wap-provisioningdoc>\n\n#### Adding an Enterprise Network with WEP\n\n\t:::XML\n\t<wap-provisioningdoc>\n\t\t<characteristic type=\"Wi-Fi\" version=\"4.4\" >\n\t\t\t<parm name=\"UseRegulatory\" value=\"0\"/>\n\t\t\t<parm name=\"UseDiagnosticOptions\" value=\"0\"/>\n\t\t\t<parm name=\"UseAdvancedOptions\" value=\"0\"/>\n\t\t\t<parm name=\"NetworkAction\" value=\"Add\"/>\n\t\t\t<characteristic type=\"network-profile\">\n\t\t\t\t<parm name=\"SSID\" value=\"Zebra\"/>\n\t\t\t\t<parm name=\"SecurityMode\" value=\"2\"/>\n\t\t\t\t<parm name=\"WPAMode\" value=\"4\"/>\n\t\t\t\t<parm name=\"Authentication\" value=\"1\"/>\n\t\t\t\t<characteristic type=\"auth-details\">\n\t\t\t\t\t<characteristic type=\"encryption-details\">\n\t\t\t\t\t\t<parm name=\"EncryptionWEP\" value=\"1\"/>\n\t\t\t\t\t</characteristic>\n\t\t\t\t\t<parm name=\"OptionalServerCertificate\" value=\"serverCertName\"/>\n\t\t\t\t\t<parm name=\"MandatoryClientCertificate\" value=\"clientCertName\"/>\n\t\t\t\t</characteristic>\n\t\t\t\t<parm name=\"UseDHCP\" value=\"1\"/>\n\t\t\t\t<parm name=\"UseProxy\" value=\"0\"/>\n\t\t\t</characteristic>\n\t\t</characteristic>\n\t</wap-provisioningdoc>\n\n## Feature Compatibility\n\n<iframe src=\"compare.html#mx=4.3&csp=Wi-Fi&os=JB&embed=true\"></iframe> "},{"key":"guide-csp-wifiAdvancedOptions","name":"# Specify Advanced Options","md":"## Specify Advanced Options\nPivotal parm: Yes\n\nDescription: Specify whether Advanced Options will be used. These options can be used to alter the low-level behavior of the Wi-Fi implementation. In most cases, these options should not be used except under the direction of Zebra support staff. When turned on, the following options will be available to set.\n\n>Note: The following steps must be followed in order to use the Advanced Options under the WiFi feature:\n>\n>* PMKID must be turned on in order to enable PreAuth (PreAuth =1 and PMKID =1)\n>* FT must be turned on in order to enable FTRIC (FT=1 and FTRIC =1)\n>* OKC must be turned off (OKC =0 and PMKID =1) in order to use PMKID caching\n>\n> Important Note: The default \"Fast Power Savings\" value must be used for the \"Power Save\" parameter under the Advanced Options. Using the \"Do Not Change\" value will result in failure.\n\n### Auto Time Config\nSettable if: The \"Specify Advanced Options\" box is checked\n\nPivotal parm: No\n\nParm name: AutoTimeConfig\n\nDescription: Enable AutoTimeConfig feature. Updates device timestamp based on Symbol IE in 802.11 beacon. This is a Symbol specific feature.\n\n### HFSR\nSettable if: The \"Specify Advanced Options\" box is checked\n\nPivotal parm: No\n\nParm name: HFSR\n\nDescription: Hyper Fast Secure Roam (HFSR) is a Symbol's fast roam algorithm. \n\n### CCKM \nSettable if: The \"Specify Advanced Options\" box is checked\n\nPivotal parm: No\n\nParm name: CCKM\n\nDescription: This is to enable / disable CCX roam algorithm (CCKM).\n\n### FT \nSettable if: The \"Specify Advanced Options\" box is checked\n\nPivotal parm: No\n\nParm name: FT\n\nDescription: This is to enable / disable Fast Transition roam algorithm (802.11r).\n\n### FTRIC \nSettable if: The \"Specify Advanced Options\" box is checked\n\nPivotal parm: No\n\nParm name: FTRIC\n\nDescription: This is to enable / disable Fast Transition Resource Request (802.11r).\n\n### OKC\nSettable if: The \"Specify Advanced Options\" box is checked\n\nPivotal parm: No\n\nParm name: OKC\n\nDescription: This is to enable / disable Opportunistic Key Caching (OKC).\n\n### PMKID \nSettable if: The \"Specify Advanced Options\" box is checked\n\nPivotal parm: No\n\nParm name: PMKID\n\nDescription: This is to enable / disable PMKID Caching. We need to disable OKC and enable PMKID for PMKID caching to work.\n\n### Pre-Auth\nSettable if: The \"Specify Advanced Options\" box is checked\n\nPivotal parm: No\n\nParm name: PreAuth\n\nDescription: This is to enable / disable 802.1x Pre-Authentication.\n\n### Power Save Mode \nSettable if: The \"Specify Advanced Options\" box is checked\n\nPivotal parm: No\n\nParm name: PowerSave\n\nDescription: This option is to configure different Power Save Modes of Radio.\n\n<div class=\"parm-table\">\n <table class=\"table\">\n\t<tr>\n\t\t<th>Parm Option Name</th>\n\t\t<th>Parm Value</th>\n\t\t<th>Description</th>\n\t</tr>\n  <tr>\n    <td>Do not change</td>\n\t<td>\"0\"</td>\n    <td>This value (or the absence of this parm from the XML) will not make any change to the device's Power Save mode.</td>\n  </tr>\n  <tr>\n    <td>Always Active</td>\n    <td>\"1\" </td>\n\t<td>This value will keep the radio in active</td>\n  </tr>\n  <tr>\n    <td>WMM-PS</td>\n    <td>\"4\"</td>\n\t<td></td>\n  </tr>\n  <tr>\n    <td>Null Data Power Save</td>\n    <td>\"5\"</td>\n\t<td></td>\n  </tr>\n  <tr>\n    <td>PS-POLL</td>\n    <td>\"6\"</td>\n\t<td></td>\n  </tr>\n</table>\n</div>\n\n### Advanced Logging\nSettable if: The \"Specify Advanced Options\" box is checked\n\nPivotal parm: No\n \nParm name: AdvancedLogging\n\nDescription: Start or Stop advanced Wi-Fi logging.\n\n### FIPS \nSettable if: The \"Specify Advanced Options\" box is checked\n\nPivotal parm: No\n\nParm name: FIPS\n\nDescription: We can use this option to enable or disable FIPS data in motion supported in WLAN. WLAN FIPS 140-2, level 1 compliance.\n\n### Enable Restricted Settings UI\nSettable if: The \"Specify Advanced Options\" box is checked\n\nPivotal parm: No\n \nParm name: EnableRestrictedSettingsUI\n\nDescription: When enabled the Wi-Fi settings will be in Read-Only mode.\n\n<div class=\"parm-table\">\n<table class=\"table\">\n\t<tr>\n\t\t<th>Parm Option Name</th>\n\t\t<th>Parm Value</th>\n\t\t<th>Description</th>\n\t</tr>\n  <tr>\n    <td>Do not change</td>\n    <td>\"0\"</td>\n\t<td>This value (or the absence of this parm from the XML) will not make any change to whether or not the Settings UI is restricted.</td>\n  </tr>\n  <tr>\n    <td>Disable Restricted WLAN Settings UI</td>\n    <td>\"1\"</td>\n\t<td></td>\n  </tr>\n  <tr>\n    <td>Enable Restricted WLAN Settings UI</td>\n    <td>\"2\"</td>\n\t<td></td>\n  </tr>\n</table>\n</div>\n\n### Radio Resource Measurement(802.11K)\nSettable if: The \"Specify Advanced Options\" box is checked\n\nPivotal parm: No\n\nParm name: 802.11K\n\nDescription: Specify whether to enable Radio Resource Measurement\n\n### Management Frame Protection Mode(802.11w)\nSettable if: The \"Specify Advanced Options\" box is checked\n\nPivotal parm: No\n\nParm name: 802.11w\n\nDescription: Specify the Management Frame Protection Mode\n\n<div class=\"parm-table\">\n <table class=\"table\">\n\t<tr>\n\t\t<th>Parm Option Name</th>\n\t\t<th>Parm Value</th>\n\t\t<th>Description</th>\n\t</tr>\n  <tr>\n    <td>No MFP</td>\n    <td>\"0\"</td>\n\t<td></td>\n  </tr>\n  <tr>\n    <td>Capable</td>\n    <td>\"1\"</td>\n\t<td></td>\n  </tr>\n  <tr>\n    <td>Mandatory</td>\n    <td>\"2\" </td>\n\t<td></td>\n  </tr>\n  <tr>\n    <td>Do not change</td>\n    <td>\"3\"</td>\n\t<td>This value (or the absence of this parm from the XML) will not make any change to the Management Frame Protection Mode.</td>\n  </tr>\n</table>\n</div>\n\n### Select your band preference\nSettable if: The \"Specify Advanced Options\" box is checked\n\nPivotal parm: No\n\nParm name: BandPreference\n\nDescription: Specify the band preference\n\n<div class=\"parm-table\">\n <table class=\"table\">\n\t<tr>\n\t\t<th>Parm Option Name</th>\n\t\t<th>Parm Value</th>\n\t\t<th>Description</th>\n\t</tr>\n  <tr>\n    <td>No preference</td>\n    <td>\"0\"</td>\n\t<td></td>\n  </tr>\n  <tr>\n    <td>Prefer 2.4GHz</td>\n    <td>\"1\" </td>\n\t<td></td>\n  </tr>\n  <tr>\n    <td>Prefer 5.0GHz </td>\n    <td>\"2\"</td>\n\t<td></td>\n  </tr>\n  <tr>\n    <td>Do not change</td>\n    <td>\"3\"</td>\n\t<td>This value (or the absence of this parm from the XML) will not make any change to the current band preference.</td>\n  </tr>\n</table>\t\n</div>\n\t\n### Enable FTOverTheDS\nSettable if: The \"Specify Advanced Options\" box is checked\n\nPivotal parm: No\n\nParm name: FTOverTheDS\n\nDescription: Specify whether to enable FTOverTheDS\n\n### Enable AggregatedFT\nSettable if: The \"Specify Advanced Options\" box is checked\n\nPivotal parm: No\n\nParm name: AggregatedFT\n\nDescription: Specify whether to enable AggregatedFT\n\n### Enable ScanAssist\nSettable if: The \"Specify Advanced Options\" box is checked\n\nPivotal parm: No\n\nParm name: ScanAssist\n\nDescription Specify whether to enable ScanAssist\n\n### Enable Coverage Hole Detection\nSettable if: The \"Specify Advanced Options\" box is checked\n\nPivotal parm: No\n\nParm name: CHD\n\nDescription: Specify whether to enable Coverage Hole Detection\n\n### Enable Sub-Net Roam\nSettable if: The \"Specify Advanced Options\" box is checked\n\nPivotal parm: No\n\nParm name: SubNetRoam\n\nDescription: Specify whether to enable Sub-Net Roam\n\n### WANCountry\nSettable if: The \"Specify Advanced Options\" box is checked\n\nPivotal parm: No\n\nParm name: WANCountry\n\nDescription: Specify whether to enable WanCountry\n"},{"key":"guide-csp-wireless","name":" WirelessMgr","md":"# WirelessMgr\n\n## About WirelessMgr\n\n### Overview\n\nThe WirelessMgr Feature Type allows you to configure wireless configurations on your device, such as the device's Bluetooth settings.  \n\n### Main Functionality\n\n* Enable or Disable Bluetooth\n* Turn Bluetooth On or Off\n* Turn NFC On or Off\n* Turn GPS On or Off\n* Turn WWAN (Wireless WAN) On or Off\n\n##Parameter Notes\n###Enable/Disable Bluetooth\nPivotal parm: No\n\nParm name: Bluetooth\n\nDescription: \n\n>This parm will allow you to specify whether the state of the Bluetooth radio can be changed.\n\n<div class=\"parm-table\">\n <table class=\"table\">\n\t<tr>\n\t\t<th>Parm Option Name</th>\n\t\t<th>Parm Value</th>\n\t\t<th>Description</th>\n\t</tr>\n  <tr>\n    <td>Do not change</td>\n    <td>\"0\"</td>\n\t<td>This value (or the absence of this parm from the XML) will not make any change to whether the state of the Bluetooth radio can be changed.</td>\n  </tr>\n  <tr>\n    <td>Enable</td>\n    <td>\"1\"</td>\n\t<td>This value will cause the state of the Bluetooth radio to be unlocked, allowing it to be changed, either by the device user or by the WirelessMgr Feature Type.</td>\n  </tr>\n  <tr>\n    <td>Disable</td>\n    <td>\"2\"</td>\n\t<td>This value will cause the state of the Bluetooth radio to be locked, preventing it from being changed, either by the device user or by the WirelessMgr Feature Type. This will cause the Bluetooth option in the Settings UI to be grayed out.</td>\n  </tr>\n</table>\n</div>\t\n\n###Turn On/Off Bluetooth\nPivotal parm: No\n\nParm name: BluetoothState\n\nDescription: \n\n>This parm allows you to change the state of the Bluetooth radio to On or Off. Turning the Bluetooth radio on would allow the device to connect to other to other Bluetooth devices that have been paired or to setup a new pairing. Pairing the devices together means that a connection would be established between the Bluetooth enabled devices. For example, a Bluetooth enabled phone would need to first be paired with a Bluetooth enabled headset before the headset could be used.\n\n<div class=\"parm-table\">\n <table class=\"table\">\n\t<tr>\n\t\t<th>Parm Option Name</th>\n\t\t<th>Parm Value</th>\n\t\t<th>Description</th>\n\t</tr>\n  <tr>\n    <td>Do not change</td>\n    <td>\"0\"</td>\n\t<td>This value (or the absence of this parm from the XML) will cause no changes to whether the Bluetooth radio is turned On or Off.</td>\n  </tr>\n  <tr>\n    <td>Turn On</td>\n    <td>\"1\"</td>\n\t<td>This value will cause the Bluetooth radio to be turned On, thus allowing the use of a Bluetooth connection on the device.</td>\n  </tr>\n  <tr>\n    <td>Turn Off</td>\n    <td>\"2\"</td>\n\t<td>This value will cause the Bluetooth radio to be turned Off, thus disallowing the use of a Bluetooth connection on the device.</td>\n  </tr>\n</table>\n</div>\t\n\n###Turn On/Off NFC\nPivotal parm: No\n\nParm name: NFCState\n\nDescription: \n\n>This parm allows you to change the state of the NFC radio On or Off, which would allow or disallow devices to establish a radio connection with each other when they are touched together or are within a close proximity to each other.\n\n<div class=\"parm-table\">\n <table class=\"table\">\n\t<tr>\n\t\t<th>Parm Option Name</th>\n\t\t<th>Parm Value</th>\n\t\t<th>Description</th>\n\t</tr>\n  <tr>\n    <td>Do not change</td>\n    <td>\"0\"</td>\n\t<td>This value (or the absence of this parm from the XML) will cause no changes to whether the NFC radio is turned On or Off.</td>\n  </tr>\n  <tr>\n    <td>Turn On</td>\n    <td>\"1\"</td>\n\t<td>This value will cause the NFC radio to be turned On, thus allowing the use of NFC on the device.</td>\n  </tr>\n  <tr>\n    <td>Turn Off</td>\n    <td>\"2\"</td>\n\t<td>This value will cause the NFC radio to be turned Off, thus disallowing the use of NFC on the device.</td>\n  </tr>\n</table>\n</div>\t\n\n###Turn On/Off GPS\nPivotal parm: No\n\nParm name: GPSState\n\nDescription: \n\n>This parm allows you to change the state of the GPS radio to On or Off, which would allow or disallow the device from using satellite signals to determine the location of the device.\n\n<div class=\"parm-table\">\n <table class=\"table\">\n\t<tr>\n\t\t<th>Parm Option Name</th>\n\t\t<th>Parm Value</th>\n\t\t<th>Description</th>\n\t</tr>\n  <tr>\n    <td>Do not change</td>\n    <td>\"0\"</td>\n\t<td>This value (or the absence of this parm from the XML) will cause no changes to whether the GPS radio is turned On or Off.</td>\n  </tr>\n  <tr>\n    <td>Turn On</td>\n    <td>\"1\"</td>\n\t<td>This value will cause the GPS radio to be turned On, thus allowing the use of GPS on the device.</td>\n  </tr>\n  <tr>\n    <td>Turn Off</td>\n    <td>\"2\"</td>\n\t<td>This value will cause the GPS radio to be turned Off, thus disallowing the use of GPS on the device.</td>\n  </tr>\n</table>\n</div>\t\n\n###Turn On/Off WWAN\nPivotal parm: No\n\nParm name: WWANState\n\nDescription: \n\n>This parm allows you to change the state of the Wireless Wide Area Network (WWAN) radio to On or Off. This would allow or disallow a device from connecting to a WWAN, which is a wide area network that covers a large geographic area through the use of cellular tower technology.\n\n<div class=\"parm-table\">\n <table class=\"table\">\n\t<tr>\n\t\t<th>Parm Option Name</th>\n\t\t<th>Parm Value</th>\n\t\t<th>Description</th>\n\t</tr>\n  <tr>\n    <td>Do not change</td>\n    <td>\"0\"</td>\n\t<td>This value (or the absence of this parm from the XML) will cause no changes to whether the WWAN radio is turned On or Off.</td>\n  </tr>\n  <tr>\n    <td>Turn On</td>\n    <td>\"1\"</td>\n\t<td>This value will cause the WWAN radio to be turned On, thus allowing the use of WWAN on the device.</td>\n  </tr>\n  <tr>\n    <td>Turn Off</td>\n    <td>\"2\"</td>\n\t<td>This value will cause the WWAN radio to be turned Off, thus disallowing the use of WWAN on the device.</td>\n  </tr>\n</table>\n</div>\t\n\n##Example XML\n###Enable the Usage of Bluetooth\n\t:::xml\n\t<wap-provisioningdoc>\n\t\t<characteristic type=\"WirelessMgr\" version=\"4.3\" >\n\t\t\t<parm name=\"Bluetooth\" value=\"1\"/>\n\t\t</characteristic>\n\t</wap-provisioningdoc>\n\n###Disable the Usage of Bluetooth\n\t:::xml\n\t<wap-provisioningdoc>\n\t\t<characteristic type=\"WirelessMgr\" version=\"4.3\" >\n\t\t\t<parm name=\"Bluetooth\" value=\"2\"/>\n\t\t</characteristic>\n\t</wap-provisioningdoc>\n\n###Turn on the Radios\n\t:::xml\n\t<wap-provisioningdoc>\n\t\t<characteristic type=\"WirelessMgr\" version=\"4.3\" >\n\t\t\t<parm name=\"BluetoothState\" value=\"1\"/>\n\t\t\t<parm name=\"NFCState\" value=\"1\"/>\n\t\t\t<parm name=\"GPSState\" value=\"1\"/>\n\t\t\t<parm name=\"WWANState\" value=\"1\"/>\n\t\t</characteristic>\n\t</wap-provisioningdoc>\n\n###Turn Off the Radios To Save Power\n\t:::xml\n\t<wap-provisioningdoc>\n\t\t<characteristic type=\"WirelessMgr\" version=\"4.3\" >\n\t\t\t<parm name=\"BluetoothState\" value=\"2\"/>\n\t\t\t<parm name=\"NFCState\" value=\"2\"/>\n\t\t\t<parm name=\"GPSState\" value=\"2\"/>\n\t\t\t<parm name=\"WWANState\" value=\"2\"/>\n\t\t</characteristic>\n\t</wap-provisioningdoc>\n\n## Feature Compatibility\n\n<iframe src=\"compare.html#mx=4.3&csp=WirelessMgr&os=JB&embed=true\"></iframe> "},{"key":"guide-csp-xml","name":" XmlMgr","md":"# XmlMgr\n\n## About XmlMgr\n\n### Overview\n\nThe MXMS processes a Request XML document which contains one or more Features, where each Feature is of one of the defined Feature Types. Each Feature is represented by a top-level characteristic tag in the Request XML document, whose type matches the Feature Type. For example, a Feature of Feature Type \"XmlMgr\" in XML would begin with:\n\n\t:::XML\n\t<characteristic type=\"XmlMgr\" ...\n\nThe MXMS executes Features, by passing them to the corresponding CSPs, in the order they appear in the Request XML document, by passing the characteristic to the corresponding CSP. When a Feature is executed by a CSP, the CSP returns Result XML. A characteristic tag is returned by the CSP to indicate that the Feature succeeded. A characteristic-error tag is returned by the CSP  to indicate that the Feature failed. The MXMS aggregates the Result XML returned by the CSPs in the order the Features are executed, to create the final Result XML.\n\nFor the purposes of discussing MXMS Error-Handling, any Feature that can be executed at all is considered a success and any Feature that cannot be executed at all is considered a failure. Errors are handled by the MXMS based on the Error Handling Mode that is in effect. The MXMS has a Default Error Handling Mode that is always in effect at the beginning of each new Request XML document that is processed. The Error Handling Mode can be left as the default or can be changed one or more times within a single Request XML document.\n\nWhen the Default Error-Handling Mode, \"Execute all to end\", is in effect, the MXMS executes all Features, whether they succeed or fail, until the end of the XML is reached. The MXMS then returns the Result XML which will contain the same number of characteristic tags plus characteristic-errors tags as there were characteristic tags in the Request XML document. This Error-Handling Mode basically tries to execute everything and reports what happens at the end. This mode is the default because it is good for most general situations. But if one Feature depends on another, this mode can cause a \"domino effect\" where one failure causes a whole sequence of failures.\n\nThe MXMS supports an additional Error-Handling Mode, \"Execute until error, then stop\", where it stops executing Features on the first failure and returns Result XML that contains only the characteristic tags for the Features that succeeded plus the characteristic-error tag for the Feature that failed. This mode can be beneficial when Features are dependent on each other since it avoids the \"domino effect\" where one failure causes a whole sequence of failures and also allows execution to be terminating sooner, without attempting Features that are doomed to fail.\n\nThe XmlMgr Feature Type allows you to specify the Error Handling Mode the MXMS should use when processing a Request XML document. If no XmlMgr Features are present in a Request XML document, then the entire document is processed using the Default Error Handling Mode. If an XmlMgr Feature is present in a Request XML document, then the Error Handling Mode specified by that XmlMgr Feature will be used by the MXMS when executing subsequent Features up until the next XmlMgr Feature or the end of the Request XML document, whichever comes first.\n\n### Main Functionality\n \n* Specify the XML processing mode to use\n\t* Execute all Features and return all successes and failures\n\t* Execute Features until first error, then stop and return all successes and first failure\n\t* Execute Features until first error, then skip to next \"Catch\" or end\n\t* Stop skipping and resume execution of Features\n\n\n##Parameter Notes\n### XML Processing Mode\nPivotal parm: No\n\nParm name: ProcessingMode\n\nDescription: \n\n>This parm allows you to specify the Error Handling Mode the MXMS should use when processing a Request XML document.\n\n<div class=\"parm-table\">\n <table class=\"table\">\n\t<tr>\n\t\t<th>Parm Option Name</th>\n\t\t<th>Parm Value</th>\n\t\t<th>Description</th>\n\t</tr>\n  <tr>\n    <td>Execute all to end</td>\n    <td>\"1\"</td>\n\t<td><p>This value will set the Error Handling Mode such that the MXMS will attempt to execute all Features that appear in the Request XML document, in the order they appear without respect to success or failure of each Feature.</p><p>The Result XML will then return all successes and all failures, in the order the execution of the Features were attempted.</p></td>\n  </tr>\n  <tr>\n    <td>Execute until error, then stop</td>\n    <td>\"2\"</td>\n\t<td><p>This value will set the Error Handling Mode such that the MXMS will attempt to execute Features that appear in the Request XML document, in the order they appear so long as those Features succeed, but will stop on the first failure and ignore the remaining Features in the Request XML.</p><p>The Result XML will then return all successes and the first failure, in the order the execution of the Features were attempted.</p></td>\n  </tr>\n  <tr>\n    <td>Try until error, then Skip to Catch</td>\n    <td>\"3\"</td>\n\t<td><p>This value will set the Error Handling Mode such that the MXMS will attempt to execute Features that appear in the Request XML document, in the order they appear so long as those Features succeed, but will stop on the first failure and begin skipping Features.</p><p>Features will be skipped until an XmlMgr Feature is encountered where parm ProcessingMode has the value \"4\" (\"Catch error, Execute remainder\") or the end of the Request XML document is reached. If a \"Catch\" is reached, then the MXMS will continue execution of subsequent Features with the Error Handling Mode set to \"1\" (\"Execute all to end\").</p><p>The Result XML will then return all successes and the first failure, in the order the execution of the Features were attempted.</p></td>\n  </tr>\n  <tr>\n    <td>Catch error, Execute remainder</td>\n    <td>\"4\"</td>\n\t<td>This value indicates the location of a \"Catch\" point as described above.</td>\n  </tr>\n</table>\n</div>\t\n\n## Feature Compatibility\n\n<iframe src=\"compare.html#mx=4.3&csp=XmlMgr&os=JB&embed=true\"></iframe> "},{"key":"guide-MDM-persistence","name":"Persistence","md":"#Persistence\n\n##Overview\n\nIn the context of the MDM Toolkit, Persistence is defined as the ability of to persist across an Enterprise Reset or an OS Update that results in an Enterprise Reset.\n\nOn Zebra Android devices, an Enterprise Reset is the same as a Factory Reset with the exception that the /enterprise partition is preserved (whereas it would be destroyed on a Factory Reset). The purpose of an Enterprise Reset is to return the device to an Enterprise-defined default state, generally as determined by the contents of the /enterprise partition. When using the MDM Toolkit, an MDM Agent can control the Enterprise-defined default state, and hence what will persist across an Enterprise Reset. This is done by directly controlling which MDM-deployed content is stored in the /enterprise folder, so it will survive an Enterprise Reset, and by controlling which Request XML Documents are Persistent, using the [PersistMgr Feature Type](#guide-csp-persistence).\n\nThere are two key aspects of Persistence that should be considered with regard to an MDM: Persistence of Manageability by the MDM and Persistence of Management Operations performed using the MDM. These aspects will be covered in the major sections of this page.\n\n###Persistence of Manageability by the MDM\n\nAs a general rule, most customers using an MDM would expect that an Enterprise Reset would return a device to their specific Enterprise-defined default state and that state would include everything necessary to allow the device to be managed by the MDM following the Enterprise Reset. It is therefore incumbent on an MDM vendor to ensure that their MDM Agent is capable of meeting this expectation.\n\nIf a customer used StageNow to Stage the device to install the MDM Agent and bring the device under management by the MDM, as described in [Staging a Device to be Managed by an MDM](#guide-MDM-staging), then Persistence of Manageability would be a given, since it would have been established by StageNow. But if the customer used some sort of sideloading process to install the MDM Agent and bring the device under management by the MDM, then Persistence of Manageability might require significant additional effort to achieve. This is another good reason why customers are strongly recommended to use StageNow to install the MDM Agent and bring the device under management by the MDM.\n\nOf course, in order for Persistence to work as expected when established using StageNow, the customer must use StageNow properly for the MDM in question. Since each MDM will likely have unique aspects, such as file names, etc. the MDM vendor will need to provide customers with the specifics related to their MDM Agent APK file(s), configuration file(s), etc. so the customer can use StageNow appropriately to achieve Persistence of Manageability for that MDM.\n\n####Staging Requirements for Persistence of Manageability\n\nIn order to Stage a device to be managed by an MDM and to provide Persistence of Manageability for that MDM across an Enterprise Reset, the following Staging requirements would need to be met:\n\n1.  A suitable version of the MXMS must be present on a device before an MDM Agent can use any Feature Types to perform Management Operations on that device. The MDM Tool Kit is designed to target MXMS versions 4.4 and higher.\n\n\tRequirement 1 could be accomplished on most Zebra Android devices by having the customer use StageNow to install MXMS 4.4, if it is not already present on the device.\n\n2.\tThe MDM Agent configuration file(s) must be stored in a location within the device file system that will persist across an Enterprise Reset\n3.\tThe MDM Agent APK file(s) must be stored in a location within the device file system that will persist across an Enterprise Reset.\n\n\tRequirements 2 and 3 could be accomplished on most Zebra Android devices by having the customer use StageNow to store these files to a folder under /enterprise/usr. In most cases, it would be advisable to use an MDM-specific sub-folder under this folder, such as /enterprise/usr/mymdm. Such a folder should have its permissions set to 777 (world readable and writable) to ensure that it will be accessible even if owner IDs change as a result of reinstallation following Enterprise Reset. If the StageNow FileMgr Setting Type is used to deploy files to such a folder, it will automatically set the permissions correctly. If the folder is created by the MDM Agent, it should set the permissions appropriately. The MDM vendor should select this folder and communicate it to the customer so they could have that information when using StageNow to Stage a device to be managed by that MDM.\n\n4.\tThe MDM Agent APK file(s) must be installed\n\n\tRequirement 4 could be accomplished on most Zebra Android devices by having the customer use the StageNow AppMgr Setting Type install the APK file(s) using the same paths and file names to which those files were stored using the StageNow FileMgr Setting Type. The MDM vendor should select the locations and specify the file names and communicate them to the customer so they could have that information when using StageNow to Stage a device to be managed by that MDM.\n\n5.\tThe MDM Agent APK(s) must be launched\n\n\tRequirement 5 could be accomplished on most Zebra Android devices by having the customer use the StageNow Intent Setting Type to send the Android Intent(s) required to launch the MDM Agent APK(s). The exact Android Intent(s) that need to be sent, and the details of those Intent(s), will be specific to the MDM vendor implementation. The MDM vendor should define those details and communicate them to the customer so they could have that information when using StageNow to Stage a device to be managed by that MDM.\n\n6.\tConnectivity must be established via which the MDM Agent can contact the MDM Server\n\t\n\tRequirement 6 could be accomplished on most Zebra Android devices by having the customer use various StageNow Setting Types, such as the Wi-Fi Setting Type or the GprsMgr Setting Type, in conjunction with supporting Setting Types, such as the CertMgr Setting Type, to establish the required Connectivity. The exact Settings Types to be used will depend on the types of Connectivity the customer wishes to establish and the types of Connectivity over which the MDM supports management of devices. This will likely vary widely by customer and the MDM vendor can likely give the customer only general advice on what Connectivity to establish when using StageNow to Stage a device to be managed by that MDM.\n\n7.\tAll XML used above should be made Persistent\n\n\tRequirement 7 could be accomplished on most Zebra Android devices by having the customer use the StageNow PersistMgr Setting Type to make the entire Staging Profile Persistent.\n\t\n####Sample StageNow Staging Profile Steps\n\nA StageNow Staging Profile that meets all 7 requirements above to achieve Persistence of Manageability is shown below:\n\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; a. Wi-Fi - Set up Staging WLAN network\n\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; SSID: \"mynetwork\"\n\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Passphrase: \"mysecret\"\n\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; b. FileMgr - Download MDM Agent Configuration file to:\n\t\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Target Path and File Name: \"/enterprise/usr/mymdm/mymdm.cfg\"\n\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; c. FileMgr - Download MDM Agent APK file to:\n\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Target Path and File Name: \"/enterprise/usr/mymdm/mymdm.APK\"\n\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; d. AppMgr - Install APK file from:\n\t\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; APK Path and Name: \"/enterprise/usr/mymdm/mymdm.APK\"\n\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; e. Intent - Send Intent, with:\n\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Action: \"Start Activity\"\n\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Android Action Name: \"android.intent.action.MAIN\"\n\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Package Name: \"com.mycompany.mymdm\"\n\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Class Name: \" com.mycompany.mymdm/MainActivity\"\n\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; f. PersistMgr - Persist entire Staging Profile, with:\n\t\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Persist Action: \"1\"\n\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Persist As Name: \"StageNowPersistMyMDM\"\n\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Persist As Version: \"1.0\"\n\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Persist As Order: \"50\"\n\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Persist If Error: \"false\"\n\nThe sample Staging Profile above would, in theory, meet all the requirements to achieve Persistence of Manageability for a hypothetical MDM named \"MyMDM\". In particular:\n\n* Step a) This step establishes Connectivity that will be used to download the required files during Staging and that will then be used by the MDM Agent to contact the MDM Server.\n* Step b) This step causes the MDM Agent Configuration file to be downloaded and stored into the folder \"/enterprise/usr/mymdm\", which is a location that will persist across an Enterprise Reset.\n* Step c) This step causes the MDM Agent APK file to be downloaded and stored into the folder \"/enterprise/usr/mymdm\", which is a location that will persist across an Enterprise Reset.\n* Step d) This step installs the MDM Agent APK silently.\n* Step e) This step launches the Main Activity Class of the MDM Agent.\n* Step f) This step causes the Request XML Document containing steps a) through f) to be stored in the /enterprise partition and arrange for that Request XML Document to be resubmitted following subsequent Enterprise Resets.\n\n>**Note:** The above sample Staging Profile presupposes that the same network can and will be used to download files as well for the MDM Agent to contact the MDM Server. This need not be the case and may not always be the right thing to do, depending on the customer needs and situation. Some customers may need or want to download during Staging to be done over a Staging Network and for the MDM Agent to contact the MDM Server via a different Production Network. In such cases, the Staging Profile used might need to be more sophisticated than the above sample.\n\n####Operational Aspects of Persistence of Manageability\n\nOnce the Staging steps in the above sample Staging Profile have been completed, the MDM Agent would be running. When the MDM Agent starts, it would presumably read its Configuration file, looking for the specific file name in a specific location (e.g. \"/enterprise/usr/mymdm/mymdm.cfg\") and configure itself based on the contents of that file. It would then use that configuration information to reach the MDM Server, via the already established Connectivity. The device then will be discovered by the MDM Server and will show up in the device inventory displayed by the Management Console of the MDM Server.\n\nOnce the device is managed by the MDM, if an Enterprise Reset was performed on the device, the PersistMgr would resubmit the Request XML Document that was persisted as a result of Staging. This would lead to the following:\n\n* Step a) This step will re-establish the Connectivity that was originally established during Staging, and that will be used by the MDM Agent to contact the MDM Server.\n* Step b) This step will attempt to re-download the MDM Agent Configuration file, but since the file already exists (since it was originally downloaded to a persistent location), the download will fail. This failure will not stop execution of the Request XML Document.\n* Step c) This step will attempt to re-download the MDM Agent APK file but, since the file already exists (since it was originally downloaded to a persistent location), the download will fail. This failure will not stop execution of the Request XML Document.\n* Step d) This step will re-install the MDM Agent APK silently.\n* Step e) This step will re-launches the Main Activity Class of the MDM Agent.\n* Step f) This step will not re-persist the Request XML Document since Persist If Error was set to \"false\" and errors did occur (during the download steps). But since the Request XML Document was already Persistent, it will remain Persistent and hence will be resubmitted again on subsequent Enterprise Resets.\n\n####MDM Agent Updates and Persistence of Manageability\n\nGiven that Persistence of Manageability has been established for the MDM Agent using StageNow, as described above, there likely will come a time when the MDM Agent needs to be updated, as described in [Updating the MDM Agent](#guide-MDM-updating). While the MDM Agent can be updated directing using the [AppMgr Feature Type](#guide-csp-app), unless care is taken, that will not automatically cause the new version of the MDM Agent to become the Persistent version. As noted above, following an Enterprise Reset, PersistMgr will re-install the MDM Agent APK file, from the location in which it is stored, as a result of resubmitting the Persistent Request XML Document.\n\nIf the new version of the MDM Agent APK file has the same name and is downloaded and stored into the same persistent location, thus physically replacing the existing APK file, then the new version will be re-installed as a result of resubmitting that existing Persistent Request XML Document following a subsequent Enterprise Reset. Since the StageNow FileMgr Setting Type has to be told what name to give the file and the location in which it should be stored, you would need to know the details of how the customer used StageNow in order to know how to update the MDM Agent so as to maintain Persistence of Manageability. The easiest way to do that is to tell the customer the right way to use StageNow to Stage your MDM for Persistence of Manageability and then leverage that knowledge to update the MDM Agent to maintain Persistence of Manageability.\n\n####Connectivity and Persistence of Manageability\n\nVarious Feature Types, such as the [Wi-Fi Feature Type](#guide-csp-wifi) or the [GprsMgr Feature Type](#guide-csp-gprs), in conjunction with supporting Feature Types, such as the [CertMgr Feature Type](#guide-csp-cert), can be used to establish new Connectivity and/or modify existing Connectivity. But unless care is taken, any newly configured Connectivity will not automatically become Persistent. And as previously noted, Persistence of Connectivity is a key requirement for Persistence of Manageability, since manageability depends on the MDM Agent contacting the MDM Sever via some Connectivity.\n\nPersistence of Connectivity is really a topic that is considered part of the next section Persistence of Management Operations performed using the MDM. But some aspects of Connectivity Persistence are worth mentioning here due to the potential overlap with Staging and the important role Connectivity plays in Persistence of Manageability. If Connectivity is made Persistent as part of Staging, as was shown in the sample Staging Profile, then what happens when Connectivity needs to be changed via management operations performed using the MDM? Ideally, such changes to Connectivity would be as persistent, or perhaps more persistent as the Convexity configured during Staging.\n\nIt is important to understand that when Staging was used to persist a Request XML Document for a Staging Profile, then entire Request XML Document will persist under a single assigned name. If the MDM later persists some new Connectivity via another Request XML Document as another name, then both Request XML Documents will be persistent and both will be resubmitted on subsequent Enterprise Resets. Since the two might conflict with each other, order can be important, since the last one submitted will \"win\". This is where \"Persist As Order\" comes in. In the sample Staging Profile, \"Persist As Order\" was arbitrarily shown as \"50\", but could be set to any value from 00 to 99.\n\nThe MDM vendor should provide guidance to the customer on which \"Persist As Order\" to use when Staging. Recommending a value of \"50\" leaves The MDM plenty of options to choose to persist other Request XML Documents with a higher or lower order. To ensure that MDM persisted Connectivity changes are applied after those persisted by Staging, the MDM can intentionally use a higher number, thus ensuring it is submitted later. This allows the MDM to undo or change or augment the Connectivity persisted during Staging, so as long as the customer followed the Staging recommendations provided by the MDM vendor.\n\n###Persistence of Management Operations performed using the MDM\n\nThis section assumes that a customer has already followed guidelines and recommendations provided by an MDM vendor about how to Stage a device to achieve Persistence of Manageability and that those guidelines and recommendations were based on, and met the requirements set forth in the previous section.\n\nOnce a device is successfully being managed by an MDM and Persistence of Manageability has been achieved, the next question is \"What about the Persistence of the various Management Operations that have been performed for the device by the MDM Agent at the request of the MDM Server?\" This section will address this question.\n\n####Approaches to Persistence of Management Operations\n\nPersistence of Manageability ensures that a device will return to a state where it is managed by the MDM after each Enterprise Reset. In most cases, there will be a change of state that occurs as a result of such an Enterprise Reset, as a result of what does not persist.  The main reason why an Enterprise Reset would be done is to discard anything that has been done but that was not intentionally persisted and hence have not been made part of the Enterprise-defined default state.  Performing an Enterprise Reset is typically done to abandon changes that may have been made by the device user or temporarily by an MDM, to restore normal operation by returning to a \"known good state\".\n\nSince an Enterprise Reset generally results in some change of device state, an MDM Agent should be able to detect the new post-Enterprise Reset state of the device, following an Enterprise Reset, and report that new state to the MDM Server. The MDM Server should then be able to detect that change of state, by detecting what is no longer present.  The MDM Server should then be able to re-apply any configuration to the device that it needs or wants, via the MDM Agent. In a sense, the MDM could offer Persistence of Management Operations that have been previously performed, following an Enterprise Reset, simply by re-performing those Management Operations after the Enterprise Reset.\n\nDepending on the situation, a customer may be completely satisfied with an MDM that only offers an MDM Server-based ability to re-perform Management Operations, following an Enterprise Reset, as a means to make those Management Operations Persistent across an Enterprise Reset. But there may also be reasons why a customer considers such an approach to be undesirable or even unacceptable, such as:\n\n* Connectivity might be lacking following an Enterprise Reset\n\n\tDepending on the circumstances under which an Enterprise Reset is initiated, Connectivity that allows the MDM Agent to contact the MDM Server might be lacking. Just because the configuration of the Connectivity has been successfully performed doesn't mean the Connectivity will actually be available. If the connection to the MDM Server is down for some reason, or if there is a disruption in the wireless network, or if the device is out of range of a wireless network, then the MDM Agent may be unable to contact the MDM Server right away.\n\t\n\tIf the device is not usable for its intended purpose following an Enterprise Reset until the MDM Server is able to successfully re-perform critical Management Operations, then a lack of Connectivity could result in a loss of productivity. This could lead a customer to require that certain critical Management Operations be made Persistent locally on the device, so the device can be usable following an Enterprise Reset regardless of Connectivity. Obviously, in such cases, a device used under such situations would not be actively managed by the MDM until Connectivity becomes available again. But the customer might prefer that to having the device be unusable.\n\n* Re-performing Management Operations takes time\n\n\tFollowing an Enterprise Reset, if Connectivity is available then the MDM Agent can contact the MDM Server and report its post-Enterprise Reset State. The MDM Server can then compare the current state of the device to the desired state of the device and begin initiating Management Operations to return the device to a desired post-Enterprise Reset state. But that process may require many round trips of information between the MDM Agent and the MDM Server, to download files, etc., all of which may take time. If those Management Operations are critical to return the device to a usable state, then that time required to perform them could result in a loss of productivity. This could lead a customer to require that certain critical Management Operations be made Persistent locally on the device, so the device can be usable more rapidly following an Enterprise Reset.\n\t\nThis leads us to identify the following high level approaches that an MDM vendor might need or want to take to make Management Operations performed using that MDM Persistent:\n\n* MDM Server re-performs Management Operations by resending them to the MDM Agent\n\n\tThis approach as described earlier and the potential downsides related to dependence on Connectivity and potential lag time were already discussed. This approach has the upside that it may place fewer demands on device storage.\n\t\n\tIn particular, the /enterprise partition is a limited resource on Zebra Android devices, usually having a size of 128MB. If there is a need to make many large applications Persistent, there may not be adequate space to store Persistent copies of their APK files on the /enterprise partition. If not every application is of the same criticality, it might be appropriate to use this approach for the less critical applications or largest and use other approaches for the most critical applications or smaller applications.\n\n* MDM Agent saves and re-performs MDM commands received from the MDM Server\n\n\tThe recommended model for implementing MDM Agents using the MDM Toolkit could be described by the following steps:\n\t\n\t1.\tMDM Server sends MDM-specific command(s) to MDM Agent\n\t2.\tMDM Agent receives MDM-specific command(s) from MDM Server\n\t3.\tMDM Agent interprets MDM-specific command(s) to determine function(s) to perform\n\t4.\tMDM Agent extracts relevant information from an MDM-specific command for a function\n\t5.\tMDM Agent selects suitable pre-built Request XML template(s) for the function\n\t6.\tMDM Agent substitutes relevant information into the XML template(s) for the function\n\t7.\tMDM Agent assembles Request XML Document(s) to perform one or more functions\n\t8.\tMDM Agent submits the Request XML Document(s) to the MXMS\n\t9.\tMDM Agent receives the Result XML Document(s) back from the MXMS\n\t10.\tMDM Agent interprets the Result XML Document(s) to determine what happened\n\t11.\tMDM Agent creates MDM-specific result(s) to describe what happened\n\t12.\tMDM Agent sends MDM-specific result(s) to the MDM Server\n\t\n\tIf the above model is followed, then an MDM Agent could choose to store the MDM-specific command(s) received from MDM Server in a location where they will persist across an Enterprise Reset. Following an Enterprise Reset, once the MDM Agent is running again, it can read those MDM-specific command(s) and re-process them (e.g. starting from step 3). Since these command(s) will be processed without having just been received from the MDM Server, the results likely will not need to be sent back to the MDM Server.\n\n\tOne potential benefit of this approach is that is can be used to Persist all Management Operations that the MDM Agent can be requested to do by the MDM Server, whether a given operation is implemented by the MDM Agent by submitting a Request XML Document to MXMS or not. It could also be used to Persist combinations of things that use both custom MDM Agent code and Request XML Documents that are submitted to MXMS.\n\n* MDM Agent saves and re-submits Request XML Documents\n\n\tIf the recommended model for implementing MDM Agents using the MDM Toolkit, as described above, is followed, then an MDM Agent could choose to store Request XML Documents, which have previously been submitted to the MXMS, in a location where they will persist across an Enterprise Reset. Following an Enterprise Reset, once the MDM Agent is running again, it can read those Request XML Documents that it stored and resubmit them to MXMF itself (e.g. starting from step 8).\n\t\n\tOne potential benefit of this approach is that the time lag can be reduced because the MDM Agent doesn't need to spend time re-processing MDM-specific command(s) and creating Request XML Documents again. The MDM Agent can proceed immediately to submit previously saved Request XML Documents that are \"ready to use\".\n\n\tOne potential downside of this approach is that it can only be used to Persist Management Operations that the MDM Agent implements solely using Request XML Documents that are submitted to MXMS. If custom MDM Agent code must be executed to perform a given Management Operation, then the approach of saving MDM-specific command(s) would likely be a better choice since it would allow the MDM Agent to execute such code while processing those command(s). Additionally, this approach places additional demands on local persistent storage and hence may not be practical to use to persist large or numerous applications.\n\n* MDM Agent requests PersistMgr to save and re-submit Request XML Documents\n\n\tIf the recommended model for implementing MDM Agents using the MDM Toolkit, as described above, is followed, then an MDM Agent could choose to use PersistMgr to cause Request XML Documents to be stored persistently and then to be automatically resubmitted following an Enterprise Reset by PersistMgr.\n\t\n\tOne potential benefit of this approach is that it can simplify the implementation of an MDM Agent required to achieve Persistence of Management Operations because most of the work will be done by PersistMgr. The MDM Agent needs to identity when Persistence is required, and request PersistMgr to do it. But the MDM Agent doesn't thereafter have to take any action following an Enterprise Reset to make Persistence actually occur.\n\n\tThis approach shares the same downside as the approach of having the MDM Agent resubmit stored Request XML Documents in that it can only Persist what can be done via MXMS, not any custom code that may be implemented within them MDM Agent.  Similarly, this approach places additional demands on local persistent storage and hence may not be practical to use to persist large or numerous applications.\n\n####Persistence Caveats\n\nOnce one or more approaches have been chosen for how to achieve Persistence of Management Operations, some or all of the following caveats should be considered to determine if they apply and, if so, how they should be addressed to help provide a robust and complete solution.\n\n* Not every Management Operation needs to be Persisted\n\n\tWhen a customer Device Administrator is performing Management Operations on a device from the Management Console of an MDM Server, some Management Operations will make sense to be Persistent. In other words, the Device Administrator may want them to be part of the new Enterprise-defined default state that the device will return to on subsequent Enterprise Resets. But it may not always be the case that every Management Operation initiated by a Device Administrator should be so permanent. If a Management Operation is performed as a temporary troubleshooting measure, then it may be preferable not to Persist it, and hence not to make it part of the new Enterprise-defined default state. In fact, a key reason why an Enterprise Reset might be issued would be to discard everything that is Non-persistent and return the device to a clean, \"known good state\".\n\t\n\tThis means that an MDM would ideally provide some mechanism for the customer Device Administrator to express their intention and take control over which Management Operations should or should not be Persisted. If such control is not provided to the Device Administrator via the Management Console, then the MDM may need to try to make the decision themselves. That could involve making everything Persistent or making nothing Persistent. Since these polar extremes might be undesirable, the MDM might make this determination on a per-Management Operation basis. It is strongly recommended that MDMs consider providing such control to the Device Administrator since it will provide a more comprehensive solution and allow it to better adapt to customer requirements.\n\n* The /enterprise partition has a limited amount of space\n\n\tWhen making Management Operations Persistent, MDMs should keep in mind that the /enterprise partition is a limited resource used by multiple entities within Zebra Android devices. While the /enterprise partition is allocated 128MB, at least some of this space will be consumed by existing system processes. Consider that Android APK files can range from a few MB to tens of MB in size. If there are many APKs to install, or if the APKs to be installed are large, the available space in /enterprise may be rapidly used up. Also keep in mind that while most Request XML Documents are fairly small, every Request XML Document that is made Persistent using PersistMgr will also occupy space on the /enterprise partition.\n\t\n\tAs noted above, it is strongly recommended that control over which Management Operations are made Persistent should be provided by the MDM to the customer Device Administrator via the Management Console. In that way, the Device Administrator is empowered to decide how to utilize the limited space on the /enterprise partition and to select which Management Operations should be persisted locally on the device and which operations can wait to be performed again by the MDM Server.\n\n\tIt should also be understood that the /enterprise partition may not be the only place that an MDM Agent can store files such that they will Persist across an Enterprise Reset. On devices that have a fixed internal Primary Storage partition, files stored on that partition may well survive an Enterprise Reset, although they might or might not survive certain OS Updates (e.g. from one major version to another). On devices that support removable storage and on which storage card is present, files store on that storage card will generally always survive an Enterprise Reset.  The details of what is possible will generally vary by device and circumstances.  Providing control to the customer Device Administrator of where to store files will allow such variations to be exploited without having to \"hard code\" them into the MDM Agent or Server.\n\n\tWhile there may be multiple alternate locations that could be used on a particular device to Persist files across an Enterprise Reset, the /enterprise partition is the one that is supported on all Zebra Android devices and hence should be used wisely. Also note that Request XML Documents that are Persisted by PersistMgr will always be stored in the /enterprise partition, but can reference files stored elsewhere. So, hybrid solutions that support use of multiple partitions for Persistence can be deployed. It is strongly recommend that customer Device Administrators be provided a method to control the location where files are stored. This could provide both a means to decide what to Persist but also to decide which partition to use to persist which content.\n\n* The MDM Agent may not be the only application using PersistMgr\n\n\tAs noted earlier, customers can use the StageNow PersistMgr Setting Type to achieve Persistence of Management for an MDM. The StageNow PersistMgr Setting Type could also be used by the customer to Persist many other things. In addition, the PersistMgr Feature Type could be used by custom applications written using Zebra's Enterprise Mobility Development Kit (EMDK) for Android to Persist various things. Finally, in theory a customer could install multiple MDM Agents, each of which could be using the PersistMgr Feature.\n\t\n\tThe primary thing to consider is that just because the MDM Agent submits a Request XML Document and includes a PersistMgr Feature to make it Persistent, doesn't mean that there aren't already, or won't later be, other Persistent Request XML Documents that do similar things and that might conflict. It is important to understand that when multiple applications are using PersistMgr, no one application is inherently pre-eminent. An MDM Agent can't guarantee that its use of PersistMgr will somehow take precedence over others.\n\n\tThe following are some of ways that an MDM might seek to cope with such situations:\n\t\n\t* The MDM Agent could query PersistMgr, at strategic times, to determine which Request XML Documents are Persistent and what their names are, and report them to the MDM Server for display in the Management Console. While the MDM Agent cannot obtain the contents of those, knowing the names might provide a customer Device Administrator with some idea of what they do, and the order may help track down why the end result is not as expected.\n\t* The MDM Agent could use some consistent naming scheme to identify its own Persistent Request XML Documents and thereby differentiate them from others.\n\t* The MDM Agent could provide the customer Device Administrator with a method to remove Persistent Request XML Documents that are unknown or that might be suspect.\n\t* The MDM Agent could use the [AccessMgr Feature Type](#guide-csp-access), perhaps at the request of the customer Device Administrator via the Management Console of the MDM Server, to control which applications are allowed to submit Request XML Documents to the MXMS. This could be used to give the MDM exclusive, or semi-exclusive access to perform Management Operations using MXMS.\n"},{"key":"guide-MDM-staging","name":"Staging a Device","md":"#Staging a Device\n\n##Overview\n\nStaging a device refers to the process of taking a device out of the box and setting it up to be managed by MDM.\n\nMXMS is required to be installed on the device in order for it to be managed by the MDM. Therefore, there are three states that a device can be in when it is taken out of the box which would determine if action needs to be taken to meet this requirement:\n\n1. The device does not have the MXMS installed\n\t* All Jellybean devices do not have the MXMS installed on them out of the box. Therefore, the 4.4 version of the MXMS will need to be installed.\n2. The device has an old version of MXMS installed\n\t* The MDM Toolkit targets the MXMS version 4.4, so MXMS will need to be upgraded to this version if the device has an older version\n3. The device has the the 4.4 version of MXMS\n\t* Since this is the latest version of MXMS, no upgrades to MXMS would be required on these devices.\n\t\nThere are two ways that MXMS can be installed and updated on a device. These options are through the use of StageNow or sideloading. StageNow can be used to stage devices that may or may not have MXMS installed on them. This tool can create barcodes that can be scanned with the RD Client to stage the device. This method is recommened over using the sideloading option since this would require many manual steps to be performed. For more information on how to use StageNow to install and update MXMS and also to stage a device to persist the MDM Managability settings, please see the [MDM Persistence page.](#guide-MDM-persistence)\n\nWhen the device is successfully staged, the device will show up on the MDM console and it will be able to be managed. Certain devices may also display a screen saying the connection was successful. After the device is connected, the MDM agent will send its status to the server on a periodic basis."},{"key":"guide-MDM-updating","name":"Updating the MDM Agent","md":"#Updating the MDM Agent\n\n##Overview\n\nThe MDM Agent may need to be updated when new versions are released. The [AppMgr Feature Type](#guide-csp-app) can be used to upgrade this. \n\nThe AppMgr Feature that should be used for this would be its Upgrade action, instead of using its Uninstall and Install actions. This is because uninstalling the MDM Agent would cause its data to be wiped out. \n\nBy using the Upgrade action, the MDM Agent will not be uninstalled and the existing data will not be wiped out. The MDM Agent that is already installed and the newer version that is being installed must:\n\n* Have the same package name\n* Be signed by the same developer\n* The newer app must have a higher version number\n\nTherefore, the steps that would have to be taken to update the MDM Agent would be:\n\n1. Download the new version of the MDM Agent APK file(s) onto the device\n2. Save the new MDM Agent APK file(s) into a persistent storage location on the device, such as the Enterprise Partition. It is recommended that the new version would be saved in the same location of the previous MDM Agent's APK file(s) and that the new file(s) should overwrite the old file(s).\n3. The AppMgr Feature Type should then be used to upgrade the MDM Agent.\n\n\t>**Note:** The Upgrade action will cause the running MDM Agent on the device to be shut down before it installs the new version. This may affect any processes that are running while the Upgrade action was triggered. For example, if the MDM Agent was submitting an XML to the MXMS while the Upgrade action was triggered, MXMS will still process the XML since it was sent before the MDM Agent was shut down. However, the Result XML document that is returned by the MXMS may not be received by the MDM Agent, possibly causing errors to not be detected.\n\n4. The new version of the MDM Agent has been updated and will be used on the device now.\n\n>**Note:** The above steps are used to acheive Persistence of Manageability by the MDM, which is described in the [Persistence page](#guide-MDM-persistence)."},{"key":"guide-MX-interface","name":" MX Management System Interface","md":"# MX Management System Interface\n\nIn order to communicate with the MXMS, you must setup a binding to the service. Once this reference is established you can then:\n\n* Send XML to change device behavior or configuration\n* Query for current device and framework settings\n* Process results sent back from the MXMS\n\n## Requirements \n\n* Zebra Android Device with MX\n* Android ADT\n\n## Setup Code ###\n1. Create a new Android project with an empty activity in Eclipse.   \n\n2. The following permissions needs to be added to your application's manifest file to allow it to access MXMS.\n\n\t\t:::xml\n        <uses-permission android:name=\"com.symbol.mxmf.ACCESS_MX_MANAGEMENT_FRAMEWORK_SERVICE\" />\n\t\t<uses-permission android:name=\"com.motorolasolutions.emdk.mxframework.ACCESS_MX_MANAGEMENT_FRAMEWORK_SERVICE\"/>\n\t\t\n3. Create two new packages in your application. One package should be named `com.symbol.mxmf` and the other package should be named `com.motorolasolutions.emdk.mxframework`. These packages will be used for holding the aidl (Android Interface Definition Language) files.\n\n4. The SimpleMdmToolKitSample project, which is supplied in the MDM Toolkit, contains the IMxFrameworkService.aidl files that should be copied into your application. These AIDL files are located in the SimpleMdmToolKitSample's `com.symbol.mxmf` and `com.motorolasolutions.emdk.mxframework` packages. These AIDL files should be copied into the respective packages that were made in Step 3.\n\n5. In the package that contains the empty activity that was created in Step 1, copy and paste the following classes from the SimpleMdmToolKitSample project's `com.symbol.simplemdmtoolkitsample` package:\n\n\t* MxNamespace.java\n\t* MxNamespaceMotorolaSolutions.java\n\t* MxNamespaceSymbol.java\n\t* SymbolBrand.java\n\t* XmlParser.java\n\n\t>**Note:** The package names in these classes will need to be edited to match the package name of your application.\n\n6. In your application's activity, the onCreate method should call the init method that is in the SymbolBrand class. This will check that MXMS is installed on the device. If MXMS is detected, your application will be bound to MXMS, allowing interaction to occur between them.\n\n\t\t:::java\n\t\t// Variable to hold the main activity\n\t\tstatic private Activity m_activity;\n\t\n\t\t@Override\n\t\tprotected void onCreate(Bundle savedInstanceState)\n\t\t{\n\t\t\tsuper.onCreate(savedInstanceState);\n\t\t\tsetContentView(R.layout.activity_main);\n\t\t\t\n\t\t\t// Save the main activity so it can be accessed from other threads\n\t\t\tm_activity = this;\n\n\t\t\t// Call init ONCE to start the process of binding to the MXMS\n\t\t\t// Note: You should call init early (e.g. as shown here in onCreate)\n\t\t\t//       XML cannot be submitted to the MXMS the binding is complete\n\t\t\tSymbolBrand.MXMS.init(this,mMxFrameworkServiceConnection);\n\t\t}\n\n7. The ServiceConnection will also need to be added to your application's activity. This will contain the onServiceConnected callback that will notify your application that it was successfully bound to MXMS. It should also contain the onServiceDisconnected callback that will notify your application when it was successfully unbound with MXMS.\n\n\t\t:::java\n\t\t// This definition is mandatory to track binding to the MXMS\n\t\tprivate ServiceConnection mMxFrameworkServiceConnection = new ServiceConnection()\n\t\t{\n\t\t\t// Callback to notify when binding to the MXMS has completed\n\t\t\tpublic void onServiceConnected(ComponentName className,IBinder service)\n\t\t\t{\n\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\t// Callback to notify when unbinding from the MXMS has occurred\n\t\t\tpublic void onServiceDisconnected(ComponentName className)\n\t\t\t{\n\t\t\t\n\t\t\t}\n\t\t}; \n\n8. In the onServiceConnected method, the onServiceConnected in the SymbolBrand helper class should also be called, which will notify this class that your application was bound to MXMS. At the end of the method, the term method in the SymbolBrand class should be called, which will unbind your application from MXMS. The application can also exit at this point. In the onServiceDisconnected method, the onServiceDisconnected method in the SymbolBrand helper class should also be called, which will notify this class that your application was unbound from MXMS.\n\n\t\t:::java\n\t\t// This definition is mandatory to track binding to the MXMS\n\t\tprivate ServiceConnection mMxFrameworkServiceConnection = new ServiceConnection()\n\t\t{\n\t\t\t// Callback to notify when binding to the MXMS has completed\n\t\t\tpublic void onServiceConnected(ComponentName className,IBinder service)\n\t\t\t{\n\t\t\t\t// Pass the binding notification on so the helper class can know the service was bound\n\t\t\t\tSymbolBrand.MXMS.onServiceConnected(className,service);\n\n\t\t\t\t// Call term \n\t\t\t\tSymbolBrand.MXMS.term(m_activity,mMxFrameworkServiceConnection);\n\n\t\t\t\t// Exit the application\n\t\t\t\tm_activity.finish();\t    \t\t\n\t\t\t}\n\t\t\t\n\t\t\t// Callback to notify when unbinding from the MXMS has occurred\n\t\t\tpublic void onServiceDisconnected(ComponentName className)\n\t\t\t{\n\t\t\t\t// Pass the unbinding notification on so the helper class can know the service was unbound\n\t\t\t\tSymbolBrand.MXMS.onServiceDisconnected(className);\n\t\t\t}\n\t\t};    \n\n\n<!--\n>Note: The code and variables referenced here will be used in other documents that discuss submitting XML as well as sending queries.\n\n1. Create a new Android project with an empty activity in Eclipse.  \n2. Create a new package in your application with the following name `com.symbol.mxmf`. This will be used for holding the aidl (Android Interface Definition Language)file.  \n3. Create a file called `IMxFrameworkService.aidl` inside the new package.\n4. Copy the following code into your aidl file, which defines to MXMS Interface:\n\n        :::java\n\t    package com.symbol.mxmf;\n     \n\t    // IMxFrameworkService.aidl\n\t    // Declare any non-default types here with import statements\n\t\n\t    /**\n\t     *  MX Management Framework AIDL service interface\n\t     */\n\t\tinterface IMxFrameworkService {\n\t      /**\n\t\t   * Provide Mx Framework Service(s) to process a clinet's request\n\t\t   * @param  sRequest - request String in XML format sent by a client\n\t\t   * @return a String from Mx Framework Service's response in XML format\n\t\t   */\n\t       String processXML(String sRequest);\n    \n\t       /**\n\t\t   * Provide Mx Framework Service(s) to process a clinet's request\n\t\t   * @param  sRequest - request String in XML format sent by a client\n\t\t   * @param  mapExtra - a map that contains Extra information on how the request XML should be applied\n\t\t   * @return a String from Mx Framework Service's response in XML format\n\t\t   */\n\t       String processXmlRequest(String sRequest, in Map mapExtra);\n\t\n\t       /**\n\t\t    * Get value from CSP by providing a key\n\t\t    * @param  sKey - a key that CSP would understand, then return a value to MxFramework.\n\t\t    * @return a value\n\t\t    */\n\t        String getValue(String sKey);\n\t\t}\n\n5. Add the Permission `<uses-permission android:name = \"com.symbol.mxmf.ACCESS_MX_MANAGEMENT_FRAMEWORK_SERVICE\" />` to your manifest file to allow MXMS accesses. \n6. Implement `ServiceConnection` from your MainActivity, and add unimplemented methods. You should now have methods for `onServiceConnected` and `onServiceDisconnected`. \n7. Copy the following variables to the top of your MainActivity for holding values needed for MXMS.  \n\n        :::java\n\t\t//Application Context for MX \n\t\tContext context = null;\n\t\t\n\t    //MX Framework package name\n\t\tprivate static final String MX_FRAMEWORK_PKG =\"com.symbol.mxmf\";\n\t\n\t\t//MX Framework service class name\n\t\tprivate static final String MX_FRAMEWORK_SERVICE_CLS =\"com.symbol.mxmf.MxFrameworkService\";\n\t\n\t\t//MX service holder\n\t\tpublic IMxFrameworkService MXservice = null;\n8. Add the following method to `MainActivity` for binding to the MXMS service. \n\n        :::java\n\t    void bindService(){\n\t\t    //Bind to Remote Service\n\t\t    Intent bindServiceIntent = new Intent();\n\t\t    //Set Component\n\t\t    bindServiceIntent.setComponent(new ComponentName(MX_FRAMEWORK_PKG, MX_FRAMEWORK_SERVICE_CLS));\n\t\t\n\t\t    try{\n\t\t\t    this.context.bindService(bindServiceIntent, this, Context.BIND_AUTO_CREATE);\n\t\t    }\n\t\t    catch(Exception e)\n\t\t    {\n\t\t\t    Log.e(\"MX\", e.toString());\t\t\n\t\t    }\n\t    }\n9. Add the following code to `onCreate` for getting the application context and calling the binding method. \n\n        :::java\n\t    //Get Application Context\n\t    this.context = this.getApplicationContext();\n\t\n\t    // Call bindService\n\t\tbindService();\n10. Add the following code to `onServiceConnected` to set the service reference. \n\n        :::java\n\t    //Set service\n\t\tthis.MXService = IMxFrameworkService.Stub.asInterface(service);\n11. Add the following code to `onServiceDisconnected` to set the service reference to null. \n\n        :::java\n\t    //Set service to null\n\t\tthis.MXService=null;\n\n>Note:  \n> you can use the following code to close the connection to MX. \n>\n>     :::java\n>     //Unbind service\n>     this.context.unbindService(this);\n>\n>     //Set service to null\n>     this.MXService = null;\n-->\n"},{"key":"guide-MX-MX","name":"# MX XML Bindings ##","md":"## MX XML Bindings ##\n\nMX XML Bindings allow you to submit XML directly to the MX Framework from within an Android application.  \n\n## Setting up MX Bindings \n\n### Requirements ###\n\n* Motorola Android Device with MX\n* Android ADT\n\n### Instructions ###\n\n1. Create a new Android project with a blank activity in Eclipse.  \n2. Create a new package in your application with the following name \"com.motorolasolutions.emdk.mxframework\". This will be used for holding the aidl (Android Interface Definition Language)file.  \n3. Crest a file called \"IMxFrameworkService.aidl\" inside the new package.\n4. Copy the following code into your aidl file, which defines to MX Interface:\n\n        :::java\n\t    package com.motorolasolutions.emdk.mxframework;\n     \n\t    // IMxFrameworkService.aidl\n\t    // Declare any non-default types here with import statements\n\t\n\t    /**\n\t     *  MX Management Framework AIDL service interface\n\t     */\n\t\tinterface IMxFrameworkService {\n\t      /**\n\t\t   * Provide Mx Framework Service(s) to process a clinet's request\n\t\t   * @param  sRequest - request String in XML format sent by a client\n\t\t   * @return a String from Mx Framework Service's response in XML format\n\t\t   */\n\t       String processXML(String sRequest);\n    \n\t       /**\n\t\t   * Provide Mx Framework Service(s) to process a clinet's request\n\t\t   * @param  sRequest - request String in XML format sent by a client\n\t\t   * @param  mapExtra - a map that contains Extra information on how the request XML should be applied\n\t\t   * @return a String from Mx Framework Service's response in XML format\n\t\t   */\n\t       String processXmlRequest(String sRequest, in Map mapExtra);\n\t\n\t       /**\n\t\t    * Get value from CSP by providing a key\n\t\t    * @param  sKey - a key that CSP would understand, then return a value to MxFramework.\n\t\t    * @return a value\n\t\t    */\n\t        String getValue(String sKey);\n\t\t}\n\n5. Add the Permission `<uses-permission android:name=\"com.motorolasolutions.emdk.mxframework.ACCESS_MX_MANAGEMENT_FRAMEWORK_SERVICE\" />` to your manifest file to allow MX accesses. \n6. Implement \"ServiceConnection\" from your MainActivity, and add unimplemented methods. You should now have methods for \"onServiceConnected\" and \"onServiceDisconnected\". \n7. Copy the following variables to the top of your MainActivity for holding values needed for MX.  \n\n        :::java\n\t\t//Application Context for MX \n\t\tContext context = null;\n\t\t\n\t    //MX Framework package name\n\t\tprivate static final String MX_FRAMEWORK_PKG =\"com.motorolasolutions.emdk.mxframework\";\n\t\n\t\t//MX Framework service class name\n\t\tprivate static final String MX_FRAMEWORK_SERVICE_CLS =\"com.motorolasolutions.emdk.mxframework.MxFrameworkService\";\n\t\n\t\t//MX service holder\n\t\tpublic IMxFrameworkService service = null;\n8. Add the following method to \"MainActivity\" for binding to the MX service. \n\n        :::java\n\t    void bindService(){\n\t\t    //Bind to Remote Service\n\t\t    Intent bindServiceIntent = new Intent();\n\t\t    //Set Component\n\t\t    bindServiceIntent.setComponent(new ComponentName(MX_FRAMEWORK_PKG, MX_FRAMEWORK_SERVICE_CLS));\n\t\t\n\t\t    try{\n\t\t\t    this.context.bindService(bindServiceIntent, this, Context.BIND_AUTO_CREATE);\n\t\t    }\n\t\t    catch(Exception e)\n\t\t    {\n\t\t\t    Log.e(\"MX\", e.toString());\t\t\n\t\t    }\n\t    }\n9. Add the following code to \"onCreate\" for getting the application context and calling the binding method. \n\n        :::java\n\t    //Get Application Context\n\t    this.context = this.getApplicationContext();\n\t\n\t    // Call bindService\n\t\tbindService();\n10. Add the following code to \"onServiceConnected\" to set the service reference. \n\n        :::java\n\t    //Set service\n\t\tthis.service = IMxFrameworkService.Stub.asInterface(service);\n11. Add the following code to \"onServiceDisconnected\" to set the service reference to null. \n\n        :::java\n\t    //Set service to null\n\t\tthis.service=null;\n\n>Note:  \n> you can use the following code to close the connection to MX. \n>\n>     :::java\n>     //Unbind service\n>     this.context.unbindService(this);\n>\n>     //Set service to null\n>     this.service = null;\n\n\n## Submitting code to MX ##\n\nThe flowing code snip it shows how so submit XML to the MX Framework.\n\n    :::java\n    //MX can through exceptions when processing XML \n\ttry {\n\t    //Check if the MX service is null \n\t    if(service != null){\n\t        //MX Response XML\n\t\t\tString MxResXML = \"\";\n\t\t\t\t\t\t\n\t\t\t//MX XML\n\t\t\tString MxXML = \"<wap-provisioningdoc>\"\n\t\t\t\t\t\t +     \"<characteristic type=\\\"Clock\\\" version=\\\"4.2\\\">\"\n\t\t\t\t\t\t +         \"<parm name=\\\"AutoTime\\\" value=\\\"false\\\"/>\"\n\t\t\t\t\t\t +         \"<parm name=\\\"TimeZone\\\" value=\\\"GMT-5\\\"/>\"\n\t\t\t\t\t\t +         \"<parm name=\\\"Date\\\" value=\\\"2013-11-19\\\"/>\"\n\t\t\t\t\t\t +         \"<parm name=\\\"Time\\\" value=\\\"10:10:10\\\"/>\"\n\t\t\t\t\t\t +     \"</characteristic>\"\n\t\t\t\t\t\t + \"</wap-provisioningdoc>\";\n\t\t\t\t\t\t\n\t\t\t\t\t\t\n\t\t\t//Send XML to MX for processing \n\t\t\tMxResXML = service.processXML(MxXML);\n\t\t\t\t\t\t\n\t\t\t//Log result XML\n\t\t    Log.i(\"MX\", \"MxResXML: \" + MxResXML);\n\t    }\n\t    else{\n\t        Log.e(\"MX\", \"Service is null\");\n\t    }\n\t} \n\tcatch (Exception e) {\n\t    Log.e(\"MX\", e.toString());\n    }\n\n## MX Response ##\n\nThe following code snip it shows how so determine if a call to the MX Framework was Successful. \n\n\t:::java\n    //Send XML to MX for processing \n\tMxResXML = service.processXML(MxXML);\n\t\t\t\t\t\t\n\t//Check for Success\n\tif(MxResXML.equals(MxXML))\n\t{\n\t\t//Request Success\n\t\tLog.i(\"MX\", \"MxResXML: \" + MxResXML);\n\t}\n\telse\n\t{\n\t\t//Request Failure\n\t\tLog.e(\"MX\", \"MxResXML: \" + MxResXML);\n\t}\n\n### Success ###\n\nIf the call to MX is Successful the XML returned from MX will exactly math the XML sent to MX.   \n\nSpace Sensitive????\n\n### Failures ###\n\nIf the call to MX fails the response XML will contain information about the failure and contain the text \"-error\". \n\n#### Error CSP Name ####\n\nIf the CSP name does not exist you will get a type \"characteristic-error\" inside the XML returned from MX along with the description \"has not registered with MX Framwork yet\". \n\nFor Example:\n\n    :::xml\n    <characteristic-error type=\"ClockTime\" version=\"4.2\" desc=\" has not registered with MX Framwork yet\">\n\n#### Error CSP Version ###\n\nIf the DSD version is newer then the DSD version the CSP supports you will get a type \"characteristic-error\" inside the XML returned from MX along with the description \"The DSD version is higher than current supported DSD\".\n\nFor Example: \n\n    :::xml\n    <characteristic-error type=\"Clock\" desc=\"The DSD version is higher than current supported DSD 4.2\">\n\n#### Error Param not Supported ####\n\nIf the parm name is not sported by the CSP you will get a type \"parm-error\" inside the XML returned from MX along with the description \"Param type is not supported\".\n\nFor Example: \n\n    :::xml\n    <parm-error name=\"AutoTimeSet\" value=\"false\" desc=\"Param type is not supported\"/>\n\n#### Error Param Value ####\n\nIf the parm value is incorrect you will get a type \"parm-error\" inside the XML returned from MX along with the description \"Wrong value of (parm name)\".\n\nFor Example:\n\n    :::xml\n    <parm-error name=\"AutoTime\" value=\"a\" desc=\"Wrong value of Auto time\"/>\n\n## Generating MX XML ##\n\n\n\n## Querying for MX Version ##\n\nThe following XML block queries for MX Version information: \n\n    :::xml\n    <wap-provisioningdoc>\n\t    <characteristic-query type=\\\"MX\\\">\n\t    </characteristic-query>\n    </wap-provisioningdoc>\n\nExample Output: \n\n    :::xml\n    <wap-provisioningdoc>\n        <characteristic type=\"MX\" version=\"4.2\">\n\t        <parm name=\"Version\" value=\"4.2.0.3\"/>\n\t    </characteristic>\n    </wap-provisioningdoc>\n\n## Querying for CSP Version ##\n\nThe following XML block queries for CSP Version information: \n\n    :::xml\n    <wap-provisioningdoc>\n        <characteristic type=\\\"AppMgr\\\">\n             <parm-query name=\\\"Version\\\">\n             </parm-query>\n        </characteristic>\n    </wap-provisioningdoc>\n\nExample Output: \n\n    :::xml\n    <wap-provisioningdoc>\n        <characteristic type=\"AppMgr\" version=\"4.2\">\n            <parm name=\"Version\" value=\"4.2.4\"/>\n\t    </characteristic>\n    </wap-provisioningdoc>\n\n## Querying for CSPs  ##\n\nThe following XML block queries MX for the list of CSPs: \n\n    :::xml\n    <wap-provisioningdoc>\n\t    <characteristic-query type=\\\"CspMgr\\\">\n\t    </characteristic-query>\n    </wap-provisioningdoc>\n\nExample Output: \n\n    :::xml\n\t<wap-provisioningdoc>\n\t\t<characteristic type=\"CspMgr\">\n\t\t\t<characteristic type=\"csp-details\">\n\t\t\t\t<parm name=\"characteristic\" value=\"AccessMgr\"/>\n\t\t\t\t<parm name=\"package\" value=\"com.motorolasolutions.emdk.mxframework.accessmngr\"/>\n\t\t\t\t<parm name=\"class\" value=\"com.motorolasolutions.emdk.mxframework.accessmngr.MxAccessMngrCSPService\"/>\n\t\t\t</characteristic>\n\t\t</characteristic>\n\t\t<characteristic type=\"CspMgr\">\n\t\t\t<characteristic type=\"csp-details\">\n\t\t\t\t<parm name=\"characteristic\" value=\"AppMgr\"/>\n\t\t\t\t<parm name=\"package\" value=\"com.motorolasolutions.emdk.mxframework.appmngr\"/>\n\t\t\t\t<parm name=\"class\" value=\"com.motorolasolutions.emdk.mxframework.appmngr.MxAppMngrCSPService\"/>\n\t\t\t</characteristic>\n\t\t</characteristic>\n\t\t<characteristic type=\"CspMgr\">\n\t\t\t<characteristic type=\"csp-details\">\n\t\t\t\t<parm name=\"characteristic\" value=\"CertMgr\"/>\n\t\t\t\t<parm name=\"package\" value=\"com.motorolasolutions.emdk.mxframework.mxcertmanager\"/>\n\t\t\t\t<parm name=\"class\" value=\"com.motorolasolutions.emdk.mxframework.mxcertmanager.MxCertManagerService\"/>\n\t\t\t</characteristic>\n\t\t</characteristic>\n\t\t<characteristic type=\"CspMgr\">\n\t\t\t<characteristic type=\"csp-details\">\n\t\t\t\t<parm name=\"characteristic\" value=\"Clock\"/>\n\t\t\t\t<parm name=\"package\" value=\"com.motorolasolutions.emdk.mxframework.mxclockcsp\"/>\n\t\t\t\t<parm name=\"class\" value=\"com.motorolasolutions.emdk.mxframework.mxclockcsp.MxCSPClockService\"/>\n\t\t\t</characteristic>\n\t\t</characteristic>\n\t\t<characteristic type=\"CspMgr\">\n\t\t\t<characteristic type=\"csp-details\">\n\t\t\t\t<parm name=\"characteristic\" value=\"Intent\"/>\n\t\t\t\t<parm name=\"package\" value=\"com.motorolasolutions.emdk.mxframework.mxintentcsp\"/>\n\t\t\t\t<parm name=\"class\" value=\"com.motorolasolutions.emdk.mxframework.mxintentcsp.MxIntentCSPService\"/>\n\t\t\t</characteristic>\n\t\t</characteristic>\n\t\t<characteristic type=\"CspMgr\">\n\t\t\t<characteristic type=\"csp-details\">\n\t\t\t\t<parm name=\"characteristic\" value=\"MX\"/>\n\t\t\t\t<parm name=\"package\" value=\"com.motorolasolutions.emdk.mxframework.mxversioncsp\"/>\n\t\t\t\t<parm name=\"class\" value=\"com.motorolasolutions.emdk.mxframework.mxversioncsp.MxVersionCSPService\"/>\n\t\t\t</characteristic>\n\t\t</characteristic>\n\t\t<characteristic type=\"CspMgr\">\n\t\t\t<characteristic type=\"csp-details\">\n\t\t\t\t<parm name=\"characteristic\" value=\"PersistMgr\"/>\n\t\t\t\t<parm name=\"package\" value=\"com.motorolasolutions.emdk.mxframework.mxpersistcsp\"/>\n\t\t\t\t<parm name=\"class\" value=\"com.motorolasolutions.emdk.mxframework.mxpersistcsp.MxPersistCSPService\"/>\n\t\t\t</characteristic>\n\t\t</characteristic>\n\t\t<characteristic type=\"CspMgr\">\n\t\t\t<characteristic type=\"csp-details\">\n\t\t\t\t<parm name=\"characteristic\" value=\"XmlMgr\"/>\n\t\t\t\t<parm name=\"package\" value=\"com.motorolasolutions.emdk.mxframework.mxxmlmgrcsp\"/>\n\t\t\t\t<parm name=\"class\" value=\"com.motorolasolutions.emdk.mxframework.mxxmlmgrcsp.MxXmlMgrCSPService\"/>\n\t\t\t</characteristic>\n\t\t</characteristic>\n\t\t<characteristic type=\"CspMgr\">\n\t\t\t<characteristic type=\"csp-details\">\n\t\t\t\t<parm name=\"characteristic\" value=\"SettingsMgr\"/>\n\t\t\t\t<parm name=\"package\" value=\"com.motorolasolutions.emdk.mxframework.settingsmanager\"/>\n\t\t\t\t<parm name=\"class\" value=\"com.motorolasolutions.emdk.mxframework.settingsmanager.MxSettingsMngrCSPService\"/>\n\t\t\t</characteristic>\n\t\t</characteristic>\n\t\t<characteristic type=\"CspMgr\">\n\t\t\t<characteristic type=\"csp-details\">\n\t\t\t\t<parm name=\"characteristic\" value=\"Wi-Fi\"/>\n\t\t\t\t<parm name=\"package\" value=\"com.motorolasolutions.emdk.mxframework.wificonfigcsp\"/>\n\t\t\t\t<parm name=\"class\" value=\"com.motorolasolutions.emdk.mxframework.wificonfigcsp.MxWifiConfigCSPService\"/>\n\t\t\t</characteristic>\n\t\t</characteristic>\t\n\t\t<characteristic type=\"CspMgr\">\n\t\t\t<characteristic type=\"csp-details\">\n\t\t\t\t<parm name=\"characteristic\" value=\"DataWedge\"/>\n\t\t\t\t<parm name=\"package\" value=\"com.motorolasolutions.emdk.mxframework.datawedgecsp\"/>\n\t\t\t\t<parm name=\"class\" value=\"com.motorolasolutions.emdk.mxframework.datawedgecsp.MxDataWedgeCSPService\"/>\n\t\t\t</characteristic>\n\t\t</characteristic>\n\t\t<characteristic type=\"CspMgr\">\n\t\t\t<characteristic type=\"csp-details\">\n\t\t\t\t<parm name=\"characteristic\" value=\"UsbMgr\"/>\n\t\t\t\t<parm name=\"package\" value=\"com.motorolasolutions.emdk.mxframework.mxusbmgrcsp\"/>\n\t\t\t\t<parm name=\"class\" value=\"com.motorolasolutions.emdk.mxframework.mxusbmgrcsp.MxUsbMgrCSPService\"/>\n\t\t\t</characteristic>\n\t\t</characteristic>\n\t\t<characteristic type=\"CspMgr\">\n\t\t\t<characteristic type=\"csp-details\">\n\t\t\t\t<parm name=\"characteristic\" value=\"TouchMgr\"/>\n\t\t\t\t<parm name=\"package\" value=\"com.motorolasolutions.emdk.mxframework.mxtouchmngr\"/>\n\t\t\t\t<parm name=\"class\" value=\"com.motorolasolutions.emdk.mxframework.mxtouchmngr.MxTouchMngrCSPService\"/>\n\t\t\t</characteristic>\n\t\t</characteristic>\n\t\t<characteristic type=\"CspMgr\">\n\t\t\t<characteristic type=\"csp-details\">\n\t\t\t\t<parm name=\"characteristic\" value=\"WirelessMgr\"/>\n\t\t\t\t<parm name=\"package\" value=\"com.motorolasolutions.emdk.mxframework.wirelessmgr\"/>\n\t\t\t\t<parm name=\"class\" value=\"com.motorolasolutions.emdk.mxframework.wirelessmgr.MxWirelessMgrCSPService\"/>\n\t\t\t</characteristic>\n\t\t</characteristic>\n\t\t<characteristic type=\"CspMgr\">\t\t\t\n\t\t\t<characteristic type=\"csp-details\">\n\t\t\t\t<parm name=\"characteristic\" value=\"GprsMgr\"/>\n\t\t\t\t<parm name=\"package\" value=\"com.motorolasolutions.emdk.mxframework.mxgprsmngr\"/>\n\t\t\t\t<parm name=\"class\" value=\"com.motorolasolutions.emdk.mxframework.mxgprsmngr.MxGPRSMngrCSPService\"/>\n\t\t\t</characteristic>\n\t\t</characteristic>\n\t\t<characteristic type=\"CspMgr\">\n\t\t\t<characteristic type=\"csp-details\"><parm name=\"characteristic\" value=\"UiMgr\"/>\n\t\t\t\t<parm name=\"package\" value=\"com.motorolasolutions.emdk.mxframework.uimanager\"/>\n\t\t\t\t<parm name=\"class\" value=\"com.motorolasolutions.emdk.mxframework.uimanager.MxUIManagerCSPService\"/>\n\t\t\t</characteristic>\n\t\t</characteristic>\n\t\t<characteristic type=\"CspMgr\">\n\t\t\t<characteristic type=\"csp-details\">\n\t\t\t\t<parm name=\"characteristic\" value=\"PowerMgr\"/>\n\t\t\t\t<parm name=\"package\" value=\"com.motorolasolutions.emdk.mxframework.mxpowermgr\"/>\n\t\t\t\t<parm name=\"class\" value=\"com.motorolasolutions.emdk.mxframework.mxpowermgr.MxPowerMgrCSPService\"/>\n\t\t\t</characteristic>\n\t\t</characteristic>\n\t</wap-provisioningdoc>\n\n## Grouping Queries ##\n\n\nXML Queries can be combined. For example we can query for MX version, and the list of CSPs:\n\n     :::xml\n     <wap-provisioningdoc>\"\n         <characteristic type=\\\"CspMgr\\\">\"\n         <characteristic-query type=\\\"CSP\\\">\"\n         </characteristic-query>\"\n         </characteristic>\"\n    </wap-provisioningdoc>\n\n\nThe output XML will then be combined:\n\n\t:::xml\n    <wap-provisioningdoc>\n\t\t<characteristic type=\"MX\" version=\"4.2\">\n\t\t\t<parm name=\"Version\" value=\"4.2.0.3\"/>\n\t\t</characteristic>\n\t\t<characteristic type=\"CspMgr\">\n\t\t\t<characteristic type=\"csp-details\">\n\t\t\t\t<parm name=\"characteristic\" value=\"AccessMgr\"/>\n\t\t\t\t<parm name=\"package\" value=\"com.motorolasolutions.emdk.mxframework.accessmngr\"/>\n\t\t\t\t<parm name=\"class\" value=\"com.motorolasolutions.emdk.mxframework.accessmngr.MxAccessMngrCSPService\"/>\n\t\t\t</characteristic>\n\t\t</characteristic>\n\t \n\t\t.........\n\t \n\t\t<characteristic type=\"CspMgr\">\n\t\t\t<characteristic type=\"csp-details\">\n\t\t\t\t<parm name=\"characteristic\" value=\"UiMgr\"/>\n\t\t\t\t<parm name=\"package\" value=\"com.motorolasolutions.emdk.mxframework.uimanager\"/>\n\t\t\t\t<parm name=\"class\" value=\"com.motorolasolutions.emdk.mxframework.uimanager.MxUIManagerCSPService\"/>\n\t\t\t</characteristic>\n\t\t</characteristic>\n\t\t<characteristic type=\"CspMgr\">\n\t\t\t<characteristic type=\"csp-details\">\n\t\t\t\t<parm name=\"characteristic\" value=\"PowerMgr\"/>\n\t\t\t\t<parm name=\"package\" value=\"com.motorolasolutions.emdk.mxframework.mxpowermgr\"/>\n\t\t\t\t<parm name=\"class\" value=\"com.motorolasolutions.emdk.mxframework.mxpowermgr.MxPowerMgrCSPService\"/>\n\t\t\t</characteristic>\n\t\t</characteristic>\n\t</wap-provisioningdoc>\n"},{"key":"guide-MX-overview","name":" MX Management System Overview","md":"# MX Management System Overview\n\n## Overview\n\nThe MX Management System (MXMS) provides a common interface to Zebra Android device capabilities utilizing XML that conforms to the standard OMA-CP PROV (Microsoft MSPROV) schema. This allows developers and administrators to have an extensible, efficient, reliable and scalable means for configuring and administrating Zebra Android devices. MXMS exposes capabilities that underlying CSPs provide to give the user access to both privileged and unprivileged APIs. Each CSP exposes its capabilities using DSD files that are included with the MDM Toolkit. These DSD files are then imported into a DSDtoXML tool to generate XML that can be sent to the MXMS running on the device to change a device configuration or behavior.\n\n## Definitions of Terms\n\n### Board Support Package (BSP)\n\nA BSP is the method that the device teams use to deliver the operating system for any of their devices. \n\nEvery device ships with a specific BSP version pre-installed that is suitable for use on that device model, which is reported via the \"Build number\". The BSP version that ships in devices of a particular model may or may not be updated just because a new BSP becomes available for that device model. They can generally be updated by downloading a newer (or sometimes older) BSP from the Zebra support website and applying it to the device via the OS Update Process for that device.\n\n### Android Open Source Project (AOSP)\n\nAOSP is the method that Google uses to release and distribute the source code for the Android Operating System for royalty-free use by the open source community. OEMs are free to use, modify, and extend AOSP as needed, subject to certain standard licensing requirements. Each BSP for any of the Zebra Android devices includes an operating system that was derived, directly or indirectly, from AOSP. These BSPs generally also include modifications and/or enhancements beyond AOSP that provide additional value to our customers.\n\n### Mobility Extensions (MX)\n\nMX is the umbrella term used to refer collectively to the entire experience offered by the Zebra Android devices. This means that MX represents all the value that a BSP offers over and above that provided by AOSP, including:\n\n* Changes and extensions to the Core Operating System (OSX)\n* Value-Add Features (e.g. Multi-User, Whitelisting)\n* The MX Management Framework (MXMF)\n* Configuration Service Providers (CSPs)\n* Changes and extensions to standard applications (e.g. Settings UI, Browser, Email Client, etc.)\n\n>**Note:** All of the above components may or may not be present on a device. Specifically, MXMF and the CSPs may be absent. Therefore, these components would need to be installed on the device before they can be used.\n\n### Operating System Extensions (OSX)\n\nOSX is the term used to refer to changes and extensions to the standard AOSP as included in a BSP. OSX is versioned and the version of OSX in a device is the primary way to determine which changes and extensions are present in the operating system of that device. As a general rule, the version of OSX that is in a device can ONLY be changed by loading a different BSP (that contains a different version of OSX) into that device, via the OS update process.\n\n### MX Management Framework (MXMF)\n\nMXMF is a device subsystem that provides an interface to applications that wish to set or query the configuration of device subsystems. It does not directly implement set and query functions but provides a framework to support and host CSPs that do. MXMF can be built-into a BSP or can be added to a BSP after a device is shipped (via a patch applied via the OS update process). Applications and the MXMF communicate through an interchange of XMLs that conform to the **XML.DTD**, as described in the document **MX MF XML DTD**.\n\n### Document Type Definition (DTD)\n\nA DTD is a non-XML, standards-based document that defines the syntax of a class of related XML documents. It is used to specify the elements that are allowed to appear within all XML documents that are used for a specific purpose. \n\nThe following DTDs are used by the MXMF:\n\n* **XML.DTD** (described in the document **MX MF XML DTD**)\n\t* This DTD defines the syntax of XML Documents that can be consumed by CSPs that registered with the MXMF and that can be used to set and query the configuration of the device systems associated with those CSPs\n* **DSD.DTD** (described in the document **MX MF DSD DTD**)\n\t* This DTD defines the syntax of DSD documents that are used to define the capabilities of CSPs\n\n### Configuration Service Provider (CSP)\n\nA CSP is a device code module that implements the ability to set and query the configuration of a subsystem on a device (e.g. Clock, Wi-Fi, etc.). The capabilities that are supported and exposed by a CSP are defined by a corresponding DSD. \n\nA CSP is a plug-in to the MXMF which can ship as part of the MXMF, can be included in a BSP along with the MXMF, or can be downloaded to a device as needed. Before it can be used on a device, a CSP must be registered with the MXMF on that device and all calls to a CSP must go through the MXMF. The MXMF and CSPs communicate through XMLs that conform to the **XML.DTD**, as described in the document **MX MF XML DTD**.\n\n### Document Semantics Definition (DSD)\n\nA DSD is an XML Document that conforms to the **DSD.DTD**, as described in the document **MX MF DSD DTD** and that corresponds to and describes the capabilities of a CSP. It is used by tools to enable programmatic generation of XML that can then be consumed by a CSP. Some examples of these tools are EMDK Profile Manager, Staging Tool, and MDM Console.\n\nA DSD is created and maintained by the author of a CSP and each CSP must have a corresponding DSD that must be supplied when the CSP registers with the MXMF. A CSP and its corresponding DSD should generally be produced, maintained, and distributed together.\n\n### MX Management System (MXMS)\n\nMXMS is a term used to refer to the MXMF and all CSPs that are registered with the MXMF at a given point in time. It provides the ability to set and/or query the configuration of the device subsystems for which CSPs are registered with MXMF. There are three kinds of CSPs that are included in this:\n\n* CSPs that are built-into the MXMF, such as the CertMgr CSP\n* CSPs that are built-into a device and pre-registered with MXMF, such as the Wi-Fi CSP\n\nMXMS can be thought of as \"the MXMF and a collection of currently registered CSPs\". Although applications submit XML to the MXMF, it is a bit more accurate to say that the MXMS (not just the MXMF) is the entity via which applications set and/or query configuration.\n\n## MX Architecture and Data Flow\n\nSystem components:\n\n* MXMS\n\t* MXMF\n\t* CSPs\n\t\t* Unprivileged\n\t\t* Privileged\n\t* AOSP APIs\n\t\t* Unprivileged\n\t\t* Privileged\n\t* OSX APIs\n\t\t* Privileged\n\t* Core Applications\n\n### Overview\n![img](images/quick-start/architecture-overview.png)\n\n### Creating/Editing an XML Document\n\n![img](images/quick-start/architecture-createXml.png)\n\n### Android Device BSP\n\n![img](images/quick-start/architecture-bsp.png)\n\n## MDM Interface to MXMS\n\nSince Tier 2 and Tier 3 MDM Agents will not be signed, they must perform all privileged management functions by interfacing to MXMS. This interface is documented and enabled by the EMDK for MDMs and consists of:\n\n* Constructing a suitable Request XML document\n* Submitting the Request XML document to MXMS\n* Receiving a Result XML document back from MXMS\n* Parsing the Result XML document to determine what happened\n\n![img](images/quick-start/mdmInterface.png)\n\n<!--\n### Configuration by MDM Server/Agent\n\n![img](images/quick-start/architecture-configServerAgent.png)\n\n### Configuration by MDM Agent\n\n![img](images/quick-start/architecture-configAgent.png)\n\n-->\n### Recommended Implementation \n\n#### XML Created by MDM Agent\n\n<!--\n### MDM Agent Submits XML to MXMS\n\n![img](images/quick-start/architecture-submitXml.png)\n\n### MXMF routes XML to CSPs\n-->\n\nIn this model, the MDM Agent would submit Request XML documents to MXMS, which would then process the XML and route it to the appropriate CSPs. The CSPs would attempt to perform the requested actions and would return their own Result XML documents. These documents would be combined by the MXMF Results Handler and one complete Result XML document would then be returned to the MDM Agent. \n\n![img](images/quick-start/architecture-routesXmls.png)\n\nHere, the MDM Server has no inherent understanding of the Request and Result XML documents or DSDs used by MXMS, and the MDM Agent has inherent understanding of the Request and Result XML documents.\n\n1. An MDM Administrator creates a proprietary command within the MDM Server using a Proprietary UI presented by the MDM Server based on a Proprietary feature-set shared between the MDM Server and MDM Agent. \n2. The MDM Server delivers the proprietary command to the MDM Agent via the Proprietary Server/Agent communications protocol. \n3. The MDM Agent interprets proprietary command and creates a Request XML document to perform the desired function using one or more CSPs based on a hard-coded knowledge of the capabilities of the available CSPs and the XML required to perform specific management operations using those CSPs. \n4. The MDM Agent submits the created Request XML Document to the MXMS and receives back a Result XML document. \n5. The MDM Agent interprets the Result XML document based on a hard-coded knowledge of the XML results that can be returned by the CSPs it uses to perform management operations. \n6. The MDM Agent forms a proprietary response that communicates the interpreted results and delivers it to the MDM Server Agent via the Proprietary Server/Agent communications protocol.\n7. The MDM Server interprets the proprietary response and presents the results to the MDM Administrator using a Proprietary UI.\n\n![img](images/quick-start/implementation4.png)\n\n### Other Implementation Approaches\n\n#### XML Created by MDM Administrator\n\nIn this model, the MDM Server and MDM Agent have no inherent understanding of the Request and Result XML documents used by MXMS. \n\n1. An MDM Administrator obtains or creates a Request XML document offline (using a text editor or a tool provided by Zebra) and provides the XML document to the MDM Server via the MDM Server Proprietary UI.\n2. The MDM Server treats the Request XML document as an opaque payload and delivers it to the MDM Agent via the Proprietary Server/Agent communications protocol.\n3. The MDM Agent treats the Request XML document as an opaque payload and submits it to the MXMS and receives back a Result XML document. \n4. The MDM Agent treats the Result XML document as an opaque payload delivers it to the MDM Server Agent via the Proprietary Server/Agent communications protocol. \n5. The MDM Server treats the Result XML document as an opaque payload and provides it to the MDM Administrator via the MDM Server Proprietary UI. \n6. The MDM Server interprets the Result XML document offline (using a text editor or a tool provided by Zebra) to determine the results of the request.\n\n![img](images/quick-start/implementation1.png)\n\n#### XML Created by MDM Server\n\nIn this model, the MDM Server has an inherent understanding of the Request and Result XML documents (but not the DSDs) used by MXMS, and the MDM Agent has no inherent understanding of any of them. \n\n1. An MDM Administrator creates a Request XML document within the MDM Server using a Proprietary UI presented by the MDM Server based on a hard-coded knowledge of the capabilities of selected CSPs and the XML required to perform specific management operations using those CSPs. \n2. The MDM Server delivers the Request XML document to the MDM Agent via the Proprietary Server/Agent communications protocol. \n3. The MDM Agent treats the Request XML document as an opaque payload and submits it to the MXMS and receives back a Result XML document. \n4. The MDM Agent treats the Result XML document as an opaque payload delivers it to the MDM Server Agent via the Proprietary Server/Agent communications protocol. \n5. The MDM Server interprets the Result XML document and presents those results to the MDM Administrator using a Proprietary UI presented by the MDM Server based on a hard-coded knowledge of the XML results that can be returned by CSPs the MDM Server uses to perform management operations.\n\n![img](images/quick-start/implementation2.png)\n\n#### XML Created by MDM Server Using DSD\n\nIn this model, the MDM Server has an inherent understanding of the Request and Result XML documents and DSDs used by MXMS, but the MDM Agent does not. \n\n1. An MDM Administrator creates a Request XML document within the MDM Server using a Data-Driven UI presented by the MDM Server based on a selected DSD. \n2. The MDM Server delivers the Request XML document to the MDM Agent via the Proprietary Server/Agent communications protocol. \n3. The MDM Agent treats the Request XML document as an opaque payload and submits it to the MXMS and receives back a Result XML document. \n4. The MDM Agent treats the Result XML document as an opaque payload delivers it to the MDM Server Agent via the Proprietary Server/Agent communications protocol. \n5. The MDM Server interprets the Result XML document and presents those results to the MDM Administrator using a Data-Driven UI presented by the MDM Server based on the corresponding DSD.\n\n![img](images/quick-start/implementation3.png)\n\n\n## MX on Devices\n\nThe MX version on a specific device can be effected by:\n\n* OS Updates\n* EMDK for Android Device Runtime Updates\n\nWith each version of MX, new CSPs can be introduced, and pre-existing CSPs can also have new behavior. It is generally not found that MX updates will remove or change pre-existing behavior unless specifically noted.\n\n"},{"key":"guide-MX-versions-4.3","name":" MX 4.3 Notes","md":"# MX 4.3 Notes\n\nFor each version of MX there should be some sort of document that gives an overview of what's new from previous versions and what is in each release. There will be scenarios where the MDM client may be running on devices that contain different versions of MX and thus have different capabilities."},{"key":"guide-remotecontrol","name":"Remote Control","md":"#Remote Control\n\n##Overview\n\nZebra Remote Control is part of MDM Toolkit to mirror the display of a Zebra Enterprise Android device and control the navigation of the device from a Workstation or desktop. The screen capture data from the device and the UI events from the Web App are encrypted using a shared \"Customer Generated Encryption Key\".\n\nThis document describes how to integrate the Zebra Remote Control with any of the MDM solutions. Zebra Remote Control consists of the following components.\n\n![img](images/remote-control/rc-overview.PNG) \n\n##Components\n\n###Remote Control Client \n\nThe Remote Control Client is available as an Android APK file. This should be deployed to the Zebra Android devices as a user application using any management software. Because of Android security, the user has to start the client manually for the first time. For the remote control to be functional, a secured shared key has to be set using the [EncryptMgr Feature Type](#guide-csp-encrypt) by using the MX interface either directly or through the use of tools, such as StageNow or EMDK.\n\nTo prepare a device to be Remote Controlled, do the following steps in the specified order:\n\n1. Generate a 256 bit encryption key - this can be any 256 bit value, expressed as 64 hex, but for best results this should be randomly generated.\n\t* This could be done using openssl to generate the key or by using any other random number generator that can generated such values\n2. Add a key with the name \"mrckey\" and with the above value\n\t* This could be done as part of Staging by using the StageNow EncryptMgr Setting Type\n\t* This could be done by the MDM Agent by using the [EncryptMgr Feature Type](#guide-csp-encrypt)\n3. Download the APK (need exact file name here) to a suitable path that is persistent, such as: /enterprise/usr/mymdm, perhaps using FileMgr\n\t* This could be done as part of Staging by using the StageNow FileMgr Setting Type\n\t* This could be done by the MDM Agent using its native file transfer capabilities\n4. Install the APK from the location to which it was stored\n\t* This could be done as part of Staging by using the AppMgr Setting Type\n\t* This could be done by the MDM Agent by using the [AppMgr Feature Type](#guide-csp-app)\n5. Launch the APK using an Intent with action=\" android.intent.action.MAIN\" plus Package Name and Class Name (defined by the MDM)\n\t* This could be done as part of Staging by using the Intent Setting Type\n\t* This could be done by the MDM Agent by using the [Intent Feature Type](#guide-csp-intent)\n6. Make the Request XML Document containing the above steps persistent\n\t* This could be done as part of Staging by using the PersistMgr Setting Type\n\t* This could be done by the MDM Agent by using the [PersistMgr Feature Type](#guide-csp-persistence)\n\nOnce the above have been completed, the Remote Control Client will be ready and listening for connections from the Remote Control Web App, which must possess the same 256 bit encryption key. It will also be persistent and will come up ready to be Remote Controlled following subsequent Enterprise Resets.\n\n\n###Remote Control Server Web App\n\nThe Remote Control Server Web App is a simple WebApp hosted and served from the MDM page or the App Server, such as Tomcat. A sample HTML page is provided with the \"Java Applet\" embedded in it.\n\nThe Remote Control UI component is written as a Java Applet. This applet will communicate with a web service to obtain information about the device to which it needs to connect and also to obtain the \"Shared Customer Generated Encryption Key\", which was set in device using Staging. This applet expects a few parameters for launching as explained in detail below.\n\n<div class=\"parm-table\">\n <table class=\"table\">\n\t<tr>\n\t\t<th>Parameter Name</th>\n\t\t<th>Type</th>\n\t\t<th>Description</th>\n\t</tr>\n  <tr>\n    <td>WsUrl</td>\n    <td>Mandatory</td>\n\t<td>URL of the web service end point</td>\n  </tr>\n  <tr>\n    <td>WsApiKey</td>\n    <td>Mandatory</td>\n\t<td>This is the API key to validate the request from WebApp</td>\n  </tr>\n  <tr>\n    <td>WsUserName</td>\n    <td>Optional</td>\n\t<td>User Name of the Basic authentication. This field can be empty if the basic authentication is not configured in the web service</td>\n  </tr>\n  <tr>\n    <td>WsPW</td>\n    <td>Optional</td>\n\t<td>Password of the Basic authentication. This field can be empty if the basic authentication is not configured in the web service</td>\n  </tr>\n</table>\n</div>\t\n\n###Sample MDM Web Service\n\nMDM vendors must implement this web service adhering to the Zebra Remote Control standard. The details about input and output parameters are explained below. This can be implemented as a REST service with the GET request type returning the JSON string\n\nZebra has provided a sample web service implementation in Java web archive file (WAR) file with the source code. This can be deployed in an application server, such as Tomcat.\n\n<div class=\"parm-table\">\n <table class=\"table\">\n\t<tr>\n\t\t<th>Input Parameter Name</th>\n\t\t<th>Type</th>\n\t\t<th>Description</th>\n\t</tr>\n  <tr>\n    <td>key</td>\n    <td>Mandatory. Passed as a query parameter.</td>\n\t<td>This is the API key to validate the request. This key has to be passed to the Applet in the applet launching page, mentioned as WsApiKey.</td>\n  </tr>\n</table>\n</div>\t\n\nA sample URL request is as shown below:\n\nhttps://localhost:8443/RCWebService/rest/RCWebService/deviceproperty/?key=abcdefg\n\n####Response\n\nThe response from the web service should be in the JSON format, which contains the following attributes:\n\n<div class=\"parm-table\">\n <table class=\"table\">\n\t<tr>\n\t\t<th>Name</th>\n\t\t<th>Type</th>\n\t\t<th>Description</th>\n\t</tr>\n  <tr>\n    <td>bitDepth</td>\n    <td>Optional</td>\n\t<td>Bit Depth required for the remote control connection. Default value is 32. Currently Remote control supports only 32 bit</td>\n  </tr>\n  <tr>\n    <td>deviceIP</td>\n    <td>Mandatory</td>\n\t<td>This is the IP address of the device to which the WebApp/Java applet needs to connect.</td>\n  </tr>\n  <tr>\n    <td>Port</td>\n    <td>Optional</td>\n\t<td>Port number in which device is listening for TCP connection (ideally set to port :7775)</td>\n  </tr>\n  <tr>\n    <td>Passphrase</td>\n    <td>Mandatory</td>\n\t<td>This Key should be same as the key set in the device using MX interface and must be of 64 bytes (Customer Generated Encryption Keys)</td>\n  </tr>\n  <tr>\n    <td>screenHeight</td>\n    <td>Optional</td>\n\t<td>Height of the device display resolution. Displays the Applet height based on this parameter</td>\n  </tr>\n  <tr>\n    <td>screenWidth</td>\n    <td>Optional</td>\n\t<td>Width of the device display resolution. Displays the Applet height based on this parameter</td>\n  </tr>\n</table>\n</div>\t\n\nA sample Web Service output is as shown below:\n\n{\"bitDepth\":\"32\",\"deviceIP\":\"10.233.82.145\",\"passPhrase\":\"1111111111111111111111111111111111111111111111111111111111111111\",\"port\":\"7775\",\"screenHeight\":\"800\",\"screenWidth\":\"800\"}\n\n##Getting Started\n\nSoftware Requirements\n\n* Tomcat (Tested with Tomcat 8.0) with SSL support\n\t* Please refer to this web page for more information: https://dzone.com/articles/setting-ssl-tomcat-5-minutes\n* Java latest version JRE8\n* Firefox/Internet Explorer\n\nThe following steps describe how to integrate the Zebra Remote Control:\n\n1. Install the Customer Generated Encryption Key to the device using the StageNow tool. Please ensure that 64 Bytes of the key is set using EncryptMgr Feature Type.\n\n\t![img](images/remote-control/rc-1.PNG)\n\t\n2. Implement web service. Please refer to the Sample Webservice section of this page.\n3. Install the Remote Control client on the device\n4. Start the Remote Control client\n\n\t>**Note:** This is only required to be done the first time after installation.\n\n5. Invoke the Applet from any of the MDM pages, such as the Device Detail page.\n6. When the applet is launched, it should automatically connect to the device UI based on the IP and port setting. \n\n![img](images/remote-control/rc-3.PNG) \n\n![img](images/remote-control/rc-4.PNG) \n\nPlease refer to the user guide for more details about the Remote Control applet.\n\n###Java Control Panel Setting\n\nGo to Windows-> Start Menu-> Run -> javacpl  \n\n* Launch the Java Control Panel and check the \"Enable Java content in the Browser\" option\n* Add the URL (http://yourweb-appserverIP:8443/MDM-webapp). The highlighted string should match your webserver IP as well as the app name deployed in Tomcat.\n\n![img](images/remote-control/rc-2.PNG) \n\n###Installing the Remote Control Files\n\n1. Copy the following folders and files from: `\\\\10.233.85.45\\images\\MDM_TK\\release\\1.0.1.1012\\Deliverables`\n\t* MDM-Webservice - This contains the sample webservice used by RC App\n\t* MDM-Webapp - This is the RC App to contact webservice and connect to MC/TC handsets and display remote UI\n\t* RC-client - This is the APK to be installed on the respective handsets\n2.  Copy \"MDM-Webservice/RCWebService.war\" to the \"webapps\" folder of your Tomcat installation folder\n3.  Copy the complete folder \"MDM-Webapp\" to the \"webapps\" folder of your Tomcat installation folder\n\n###Device Setup\n\nThe following steps describe how to stage the \"Install Key\" by using the EncryptMgr Feature Type:\n\n1. The Install Key Name should be: \"mrckey\"\n2. The Install Key Value should be: \"AFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAF00000000000000000000000000000000\"\n3. Use \"StageNow\" to set this key\n4. Install the MRCService-release.1.0.1.1012.apk on the corresponding Handset/device\n\n###Tomcat Setup\n\n1. Install Tomcat \n\n\t>**Note:** JDK 1.8 is a pre-requisite for tomcat\n2. Enter \"Symbol\" as the Username\n3. Enter \"Symbol\" as the Password\n4. Setup SSL for Tomcat as mentioned in https://dzone.com/articles/setting-ssl-tomcat-5-minutes\n\n\tFor example:\n\n\ta. \"%JAVA_HOME%\\bin\\keytool\" -genkey -alias tomcat -keyalg RSA (provide necessary data)\n\n\t\".keystore\" will be saved in `C:\\Users\\<username>\\.keystore`\n\n\tb. Modify Server.xml (`tomcat/conf`) to have the below changes. Ensure that `C:\\Users\\<user>\\.keystore` is present. Follow the link mentioned above for more information.\n\n\t\t:::XML\n\t\t<Connector SSLEnabled=\"true\" acceptCount=\"100\" clientAuth=\"false\"\n\t\t\tdisableUploadTimeout=\"true\" enableLookups=\"false\" maxThreads=\"25\"\n\t\t\tport=\"8443\" keystoreFile=\"C:\\Users\\<username>\\.keystore\" keystorePass=\"tomcat\"\n\t\t\tprotocol=\"org.apache.coyote.http11.Http11NioProtocol\" scheme=\"https\"\n\t\t\tsecure=\"true\" sslProtocol=\"TLS\" />\n\n\tc. In web.xml (`tomcat/conf`), just before the \"web-app\" tag ends, add the following:\n\t\t\n\t\t:::XML\n\t\t <security-constraint>\n\t\t\t<web-resource-collection>\n\t\t\t\t<web-resource-name>securedapp</web-resource-name>\n\t\t\t\t<url-pattern>/*</url-pattern>\n\t\t\t</web-resource-collection>\n\t\t\t<user-data-constraint>\n\t\t\t\t<transport-guarantee>NONE</transport-guarantee>\n\t\t\t</user-data-constraint>\n\t\t</security-constraint>\n\n5. Once all these changes are done, \"STOP\" and \"START\" Tomcat to deploy the WAR\n\n###Security Settings\n\n1. In Control Panel -> Programs -> Java , update \"Security settings\" to set the Security Level to \"High\".\n2. Add an exception in the Site list to allow the browser (Chrome or Firefox) to allow running Java Applets.\n3. Add\n\t* \"http://ipaddress:8080/MDM-Webapp\"\n\t* \"http://ipaddress:8443/MDM-Webapp\"\n4. To enable Java in the browser, please refer to these web pages: \n\n\thttps://www.java.com/en/download/help/browser_activate_plugin.xml\n\n\thttps://java.com/en/download/faq/chrome.xml\n5. In your URL bar, enter: chrome://flags/#enable-npapi\n6. Click the Enable link for the \"Enable NPAPI\" configuration option.\n7. Click the Relaunch button that now appears at the bottom of the configuration page.\n\n###Configuring web.xml\n\nSet the IP of the device in `tomcat\\webapps\\RCWebService\\WEB-INF\\web.xml` by modifying the following lines:\n\n\t:::XML\n\t<param-name>IpAddress</param-name>\n    <param-value>10.233.82.150</param-value>\n\nAnother way to do this would be to override \"Device IP\" in the GUI after launching the URL in the section below.\n\n\n###Setting key in device\n\nThe below given snapshot is from StageNowClient where user can set key name and key value.\n \n\n\n\n###Launch URL\n\nhttp://localhost:8080/MDM-Webapp/\n\nAccept all the security warning pop up to proceed.\n\n>**Note:** If any Tomcat user name and password is asked for, please enter: Symbol,Symbol\n\n"},{"key":"guide-samples-1","name":" MxFrameworkTestApp","md":"# MxFrameworkTestApp\n\nThis sample demonstrates:\n\n* Setting the Clock\n* Silently installing an application\n* Silently installing a certificate\n\n## Sample Location\nThis sample can be found in the `[MDM Install folder]\\Samples\\MxFrameworkSample` folder:\n\n##Contents\nThe sample contains a few files:\n \n* **Config.xml** : Sample XML to be sent to MX in the MXFrameworkTestApp\n* **MxFrameworkTestApp.apk** : Test app that can push an XML to the framework \n* **Clock.apk** : A simple APK that is used in Config.xml to demonstrate application installation\n* **Test.pfx** : A PFX file that is used in Config.xml to demonstrate silent certificate installation\n* **MxFrameworkTestApp-Source** : Folder containing application source for MxFrameworkTestApp.apk\n\n\n##Instructions\n1. Copy/Push `Test.pfx` and `Clock.apk` to the `/enterprise/usr/persist` folder\n2. Install `MxFrameworkTestApp.apk`\n3. Copy/Push `Config.xml` to `/sdcard`\n4. Launch `MxFrameworkTestApp` and tap either the `Bind Service` or `Send Intent` buttons.\n \nIf you navigate to the App Launcher, youΓÇÖll see Clock.apk installed, youΓÇÖll see the date, time and timezone set and you can create a WiFi profile with the MxTest certificate."},{"key":"guide-samples-2","name":" Using the XMLParser Helper Class","md":"# Using the XMLParser Helper Class\n\n##Overview\nThis application allows you to submit XML to MX, validates the response, and displays the response XML. The sample project uses the XML Parser library that was discussed in the XML Handling section of this documentation.\n\n>Note: This application only works on Zebra branded devices\n\n##Sample Location\nThis sample can be found in the `[MDM Install folder]\\Samples\\MDMTester` folder.\n\n##Adding XML\nTo add xml create an XML file (as described in using the [DSDToXmlTool](#xml-generate)) in the folder \"assets/XML\". Then recompile and deploy the application to the device.\n\n##Using the APP\n1. Select the xml file you would like to submit to MX from the XML List spinner.\n2. Click \"Submit\"\n3. Review result.\n\n## Overview\n\nThis application allows you to submit XML to MX, validates the response, and displays the response XML. The sample project uses the XML Parser library that was discussed in the [XML Handling section](#xml-xmlparser) of this documentation.\n\n> Note:  \n> This application only works on Zebra branded devices\n\n## Sample Location\nThis sample can be found in the `[MDM Install folder]\\Samples\\MDMTester` folder:\n\n## Adding XML \n\nTo add xml create an XML file (as described in [using the DSDToXmlTool](#xml-generate)) in the folder \"assets/XML\". Then recompile and deploy the application to the device.\n\n## Using the APP\n\n1. Select the xml file you would like to submit to MX from the XML List spinner. \n2. Click \"Submit\"\n3. Review result. \n\n"},{"key":"guide-samples-3","name":" Submitting to Multiple CSPs","md":"# Submitting to Multiple CSPs\n\nThis sample will show you how to submit XML to multiple CSPs using the MX Framework."},{"key":"guide-samples-4","name":" Querying Multiple CSPs ","md":"# Querying Multiple CSPs \n\nThis sample will show you how to query multiple CSPs using the MX Framework."},{"key":"guide-samples-overview","name":" Samples","md":"# Samples\n\nThis document will discuss the sample projects that are included with the toolkit. It will link to individual documents that describe the sample project. There should be a few samples to cover the most common use cases.\n\n* Submitting to a CSP - This sample will show you how to submit XML to a CSP using the MX Framework\n* Querying a CSP - This sample will show you how to query a CSP using the MX Framework\n* Submitting to Multiple CSPs - This sample will show you how to submit XML to multiple CSPs using the MX Framework\n* Querying Multiple CSPs - This sample will show you how to query multiple CSPs using the MX Framework"},{"key":"guide-samples-SimpleMdmToolkitQuery","name":"SimpleMdmToolkitQuery Test App","md":"#SimpleMdmToolkitQuery Test App\n\n##Overview\n\nThe SimpleMdmToolkitQuery test app can be used to send Request XML Documents which contain queries to the MXMS. This would allow you to receive back information about the current settings on the device.\n\n##Sample Location\n\nThe SimpleMdmToolkitQuery test app can be found in the `[MDM Install folder]\\Samples\\SimpleMdmToolkitQuery` folder.\n\n##Instructions\n\n1. Import the SimpleMdmToolkitQuery test app into Eclipse.\n2. Create an XML file containing the Request XML Document that contains the query that you would like to send.\n3. Place this XML inside the test app's assets folder.\n4. In Eclipse, open the MainActivity class that is located in the `com.symbol.simplemdmtoolkitquery` package.\n5. Create a new method in this class which will use the XML that was created in Step 2, send it to MXMS, and output the result to LogCat in Eclipse. The other methods in this class demonstrate how to do this, such as:\n\n\t\t:::java\n\t\t// Function to query MX version(s)\n\t\tprivate void queryMX()\n\t\t{\n\t\t\t// Check to see if the MXMS is successfully bound and ready to accept XML\n\t\t\t// Note: Once the binding complete notification (previous code) is passed on, this function will return true\n\t\t\t//       Depending on where this code is called from, this check may or may not be required, but never hurts.\n\t\t\tif ( SymbolBrand.MXMS.isReady() )\n\t\t\t{\n\t\t\t\tLog.d(m_activity.getApplicationInfo().name,\"MXMS.isReady\");\n\n\t\t\t\t// Extract an XML snippet from the application assets\n\t\t\t\tString inXml = XmlParser.getAssetXml(m_activity,\"mx.in3.xml\");\n\t\t\t\t\n\t\t\t\t// If the XML was successfully obtained\n\t\t\t\tif ( inXml != null )\n\t\t\t\t{\n\t\t\t\t\tLog.d(m_activity.getApplicationInfo().name,\"inXml = \"+inXml);\n\n\t\t\t\t\t// Submit the XML to the MXMS for processing\n\t\t\t\t\t// Note: This will FAIL unless SymbolBrand.MXMS.isReady(), indicating that the binding to the MXMS has completed successfully\n\t\t\t\t\tString outXml = SymbolBrand.MXMS.submitXml(inXml);\n\n\t\t\t\t\t// If we got back result XML\n\t\t\t\t\t// Note: A null result XML is what happens when the binding to the MXMS has NOT completed successfully\n\t\t\t\t\tif ( outXml != null )\n\t\t\t\t\t{\n\t\t\t\t\t\tLog.d(m_activity.getApplicationInfo().name,\"outXml = \"+outXml);\n\n\t\t\t\t\t\tString queryVersion = XmlParser.fetchParm(outXml,new ParmSelector(\"\",\"MXMFVersion\"));\n\n\t\t\t\t\t\tif (queryVersion != null )\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tLog.i(m_activity.getApplicationInfo().name,\"MXMF version = \" + queryVersion);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tLog.d(m_activity.getApplicationInfo().name,\"MX query returned no MXMF version\");\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tqueryVersion = XmlParser.fetchParm(outXml,new ParmSelector(\"\",\"Version\"));\n\n\t\t\t\t\t\tif (queryVersion != null )\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tLog.i(m_activity.getApplicationInfo().name,\"Version = \" + queryVersion);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tLog.d(m_activity.getApplicationInfo().name,\"MX query returned no version\");\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tLog.d(m_activity.getApplicationInfo().name,\"MX query returned no results\");\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t>**Note:** If you would like to base your method off of the queryMX method, make sure to edit the name of the XML that is used in the inXml instantiation to match the name of the XML that you would like to use.\n\n6. Invoke your method from the onServiceConnected method.\n7. Run the program while a Zebra Android device is connected to the computer with a USB cable and ADB is enabled on it. This will submit the query to MXMS.\n8. The Result XML Document that was returned from MXMS will be output to the LogCat log messages in Eclipse. This will show the result of the query that was performed, containing the information that was requested."},{"key":"guide-samples-SimpleMdmToolkitSample","name":"SimpleMdmToolkitSample Test App","md":"#SimpleMdmToolkitSample Test App\n\n##Overview\n\nThe SimpleMdmToolkitSample test app can be used to submit Request XML Documents to the MXMS to set a feature on the device or to perform an action. The classes in this project can also be copied into another project so that the methods can be reused to bind and submit XML to MXMS, as shown in the sample code on the [Quick Start page](#guide-tutorials-quickstart).\n\n##Sample Location\n\nThe SimpleMdmToolkitSample test app can be found in the `[MDM Install folder]\\Samples\\SimpleMdmToolKitSample` folder.\n\n##Instructions\n\n1. Import the SimpleMdmToolkitSample test app into Eclipse.\n2. Create an XML file containing the Request XML Document that you would like to test.\n3. Place this XML inside the test app's assets folder.\n4. In Eclipse, open the MainActivity class that is located in the `com.symbol.simplemdmtoolkitsample` package.\n5. In the MainActivity class, edit the name of the inXML String variable that is in the utilizeMXMS method to match the name of the XML that was created in Step 2. For example:\n\n\t\t:::java\n\t\tString xmlName = \"testSet.in.xml\";\n\n6. If you would like to test the ability to edit parm values programatically, code to do this can also be added into the utilizeMXMS method. The following code shows an example of how to edit a parm value of a Clock Feature Type Request XML Document:\n\n\t\t:::java\n\t\tif ( xmlName.startsWith(\"clock\") )\n\t\t{\n\t\t\t// Replace one or more values in the input XML\n\t\t\tArrayList<ParmValue> replaceValues = new ArrayList<ParmValue>();\n\t\t\treplaceValues.add(new ParmValue(\"clock\",\"time\",\"11:11:11\"));\n\t\t\tString replaceXml = XmlParser.replaceParms(inXml,replaceValues);\n\t\t\tif ( replaceXml != null )\n\t\t\t{\n\t\t\t\tLog.i(TAG,\"replaceXml = \"+replaceXml);\n\t\t\t\tinXml = replaceXml;\n\t\t\t}\n\t\t}\n\n7. If any additional files are needed by your Request XML Document, they will need to be added onto the device. For example, if your Request XML Document uses the AppMgr Feature Type to install an application, the necessary APK file must be put onto the device in the proper location.\n8. Run the program while a Zebra Android device is connected to the computer with a USB cable and ADB is enabled on it. This will submit the Request XML Document to MXMS.\n9. The Result XML Document that was returned from MXMS will be output to the LogCat log messages in Eclipse. This will show if the Request XML Document and the Result XML Document are equivalent. If they are equivalent, there were no errors returned and the actions were performed successfully. If they are not equivalent, this may indicate that errors were returned in the Result XML Document, indicating that some or all of the requested actions were not performed successfully."},{"key":"guide-tutorials-quickstart","name":"Quick Start","md":"#Quick Start\n\n## Overview\nThis quick start guide will walk through the common tasks and components that you will use in order for your MDM client to interface with the MX Management System available on Zebra Android devices. The following steps will be covered. \n\n* **Intro To The MXMS** - The basic information that is needed for using the MX Management System.\n* **Binding to the MXMS** - All communications to the MXMS on Zebra devices, occur through a common binding interface.  \n* **Generating XML** - Data exchanged to the MXMS from the MDM client is handled through a defined XML structure. Using the DSDtoXml tool provided in the MDM Toolkit will provide a template for the XML to be used for applying settings. Typically you will use this tool to generate all needed functions and then replace string values for dynamically changing variables.\n* **Submitting XML** - Within the MDM client, XML will be submitted to apply settings via a simple API.\n<!--* **Checking Response** - the MDM client will need to handle response from the MX framework for interpreting submit or query results -->\n* **Querying the MXMS** - Within the MDM client, XML will be submitted to query the MXMS to receive back information about the current settings on the device.\n* Next Steps\n\n## Requirements\n\n* MDM Toolkit (XML Generator Tool, DSD Files)\n* Symbol Android Device with MX\n* Java JVM Installed\n* Android ADT\n\n## Intro To The MXMS\n\n### MXMS Overview\n\nThe MX Management System (MXMS) provides a common interface to Zebra Android device capabilities utilizing XML that conforms to the standard OMA-CP PROV (Microsoft MSPROV) schema. This allows developers and administrators to have an extensible, efficient, reliable and scalable means for configuring and administrating Zebra Android devices. MXMS exposes capabilities that underlying CSPs provide to give the user access to both privileged and unprivileged APIs. Each CSP exposes its capabilities using DSD files that are included with the MDM Toolkit. These DSD files are then imported into a DSDtoXML tool to generate XML that can be sent to the MXMS running on the device to change a device configuration or behavior.\n\nFor more information on the definitions of necessary terms, the MX architecture and data flow, MDM implementation approaches, CSP summaries and other information, please see [this page.](#guide-MX-overview)\n\n### MXMS XML\n\nMXMS utilizes XML that conforms to the PROV DTD and more specifically to the Microsoft-defined dialect, which is defined by the MSPROV DTD. PROV DTD is the XML schema used by the OMA CP (Open Mobile Alliance Client Provisioning) Standard. Use of this XML schema means that XML that can be consumed by MXMS will be familiar to MDM Vendors that are already familiar with OMA CP and/or the PROV DTD. Use of this XML schema also means that MXMS can be more easily leveraged by existing MDMs that are based on or can already leverage OMA CP.\n\nFor more information on the XML elements, Request and Result XML documents, DSDs and other information, please see [this page.](#guide-xml-xml_overview)\n\n### MDM XML Creation\n\nThe XML documents that are used in MX need to be structured in a standardized format. The DSDtoXML tool, which is included in this toolkit, can be used to generate sample XML. Typically you would require that some values be changed dynamically on the device by your client application. So you would therefore manipulate the values of specific parameter attributes within your code based on the specific template you have generated. \n\nFor more information and instructions on XML generation, modifying values, and other information, please see [this page.](#guide-xml-generate)\n\n### MDM Result XML Parsing\n\nWhen submitting a Request XML document, knowing what happened will require at least some minimal parsing of the Result XML document. Parm Value Extraction is a method for simplifying the extraction of relevant information from an XML Result document, which involves searching an XML document for a parm with a given name and extracting the value associated with it.\n\nFor more information on Result XML documents and Parm Value Extraction, please see [this page.](#guide-xml-response)\n\n## Binding to the MXMS\n\n1. Create a new Android project with an empty activity in Eclipse.   \n\n2. The following permissions needs to be added to your application's manifest file to allow it to access MXMS.\n\n\t\t:::xml\n        <uses-permission android:name=\"com.symbol.mxmf.ACCESS_MX_MANAGEMENT_FRAMEWORK_SERVICE\" />\n\t\t<uses-permission android:name=\"com.motorolasolutions.emdk.mxframework.ACCESS_MX_MANAGEMENT_FRAMEWORK_SERVICE\"/>\n\t\t\n3. Create two new packages in your application. One package should be named `com.symbol.mxmf` and the other package should be named `com.motorolasolutions.emdk.mxframework`. These packages will be used for holding the aidl (Android Interface Definition Language) files.\n\n4. The SimpleMdmToolKitSample project, which is supplied in the MDM Toolkit, contains the IMxFrameworkService.aidl files that should be copied into your application. These AIDL files are located in the SimpleMdmToolKitSample's `com.symbol.mxmf` and `com.motorolasolutions.emdk.mxframework` packages. These AIDL files should be copied into the respective packages that were made in Step 3.\n\n5. In the package that contains the empty activity that was created in Step 1, copy and paste the following classes from the SimpleMdmToolKitSample project's `com.symbol.simplemdmtoolkitsample` package:\n\n\t* MxNamespace.java\n\t* MxNamespaceMotorolaSolutions.java\n\t* MxNamespaceSymbol.java\n\t* SymbolBrand.java\n\t* XmlParser.java\n\n\t>**Note:** The package names in these classes will need to be edited to match the package name of your application.\n\n6. In your application's activity, the onCreate method should call the init method that is in the SymbolBrand class. This will check that MXMS is installed on the device. If MXMS is detected, your application will be bound to MXMS, allowing interaction to occur between them.\n\n\t\t:::java\n\t\t// Variable to hold the main activity\n\t\tstatic private Activity m_activity;\n\t\n\t\t@Override\n\t\tprotected void onCreate(Bundle savedInstanceState)\n\t\t{\n\t\t\tsuper.onCreate(savedInstanceState);\n\t\t\tsetContentView(R.layout.activity_main);\n\t\t\t\n\t\t\t// Save the main activity so it can be accessed from other threads\n\t\t\tm_activity = this;\n\n\t\t\t// Call init ONCE to start the process of binding to the MXMS\n\t\t\t// Note: You should call init early (e.g. as shown here in onCreate)\n\t\t\t//       XML cannot be submitted to the MXMS the binding is complete\n\t\t\tSymbolBrand.MXMS.init(this,mMxFrameworkServiceConnection);\n\t\t}\n\n7. The ServiceConnection will also need to be added to your application's activity. This will contain the onServiceConnected callback that will notify your application that it was successfully bound to MXMS. It should also contain the onServiceDisconnected callback that will notify your application when it was successfully unbound with MXMS.\n\n\t\t:::java\n\t\t// This definition is mandatory to track binding to the MXMS\n\t\tprivate ServiceConnection mMxFrameworkServiceConnection = new ServiceConnection()\n\t\t{\n\t\t\t// Callback to notify when binding to the MXMS has completed\n\t\t\tpublic void onServiceConnected(ComponentName className,IBinder service)\n\t\t\t{\n\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\t// Callback to notify when unbinding from the MXMS has occurred\n\t\t\tpublic void onServiceDisconnected(ComponentName className)\n\t\t\t{\n\t\t\t\n\t\t\t}\n\t\t}; \n\n8. In the onServiceConnected method, the onServiceConnected in the SymbolBrand helper class should also be called, which will notify this class that your application was bound to MXMS. At the end of the method, the term method in the SymbolBrand class should be called, which will unbind your application from MXMS. The application can also exit at this point. In the onServiceDisconnected method, the onServiceDisconnected method in the SymbolBrand helper class should also be called, which will notify this class that your application was unbound from MXMS.\n\n\t\t:::java\n\t\t// This definition is mandatory to track binding to the MXMS\n\t\tprivate ServiceConnection mMxFrameworkServiceConnection = new ServiceConnection()\n\t\t{\n\t\t\t// Callback to notify when binding to the MXMS has completed\n\t\t\tpublic void onServiceConnected(ComponentName className,IBinder service)\n\t\t\t{\n\t\t\t\t// Pass the binding notification on so the helper class can know the service was bound\n\t\t\t\tSymbolBrand.MXMS.onServiceConnected(className,service);\n\n\t\t\t\t// Call term \n\t\t\t\tSymbolBrand.MXMS.term(m_activity,mMxFrameworkServiceConnection);\n\n\t\t\t\t// Exit the application\n\t\t\t\tm_activity.finish();\t    \t\t\n\t\t\t}\n\t\t\t\n\t\t\t// Callback to notify when unbinding from the MXMS has occurred\n\t\t\tpublic void onServiceDisconnected(ComponentName className)\n\t\t\t{\n\t\t\t\t// Pass the unbinding notification on so the helper class can know the service was unbound\n\t\t\t\tSymbolBrand.MXMS.onServiceDisconnected(className);\n\t\t\t}\n\t\t};    \n\n\n## Generating XML\n\n###Creating a Set XML\n\n1. Start the jar file \"DSDtoXML.jar\" located in the folder \"DSD To XML\". You will be presented with the following menu screen.\n\n\t![img](images/xml-gen/mainmenu.PNG)\n\t\n2. Click the \"Create Set XML\" button if you would like to create a new XML which will be used to set a feature on the device. \n3. You will then be presented with a file select dialog. Select the DSD file for the corresponding CSP you wish to configure and click \"Open\". For this example we will be using \"Clock.dsd\". \n\n\t![img](images/xml-gen/dsd-selection.PNG)\n\t\n4. Set the values you wish to configure via MX. For this example we will be setting Date, Time, and Time Zone.  \n\n\t![img](images/xml-gen/set-parms.PNG)\n\t\n5. When complete, click the button \"Save Set XML\". \n6. Select a location to save your XML configuration file on your computer, give it a name, and select \"Open\".\n\t\n\t![img](images/xml-gen/save-screen.PNG)\n\t\n7. You can now open the file with a text or XML editor to view the generated XML. For example:\n\n    \t:::xml\n\t\t<wap-provisioningdoc>\n\t\t\t<characteristic type=\"Clock\" version=\"4.2\" >\n\t\t\t\t<parm name=\"AutoTime\" value=\"false\"/>\n\t\t\t\t<parm name=\"TimeZone\" value=\"GMT-5\"/>\n\t\t\t\t<parm name=\"Date\" value=\"2014-12-03\"/>\n\t\t\t\t<parm name=\"Time\" value=\"11:00:00\"/>\n\t\t\t</characteristic>\n\t\t</wap-provisioningdoc>\n\n>**Note:** Notice the relationship with the `parm` attributes and associated `value`. \n\n###Creating a Query XML\n1. Start the jar file \"DSDtoXML.jar\" located in the folder \"DSD To XML\". You will be presented with the following menu screen.\n\n\t![img](images/xml-gen/mainmenu.PNG)\n\t\n2. Click the \"Create Query XML\" button if you would like to create a new XML which will be used to receive the status of a feature on the device. \n3. You will then be presented with a file select dialog. Select the DSD file for the corresponding CSP you wish to query and click \"Open\". For this example we will be using \"SettingsMgr.dsd\". \n\n\t![img](images/xml-gen/dsd-selection-query.PNG)\n\t\n4. Select the values you wish to query via MX. For this example we will be querying the ability to invoke an enterprise reset and the ability to turn Wi-Fi on/off.  \n\n\t![img](images/xml-gen/set-query.PNG)\n\t\n5. When complete, click the button \"Save Query XML\". \n6. Select a location to save your XML configuration file on your computer, give it a name, and select \"Open\".\n\t\n\t![img](images/xml-gen/save-screen-query.PNG)\n\t\n7. You can now open the file with a text or XML editor to view the generated XML. For example:\n\n\t\t:::xml\n\t\t<wap-provisioningdoc>\n\t\t\t<characteristic type=\"SettingsMgr\">\n\t\t\t\t<parm-query name=\"InvokeEnterpriseReset\"/>\n\t\t\t\t<parm-query name=\"WifiSettingsUI\"/>\n\t\t\t</characteristic>\n\t\t</wap-provisioningdoc>\n\n<!--\n1. Start the jar file \"DSDtoXML.jar\" located in the folder \"DSD To XML\". You will be presented with a file select dialog.  \n![img](images/xmlgendialog.jpg)\n2. Select the DSD file for the corresponding CSP you wish to configure and click \"Open\". For this example we will be using \"Clock.dsd\".  \n![img](images/xmlgenclock.jpg)\n3. Set the values you wish to configure via MX. For this example we will be setting, Date, Time, and time Zone.  \n![img](images/xmlgensetvalues.jpg)\n4. When complete, click the button \"Save XML\".  \n![img](images/xmlgensavebutton.jpg)\n5. Select a location to save your XML configuration file on your computer, give it a name, and select \"Save\".  \n![img](images/xmlgensavelocation.jpg)\n6. You can now open the file with a text or XML editor to view the generated XML. For example:\n\n    \t:::xml\n\t\t<wap-provisioningdoc>\n\t\t\t<characteristic type=\"Clock\" version=\"4.2\" >\n\t\t\t\t<parm name=\"AutoTime\" value=\"false\"/>\n\t\t\t\t<parm name=\"TimeZone\" value=\"GMT-5\"/>\n\t\t\t\t<parm name=\"Date\" value=\"2014-12-03\"/>\n\t\t\t\t<parm name=\"Time\" value=\"11:00:00\"/>\n\t\t\t</characteristic>\n\t\t</wap-provisioningdoc>\n\n>Note: Notice the relationship with the `parm` attributes and associated `value`. \n-->\n\n## Submitting XML\n\nIn your application's activity's onServiceConnected method, you can add code before the term call that would submit XML to MXMS. This example adds the utilizeMXMS method here, which will show how to edit XML and submit them to MXMS. However, it would be possible to repeatedly call this method from other locations. The onServiceConnected method is the first location where this method could possibly be called.\n\n\t\t:::java\n\t\t// This definition is mandatory to track binding to the MXMS\n\t\tprivate ServiceConnection mMxFrameworkServiceConnection = new ServiceConnection()\n\t\t{\n\t\t\t// Callback to notify when binding to the MXMS has completed\n\t\t\tpublic void onServiceConnected(ComponentName className,IBinder service)\n\t\t\t{\n\t\t\t\t// Pass the binding notification on so the helper class can know the service was bound\n\t\t\t\tSymbolBrand.MXMS.onServiceConnected(className,service);\n\n\t\t\t\t// For the purposes of this test application, we call this from here because this is the FIRST time it can be done\n\t\t\t\t// In a real world situation, it might be called repeatedly from other locations, as things that need to be done are identified\n\t\t\t\tutilizeMXMS();\n\n\t\t\t\t// Call term \n\t\t\t\tSymbolBrand.MXMS.term(m_activity,mMxFrameworkServiceConnection);\n\n\t\t\t\t// Exit the application\n\t\t\t\tm_activity.finish();\t    \t\t\n\t\t\t}\n\t\t\t\n\t\t\t// Callback to notify when unbinding from the MXMS has occurred\n\t\t\tpublic void onServiceDisconnected(ComponentName className)\n\t\t\t{\n\t\t\t\t// Pass the unbinding notification on so the helper class can know the service was unbound\n\t\t\t\tSymbolBrand.MXMS.onServiceDisconnected(className);\n\t\t\t}\n\t\t}; \n\nIn this example, the utilizeMXMS method is used to demonstrate how to take an XML from the application's Assets folder, change the values of a parm, and send this Request XML document to MXMS. The Result XML document that is returned is then used to get the value of one of the parms. Through the use of the methods that are mentioned here, you can create an application that also performs these actions.\n\n1. The utilizeMXMS method uses the isReady method from the SymbolBrand class to check if the application successfully bound to MXMS, which would mean that it is ready to accept XML from your application. \n\n2. If isReady returns true, the clock.in.xml is then retrieved from the Assets folder, which will be used as the Request XML document. This XML file contains:\n\n\t\t:::xml\n\t\t<wap-provisioningdoc>\n\t\t\t<characteristic type=\"Clock\" version=\"4.2\" >\n\t\t\t\t<parm name=\"AutoTime\" value=\"false\"/>\n\t\t\t\t<parm name=\"TimeZone\" value=\"GMT-5\"/>\n\t\t\t\t<parm name=\"Date\" value=\"2014-12-03\"/>\n\t\t\t\t<parm name=\"Time\" value=\"11:00:00\"/>\n\t\t\t</characteristic>\n\t\t</wap-provisioningdoc>\n\n3. To replace the parms in the Request XML document, an ArrayList must be made to contain ParmValue objects. The ParmValue object is in the XmlParser class and in this example, is instantiated with the Top Level Characteristic type (\"clock\"), the name of the parm that will be edited (\"time\"), and the new value that will be used to replace the original value in the XML (\"11:11:11\"). The Request XML document and the ArrayList of ParmValue objects is used by the XmlParser's replaceParms method, which in this example, will change the \"time\" parm's value to \"11:11:11\". \n\n4. The modified Request XML document is used by the SymbolBrand class's submitXml method, which will submit this XML to the MXMS. This XML will then be sent to the Clock Feature Type, which will change the time of the device to 11:11:11. \n\n5. The MXMS will return a Result XML document is used by the XmlParser's formatXml class to split the Result XML document up onto multiple lines for better readability. \n\n6. The XmlParser's isEquivalent method is then used to check that the Result XML document is equivalent to the Result XML document that was submitted, which would indicate that the device's clock was set successfully. If the XML documents were not equivalent, this indicates that there may have been an error in setting the clock and a characteristic error and/or parm error was returned. \n\n7. If the XML documents are equivalent, this example shows how the XmlParser's fetchParm method can be used to retrieve the value of the \"time\" parm. The Top Level Characteristic type (\"clock\") and the name of the parm who's value will be fetched (\"time\") are used by the fetchParm method to return this parm's value.\n\n\n\t\t:::java\n\t\t// Function to do something by utilizing the MXMS\n\t\tprivate void utilizeMXMS()\n\t\t{\n\t\t\t// Check to see if the MXMS is successfully bound and ready to accept XML\n\t\t\t// Note: Once the binding complete notification (previous code) is passed on, this function will return true\n\t\t\t//       Depending on where this code is called from, this check may or may not be required, but never hurts.\n\t\t\tif ( SymbolBrand.MXMS.isReady() )\n\t\t\t{\n\t\t\t\tLog.d(m_activity.getApplicationInfo().name,\"MXMS.isReady\");\n\n\t\t\t\tString xmlName = \"clock.in.xml\";\n\t\t\t\t\n\t\t\t\t// Extract an XML snippet from the application assets\n\t\t\t\tString inXml = XmlParser.getAssetXml(m_activity,xmlName);\n\t\t\t\t\n\t\t\t\t// If the XML was successfully obtained\n\t\t\t\tif ( inXml != null )\n\t\t\t\t{\n\t\t\t\t\tLog.i(m_activity.getApplicationInfo().name,\"inXml = \"+inXml);\n\n\t\t\t\t\tif ( xmlName.startsWith(\"clock\") )\n\t\t\t\t\t{\n\t\t\t\t\t\t// Replace one or more values in the input XML\n\t\t\t\t\t\tArrayList<ParmValue> replaceValues = new ArrayList<ParmValue>();\n\t\t\t\t\t\treplaceValues.add(new ParmValue(\"clock\",\"time\",\"11:11:11\"));\n\t\t\t\t\t\tString replaceXml = XmlParser.replaceParms(inXml,replaceValues);\n\t\t\t\t\t\tif ( replaceXml != null )\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tLog.i(m_activity.getApplicationInfo().name,\"replaceXml = \"+replaceXml);\n\t\t\t\t\t\t\tinXml = replaceXml;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\t// Submit the XML to the MXMS for processing\n\t\t\t\t\t// Note: This will FAIL unless SymbolBrand.MXMS.isReady(), indicating that the binding to the MXMS has completed successfully\n\t\t\t\t\tString outXml = SymbolBrand.MXMS.submitXml(inXml);\n\n\t\t\t\t\t// If we got back result XML\n\t\t\t\t\t// Note: A null result XML is what happens when the binding to the MXMS has NOT completed successfully\n\t\t\t\t\tif ( outXml != null )\n\t\t\t\t\t{\n\t\t\t\t\t\tLog.i(m_activity.getApplicationInfo().name,\"outXml = \"+outXml);\n\n\t\t\t\t\t\t// Format the return XML for friendlier display\n\t\t\t\t\t\tString fmtOutXml = XmlParser.formatXml(outXml); \n\n\t\t\t\t\t\t// If it was formatted successfully\n\t\t\t\t\t\t// Note: If invalid XML results are passed, the formatting may fail\n\t\t\t\t\t\tif ( fmtOutXml != null )\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tLog.i(m_activity.getApplicationInfo().name,\"fmtOutXml = \"+fmtOutXml);\n\n\t\t\t\t\t\t\t// Determine whether the submitted and result XML are equivalent\n\t\t\t\t\t\t\tif ( XmlParser.isEquivalent(inXml,outXml) )\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tLog.i(m_activity.getApplicationInfo().name,\"Submitted and Result XML are Equivalent!\");\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tif ( xmlName.startsWith(\"clock.in\") )\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t// Fetch the value of the time parm from the output XML\n\t\t\t\t\t\t\t\t\tString time = XmlParser.fetchParm(outXml,new ParmSelector(\"clock\",\"time\"));\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t// If we got a non-null value\n\t\t\t\t\t\t\t\t\tif ( time != null )\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tLog.i(m_activity.getApplicationInfo().name,\"Set time was \\\"\"+time+\"\\\"\");\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tString fmtInXml = XmlParser.formatXml(inXml); \n\t\t\t\t\t\t\t\tif ( fmtInXml != null ) Log.e(m_activity.getApplicationInfo().name,\"inXml = \"+fmtInXml);\n\t\t\t\t\t\t\t\tLog.e(m_activity.getApplicationInfo().name,\"fmtOutXml = \"+fmtOutXml);\n\t\t\t\t\t\t\t\tLog.e(m_activity.getApplicationInfo().name,\"Submitted and Result XML are NOT Equivalent!\");\n\n\t\t\t\t\t\t\t\t// Determine whether any top-level characteristic errors were in the result XML\n\t\t\t\t\t\t\t\tint errors = XmlParser.countTlcErrors(outXml);\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tif ( errors > 0 )\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tLog.e(m_activity.getApplicationInfo().name,\"Result XML has \"+errors+\" top level characteristic errors!\");\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tLog.d(m_activity.getApplicationInfo().name,\"No formatted XML\");\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tLog.d(m_activity.getApplicationInfo().name,\"No output XML\");\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tLog.d(m_activity.getApplicationInfo().name,\"No input XML\");\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n## Querying the MXMS\n\nSubmitting queries to MX follows a similar process to submitting XML that is meant to set the device or perform an action. The SimpleMdmToolKitQuery project, which is supplied in the MDM Toolkit, contains an example of how to submit queries to MX. \n\n1. This example calls the queryMX method from the onServiceConnected instead of the utilizeMXMS method which was used in the previous example.\n\n\t\t:::java\n\t\t// This definition is mandatory to track binding to the MXMS\n\t\tprivate ServiceConnection mMxFrameworkServiceConnection = new ServiceConnection()\n\t\t{\n\t\t\t// Callback to notify when binding to the MXMS has completed\n\t\t\tpublic void onServiceConnected(ComponentName className,IBinder service)\n\t\t\t{\n\t\t\t\t// Pass the binding notification on so the helper class can know the service was bound\n\t\t\t\tSymbolBrand.MXMS.onServiceConnected(className,service);\n\n\t\t\t\t// For the purposes of this test application, we call this from here because this is the FIRST time it can be done\n\t\t\t\t// In a real world situation, it might be called repeatedly from other locations, as things that need to be done are identified\n\t\t\t\tqueryMX();\n\n\t\t\t\t// Call term \n\t\t\t\tSymbolBrand.MXMS.term(m_activity,mMxFrameworkServiceConnection);\n\t\t\t\t\n\t\t\t\t// Exit the application\n\t\t\t\tm_activity.finish();\t    \t\t\n\t\t\t}\n\t\t\t\n\t\t\t// Callback to notify when unbinding from the MXMS has occurred\n\t\t\tpublic void onServiceDisconnected(ComponentName className)\n\t\t\t{\n\t\t\t\t// Pass the unbinding notification on so the helper class can know the service was unbound\n\t\t\t\tSymbolBrand.MXMS.onServiceDisconnected(className);\n\t\t\t}\n\t\t};  \n\n2. In the queryMX method, if isReady returns true, the mx.in3.xml is then retrieved from the Assets folder, which will be used as the Request XML document. This XML file contains:\n\n\t\t:::xml\n\t\t<wap-provisioningdoc>\n\t\t\t<characteristic-query type=\"MX\"/>\n\t\t</wap-provisioningdoc>\n\t\t\n3. The Request XML document is used by the SymbolBrand class's submitXml method, which will submit this XML to the MXMS. This XML will then be sent to the MX Feature Type, which will return the version number of MXMS.\n\n5. The MXMS will return a Result XML document which is then used by the XmlParser's fetchParm method to retreive and output the value of the \"MXMFVersion\" and \"Version\" parms.\n\n6. This sample project also shows similar code which would let you query the CspMgr Feature Type, which would return an enumerated list of the available Feature Types. There are also examples on how to use the other XMLs in the project's Assets folder to query other Feature Types, such as the CameraMgr, DisplayMgr, DevAdmin, DhcpOptionMgr, and EncryptMgr, to receive back information about the current settings of the device. \n\n\t\t:::java\n\t\t// Function to query MX version(s)\n\t\tprivate void queryMX()\n\t\t{\n\t\t\t// Check to see if the MXMS is successfully bound and ready to accept XML\n\t\t\t// Note: Once the binding complete notification (previous code) is passed on, this function will return true\n\t\t\t//       Depending on where this code is called from, this check may or may not be required, but never hurts.\n\t\t\tif ( SymbolBrand.MXMS.isReady() )\n\t\t\t{\n\t\t\t\tLog.d(m_activity.getApplicationInfo().name,\"MXMS.isReady\");\n\n\t\t\t\t// Extract an XML snippet from the application assets\n\t\t\t\t//String inXml = XmlParser.getAssetXml(m_activity,\"mx.in1.xml\");\n\t\t\t\t//String inXml = XmlParser.getAssetXml(m_activity,\"mx.in2.xml\");\n\t\t\t\tString inXml = XmlParser.getAssetXml(m_activity,\"mx.in3.xml\");\n\t\t\t\t\n\t\t\t\t// If the XML was successfully obtained\n\t\t\t\tif ( inXml != null )\n\t\t\t\t{\n\t\t\t\t\tLog.d(m_activity.getApplicationInfo().name,\"inXml = \"+inXml);\n\n\t\t\t\t\t// Submit the XML to the MXMS for processing\n\t\t\t\t\t// Note: This will FAIL unless SymbolBrand.MXMS.isReady(), indicating that the binding to the MXMS has completed successfully\n\t\t\t\t\tString outXml = SymbolBrand.MXMS.submitXml(inXml);\n\n\t\t\t\t\t// If we got back result XML\n\t\t\t\t\t// Note: A null result XML is what happens when the binding to the MXMS has NOT completed successfully\n\t\t\t\t\tif ( outXml != null )\n\t\t\t\t\t{\n\t\t\t\t\t\tLog.d(m_activity.getApplicationInfo().name,\"outXml = \"+outXml);\n\n\t\t\t\t\t\tString queryVersion = XmlParser.fetchParm(outXml,new ParmSelector(\"\",\"MXMFVersion\"));\n\n\t\t\t\t\t\tif (queryVersion != null )\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tLog.i(m_activity.getApplicationInfo().name,\"MXMF version = \" + queryVersion);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tLog.d(m_activity.getApplicationInfo().name,\"MX query returned no MXMF version\");\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tqueryVersion = XmlParser.fetchParm(outXml,new ParmSelector(\"\",\"Version\"));\n\n\t\t\t\t\t\tif (queryVersion != null )\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tLog.i(m_activity.getApplicationInfo().name,\"Version = \" + queryVersion);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tLog.d(m_activity.getApplicationInfo().name,\"MX query returned no version\");\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tLog.d(m_activity.getApplicationInfo().name,\"MX query returned no results\");\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\n\n<!--\nThe following sample code shows how to submit XML that was created in the previous step to the MX Framework as a string. The `MXservice` object refers to the `IMxFrameworkService` object we created in the previous step.\n\n    :::java\n    //MX can through exceptions when processing XML \n\ttry {\n\t    //Check if the MX service is null \n\t    if(MXservice != null){\n\t        //MX Response XML\n\t\t\tString MxResXML = \"\";\n\t\t\t\t\t\t\n\t\t\t//MX XML\n\t\t\tString MxXML = \"<wap-provisioningdoc>\"\n\t\t\t\t\t\t +     \"<characteristic type=\\\"Clock\\\" version=\\\"4.2\\\">\"\n\t\t\t\t\t\t +         \"<parm name=\\\"AutoTime\\\" value=\\\"false\\\"/>\"\n\t\t\t\t\t\t +         \"<parm name=\\\"TimeZone\\\" value=\\\"GMT-5\\\"/>\"\n\t\t\t\t\t\t +         \"<parm name=\\\"Date\\\" value=\\\"2014-12-03\\\"/>\"\n\t\t\t\t\t\t +         \"<parm name=\\\"Time\\\" value=\\\"17:00:00\\\"/>\"\n\t\t\t\t\t\t +     \"</characteristic>\"\n\t\t\t\t\t\t + \"</wap-provisioningdoc>\";\n\t\t\t\t\t\t\n\t\t\t\t\t\t\n\t\t\t//Send XML to MX for processing \n\t\t\tMxResXML = MXservice.processXML(MxXML);\n\t\t\t\t\t\t\n\t\t\t//Log result XML\n\t\t    Log.i(\"MX\", \"MxResXML: \" + MxResXML);\n\t    }\n\t    else{\n\t        Log.e(\"MX\", \"Service is null\");\n\t    }\n\t} \n\tcatch (Exception e) {\n\t    Log.e(\"MX\", e.toString());\n    }\n-->\n\t\n<!--\n## MX Response\n\nOn successful processing of the XML, MX will return the XML that was submitted. The following sample code shows how to determine if a call to the MX Framework was successful. \n\n\t:::java\n    //Send XML to MX for processing \n\tMxResXML = MXservice.processXML(MxXML);\n\t\t\t\t\t\t\n\t//Check for Success\n\tif(MxResXML.equals(MxXML))\n\t{\n\t\t//Request Success\n\t\tLog.i(\"MX\", \"MxResXML: \" + MxResXML);\n\t}\n\telse\n\t{\n\t\t//Request Failure\n\t\tLog.e(\"MX\", \"MxResXML: \" + MxResXML);\n\t}\n\n-->\n\n## Next Step\nNow that you have mastered the basics you will want to read about more details on the various aspects of interacting with MX.\n\n* [XML Generation](#xml-generate)\n"},{"key":"guide-xml-generate","name":" XML Generation","md":"# XML Generation\n\n## Overall Approach\nAs discussed in the MX Management System Overview document, the XML format is used to submit requests to the MXMS to apply settings or to retrieve information. It also uses this same format when sending back responses to the client making the request. The XML needs to be structured in a standardized format. In order to help understand this format, we have included a DSDtoXML tool with this toolkit to be used to generate sample XML. Typically you would require that some values be changed dynamically on the device by your client application. So you would therefore manipulate the values of specific parameter attributes within your code based on the specific template you have generated. \n\nA typical approach to XML generation may include:\n\n* Use the DSDtoXML tool to generate several XML templates for the features you wish to include in your client\n* Include these templates either in your device client or server code depending on your scheme for setting values\n* Edit the values inside specific parameter attributes accordingly (typically parameters with text values)\n* Submit the XML from your client application that has been enabled for MXMS communication\n\n## DSD Files\n\nDSD Files are XML documents that define the schema a CSP uses to configure settings on a device. Each CSP has a matching DSD document. Each version of the MXMS includes a set of CSPs that include a specific feature set. When generating XML for a CSP, be sure to consider the version of the MXMS that you are working with. The DSDs included with the MDM Toolkit can be found in the `MX` folder. Within the `MX` folder, there will be versions of MXMS along with a `DSD` subfolder. \n\n![img](images/dsdfiles.jpg)\n\n\n### DSD-Driven Programmatic XML Generation\n\nA powerful and extensible, but fairly complex, method for creating conformant XML is to drive generation of XML directly from a DSD. This method is most valuable for an MDM Server that is likely to possess the requisite processing resources. This method could be used to support cases where the MDM Server wishes to present its own Data-Driven UI to allow an MDM Administrator to enable the creation of XML that is conformant to a selected DSD. It also could be used to support cases where the MDM Server needs to programmatically generate XML and wants to drive this from the DSD to avoid the need to change the code if a DSD is added or modified. This method requires that the DSD be parsed and interpreted by the MDM Server code. Since the processing of DSDs can be quite complex, use of this technique is not currently supported by the EMDK for MDMs. Future versions of the EMDK for MDMs may support this method by supplying code libraries that can be called directly from MDM Servers.\n\n### XML Templates\n\nA simple and quite useful method for creating conformant XML is to use XML Templates and Parm Value Substitution. An XML Template is XML that is \"hand generated\" using a tool that can present a Data-Driven UI based on a DSD. An XML Template may address the needs of a particular use case by making specific decisions about the values of specific Pivotal Parms. A single CSP may require many XML Templates if the CSP can be used to satisfy many different use cases. An MDM that wants to use a CSP needs to understand the use cases that CSP can support and which of them are of value to be leveraged by that MDM. For each use case that a CSP supports and that an MDM wishes to leverage, a suitable XML Template will likely need to be generated.\n\n#### XML Templates and Parm Substitution\n\nWhen an MDM uses XML Templates, a given use case is likely to involve one or more Non-Pivotal Parms. \n\nA Non-Pivotal Parm is simply a parm where the value selected or entered has no impact on subsequent SGCs or parms. When an XML Template is \"hand generated\" for a given Use Case using a tool, it will often be necessary to enter \"valid\" values for one or more Non-Pivotal Parms. Since the XML Template is intended to be generic for a given Use Case, any valid \"placeholder\" values can be entered for Non-Pivotal Parms. When an XML Template is used to implement its associated Use Case, Parm Value Substitution can be used to replace the \"placeholder\" values of Non-Pivotal Parms with the actual values required to customize that XML Template to produce the proper result. It is an important aspect of the XML used by MXMS that a given parm can only appear ONCE within a given TLC since this can make it much easier to locate and perform replacement of the values of \"placeholder\" values of Non-Pivotal Parms within an XML Template.\n\n#### Management Functions and XML Templates\n\nXML Templates and Parm Value Substitution can be quite useful when XML will be created by the MDM Server or the MSP Agent. This can be accomplished via a process such as:\n\n* Determine the list of management functions that need to be supported by the MDM\n* Determine which use case of which CSP can be used to implement each identified management function\n* Generate an XML Template for each required use case \n* Embed the XML Template for each required use case into the code of the MDM Server or MDM Agent, as appropriate, and associate it logically with the associated management function\n\nTo perform a given management function:\n\n1. Obtain the parameter data required to perform that management function.\n2. Select the XML Template associated with that management function.\n3. Use Parm Value Substitution to customize the XML Template with the parameter data to generate XML to perform the desired management function.\n4. If the MDM Server is generating the XML, deliver the generated XML to the MSP Agent for submission to the MXMS. If the MSP Agent is generating the XML, submit the generated XML to the MXMS.\n\n\n\n## Using DSDtoXML Tool\n\nThe DSDtoXML tool, `DSDtoXML.jar`, is used for generating XML configuration files and templates. It is located in the `DSD To XML` folder of the MDM Toolkit\n\n![img](images/dsdtoolfolder.jpg)\n\n###Prerequisites\n\n* Java JVM Installed\n* DSDtoXML.jar\n* DSD Files\n\n### Generating XML\n\n1. Start the jar file \"DSDtoXML.jar\" located in the folder \"DSD To XML\". You will be presented with a file select dialog.  \n![img](images/xmlgendialog.jpg)\n2. Select the DSD file for the corresponding CSP you wish to configure and click \"Open\". For this example we will be using \"Clock.dsd\".  \n![img](images/xmlgenclock.jpg)\n3. Set the values you wish to configure via MX. For this example we will be setting, Date, Time, and time Zone.  \n![img](images/xmlgensetvalues.jpg)\n4. When complete, click the button \"Save XML\".  \n![img](images/xmlgensavebutton.jpg)\n5. Select a location to save your XML configuration file on your computer, give it a name, and select \"Save\".  \n![img](images/xmlgensavelocation.jpg)\n6. You can now open the file with a text or XML editor to view the generated XML. For this example this is the XML output:\n\n    \t:::xml\n\t\t<wap-provisioningdoc>\n\t\t\t<characteristic type=\"Clock\" version=\"4.2\" >\n\t\t\t\t<parm name=\"AutoTime\" value=\"false\"/>\n\t\t\t\t<parm name=\"TimeZone\" value=\"GMT-5\"/>\n\t\t\t\t<parm name=\"Date\" value=\"2014-12-03\"/>\n\t\t\t\t<parm name=\"Time\" value=\"17:00:00\"/>\n\t\t\t</characteristic>\n\t\t</wap-provisioningdoc>\n\n>Note: Notice the relationship with the `parm` attributes and associated `value`. \n\n### About CSP XML Parms \n\nIn order to make sure your XML is well structured and follows the MXMS definition. It is recommended that the XML be constructed using the DSDtoXML tool. The XML structure contains a possible tree of `characteristic` and `parm` attributes along with their values. Each CSP will generate a different XML tree based on how the CSP has grouped features together. By comparing the XML generated to the values you choose within the DSDtoXML tool will give you a way to identify the values that you may need to change dynamically. Typically the values that the MDM client will change will be the free form text fields. It is not recommended that other types of characteristics are changed dynamically. A set of XML characteristic and parm uages can be found in the associated CSP RTF file found in the `RTF` folder. You can also generate this document using the DSDtoXML tool by  selecting the \"Save RTF\" button. \n\n>**Note:** Notice in the example below we are using the DSDtoXML tool to generate a Wi-Fi profile to add a new Wi-Fi network. In the tool we put in placeholder text that we can replace with our MDM client code before submitting the XML to the MXMS.\n\n![img](images/xmlgenrelationship.jpg)\n\n### Switching DSD Documents\n\nMost likely, you will need to generate multiple sets of XML segments associated with each task that the MDM client wishes to expose. To accomplish this, you will need to load DSD files separately. You can select another DSD at any time by clicking the button `Load DSD`. \n\n![img](images/xmlgenloaddsdbutton.jpg)\n\n>**Note:** All current settings will be lost. \n\n### Resetting Configuration\n\nAt any time while configuring the MXMS settings you can reset the settings to their default values by clicking \"Reset\".\n\n![img](images/xmlgenresetbutton.jpg)\n\n>**Note:** All current settings will be lost. \n\n### Quitting the Application\n\nTo quit the application click the button \"Quit\". \n\n![img](images/xmlgenquitbutton.jpg)\n\n>**Note:** All current settings will be lost. \n\n### Limitations\n\n* In addition to setting device configurations, MXMS can be used to set query for device information. Currently this tool cannot generate Query XML. \n\n## Modifying Values\n\nOnce the XML template has been generated, it is very likely your MDM client will want to modify some of the values dynamically. As you get familiar with different CSPs, you will see that when some options are selected, another group of options are presented. Some of the fields of the newly presented options may be required in order for it to be successfully processed. Generating the corresponding XML within your MDM client code would be quite complex and prone to error. Therefore, it is recommended that the DSDtoXML tool be used to generate each of these \"decision points\" to develop a very modular approach to XML submission. Then the values that need to be changed dynamically would simply reside in the text fields that are shown in the DSDtoXMl tool. This value would then simply be replaced in the XML in the MDM client application.\n\nFor example, let's say we needed to install and uninstall a series of applications as well as change the default launcher for the device. We would launch the DSDtoXML tool and develop a few XML modules:\n\n* Install Application\n* Uninstall Application\n* Set Default Launcher\n\nThe **Install Application** XML module would look something like:\n\n\t:::xml\n\t<wap-provisioningdoc>\n\t\t<characteristic type=\"AppMgr\" version=\"4.2\" >\n\t\t\t<parm name=\"Action\" value=\"Install\"/>\n\t\t\t<parm name=\"APK\" value=\"/storage/sdcard1/placeholder-install.apk\"/>\n\t\t</characteristic>\n\t</wap-provisioningdoc>\n\nThe MDM client would use this XML module for each application it wishes to install and replace the `APK` parm's value `/storage/sdcard1/placeholder.apk` each time with the 'real' value.\n\nThe **Uninstall Application** XML module would look something like:\n\n\t:::xml\n\t<wap-provisioningdoc>\n\t\t<characteristic type=\"AppMgr\" version=\"4.2\" >\n\t\t\t<parm name=\"Action\" value=\"Uninstall\"/>\n\t\t\t<parm name=\"Package\" value=\"com.mycompany.placeholder\"/>\n\t\t</characteristic>\n\t</wap-provisioningdoc>\n\nNotice that this XML looks very similar to the previous one, but the `Action` parm has changed to `Uninstall`. This in turn, has also changed the parm to `Package` as opposed to `APK` that was used in the install XML above. Instead of trying to develop this XML within the MDM client code, we would just have a corresponding XML module generated by the DSDtoXML tool for our 'uninstall' action and then replace the  `Package` parm's value from `com.mycompany.placeholder` to the actual package that we wish to remove.\n\nOur **Default launcher** XML module looks very similar to the Uninstall one we just discussed:\n\n\t:::xml\n\t<wap-provisioningdoc>\n\t\t<characteristic type=\"AppMgr\" version=\"4.2\" >\n\t\t\t<parm name=\"Action\" value=\"SetDefaultLauncher\"/>\n\t\t\t<parm name=\"Package\" value=\"com.mycompany.placeholder-launcher\"/>\n\t\t</characteristic>\n\t</wap-provisioningdoc>\n\nNotice just the `Action` parm's value has changed.\n\n## XML Queries\n\nAt this time, the DSDtoXML tool does not generate XML that can be used for queries. Each CSP reference document within this MDM Toolkit documentation may include a section on query XML depending on whether it supports any query abilities. Future versions of the MDM toolkit and MXMS, may contain the ability to generate queries by using the corresponding DSD file and updated DSDtoXML tool."},{"key":"guide-xml-queries","name":" XML Queries","md":"# XML Queries\n\nThis guide will describes how to query MXMS for framework and device information:\n\n* Component Versions\n* Installed CSPs\n* CSP Attributes\n* Grouping Queries\n\n> Note: This version of the MDM toolkit provides limited support for query abilities. The DSDtoXML tool currently does not support generating the needed query XML. Query support will be shown under a given CSP reference within this document if the CSP supports querying it's parameters. Below are some generic queries that are available at the framework level.\n\n## CSP Query System  \n\nThe CSP query system allows a developer to query the MXMS for information about the device and the state of the device. CSPs can be queried based off characteristics or parameters. Each CSP may or may not support querying of individual parameters and characteristics. You will need to check the CSP reference found in this guide to see what querying capabilities it supports. \n\n### Parameter Query Example\n\nExample Input: \n\n    :::xml\n    <wap-provisioningdoc>\n        <characteristic type=\"SomeTopLevelCharacteristic\">\n             <parm-query name=\"SomeParm\">\n             </parm-query>\n        </characteristic>\n    </wap-provisioningdoc>\n\nExample Output: \n\n    :::xml\n    <wap-provisioningdoc>\n        <characteristic type=\"SomeTopLevelCharacteristic\" version=\"4.2\">\n            <parm name=\"SomeParm\" value=\"SomeValue\"/>\n\t    </characteristic>\n    </wap-provisioningdoc>\n\n### Characteristic Query Example\n\nExample Input: \n\n    :::xml\n    <wap-provisioningdoc>\n        <characteristic-query type=\"SomeTopLevelCharacteristic\">\n        </characteristic-query>\n    </wap-provisioningdoc>\n\nExample Output: \n\n    :::xml\n    <wap-provisioningdoc>\n        <characteristic type=\"SomeTopLevelCharacteristic\" version=\"4.2\">\n            ...\n\t    </characteristic>\n    </wap-provisioningdoc>\n\n## Getting the MXMS Version \n\nThe following XML block queries for MXMS Version information: \n\n    :::xml\n    <wap-provisioningdoc>\n\t    <characteristic-query type=\"MX\">\n\t    </characteristic-query>\n    </wap-provisioningdoc>\n\nExample Output: \n\n    :::xml\n    <wap-provisioningdoc>\n        <characteristic type=\"MX\" version=\"4.2\">\n\t        <parm name=\"Version\" value=\"4.2.0.3\"/>\n\t    </characteristic>\n    </wap-provisioningdoc>\n\n## Getting Installed CSPs \n\nThe following XML queries the MXMS for the list of CSPs: \n\n    :::xml\n    <wap-provisioningdoc>\n\t    <characteristic-query type=\"CspMgr\">\n\t    </characteristic-query>\n    </wap-provisioningdoc>\n\nExample Output: \n\n    :::xml\n\t<wap-provisioningdoc>\n\t\t<characteristic type=\"CspMgr\">\n\t\t\t<characteristic type=\"csp-details\">\n\t\t\t\t<parm name=\"characteristic\" value=\"AccessMgr\"/>\n\t\t\t\t<parm name=\"package\" value=\"com.motorolasolutions.emdk.mxframework.accessmngr\"/>\n\t\t\t\t<parm name=\"class\" value=\"com.motorolasolutions.emdk.mxframework.accessmngr.MxAccessMngrCSPService\"/>\n\t\t\t</characteristic>\n\t\t</characteristic>\n\t\t<characteristic type=\"CspMgr\">\n\t\t\t<characteristic type=\"csp-details\">\n\t\t\t\t<parm name=\"characteristic\" value=\"AppMgr\"/>\n\t\t\t\t<parm name=\"package\" value=\"com.motorolasolutions.emdk.mxframework.appmngr\"/>\n\t\t\t\t<parm name=\"class\" value=\"com.motorolasolutions.emdk.mxframework.appmngr.MxAppMngrCSPService\"/>\n\t\t\t</characteristic>\n\t\t</characteristic>\n\t\t<characteristic type=\"CspMgr\">\n\t\t\t<characteristic type=\"csp-details\">\n\t\t\t\t<parm name=\"characteristic\" value=\"CertMgr\"/>\n\t\t\t\t<parm name=\"package\" value=\"com.motorolasolutions.emdk.mxframework.mxcertmanager\"/>\n\t\t\t\t<parm name=\"class\" value=\"com.motorolasolutions.emdk.mxframework.mxcertmanager.MxCertManagerService\"/>\n\t\t\t</characteristic>\n\t\t</characteristic>\n\t\t<characteristic type=\"CspMgr\">\n\t\t\t<characteristic type=\"csp-details\">\n\t\t\t\t<parm name=\"characteristic\" value=\"Clock\"/>\n\t\t\t\t<parm name=\"package\" value=\"com.motorolasolutions.emdk.mxframework.mxclockcsp\"/>\n\t\t\t\t<parm name=\"class\" value=\"com.motorolasolutions.emdk.mxframework.mxclockcsp.MxCSPClockService\"/>\n\t\t\t</characteristic>\n\t\t</characteristic>\n\t\t<characteristic type=\"CspMgr\">\n\t\t\t<characteristic type=\"csp-details\">\n\t\t\t\t<parm name=\"characteristic\" value=\"Intent\"/>\n\t\t\t\t<parm name=\"package\" value=\"com.motorolasolutions.emdk.mxframework.mxintentcsp\"/>\n\t\t\t\t<parm name=\"class\" value=\"com.motorolasolutions.emdk.mxframework.mxintentcsp.MxIntentCSPService\"/>\n\t\t\t</characteristic>\n\t\t</characteristic>\n\t\t<characteristic type=\"CspMgr\">\n\t\t\t<characteristic type=\"csp-details\">\n\t\t\t\t<parm name=\"characteristic\" value=\"MX\"/>\n\t\t\t\t<parm name=\"package\" value=\"com.motorolasolutions.emdk.mxframework.mxversioncsp\"/>\n\t\t\t\t<parm name=\"class\" value=\"com.motorolasolutions.emdk.mxframework.mxversioncsp.MxVersionCSPService\"/>\n\t\t\t</characteristic>\n\t\t</characteristic>\n\t\t<characteristic type=\"CspMgr\">\n\t\t\t<characteristic type=\"csp-details\">\n\t\t\t\t<parm name=\"characteristic\" value=\"PersistMgr\"/>\n\t\t\t\t<parm name=\"package\" value=\"com.motorolasolutions.emdk.mxframework.mxpersistcsp\"/>\n\t\t\t\t<parm name=\"class\" value=\"com.motorolasolutions.emdk.mxframework.mxpersistcsp.MxPersistCSPService\"/>\n\t\t\t</characteristic>\n\t\t</characteristic>\n\t\t<characteristic type=\"CspMgr\">\n\t\t\t<characteristic type=\"csp-details\">\n\t\t\t\t<parm name=\"characteristic\" value=\"XmlMgr\"/>\n\t\t\t\t<parm name=\"package\" value=\"com.motorolasolutions.emdk.mxframework.mxxmlmgrcsp\"/>\n\t\t\t\t<parm name=\"class\" value=\"com.motorolasolutions.emdk.mxframework.mxxmlmgrcsp.MxXmlMgrCSPService\"/>\n\t\t\t</characteristic>\n\t\t</characteristic>\n\t\t<characteristic type=\"CspMgr\">\n\t\t\t<characteristic type=\"csp-details\">\n\t\t\t\t<parm name=\"characteristic\" value=\"SettingsMgr\"/>\n\t\t\t\t<parm name=\"package\" value=\"com.motorolasolutions.emdk.mxframework.settingsmanager\"/>\n\t\t\t\t<parm name=\"class\" value=\"com.motorolasolutions.emdk.mxframework.settingsmanager.MxSettingsMngrCSPService\"/>\n\t\t\t</characteristic>\n\t\t</characteristic>\n\t\t<characteristic type=\"CspMgr\">\n\t\t\t<characteristic type=\"csp-details\">\n\t\t\t\t<parm name=\"characteristic\" value=\"Wi-Fi\"/>\n\t\t\t\t<parm name=\"package\" value=\"com.motorolasolutions.emdk.mxframework.wificonfigcsp\"/>\n\t\t\t\t<parm name=\"class\" value=\"com.motorolasolutions.emdk.mxframework.wificonfigcsp.MxWifiConfigCSPService\"/>\n\t\t\t</characteristic>\n\t\t</characteristic>\t\n\t\t<characteristic type=\"CspMgr\">\n\t\t\t<characteristic type=\"csp-details\">\n\t\t\t\t<parm name=\"characteristic\" value=\"DataWedge\"/>\n\t\t\t\t<parm name=\"package\" value=\"com.motorolasolutions.emdk.mxframework.datawedgecsp\"/>\n\t\t\t\t<parm name=\"class\" value=\"com.motorolasolutions.emdk.mxframework.datawedgecsp.MxDataWedgeCSPService\"/>\n\t\t\t</characteristic>\n\t\t</characteristic>\n\t\t<characteristic type=\"CspMgr\">\n\t\t\t<characteristic type=\"csp-details\">\n\t\t\t\t<parm name=\"characteristic\" value=\"UsbMgr\"/>\n\t\t\t\t<parm name=\"package\" value=\"com.motorolasolutions.emdk.mxframework.mxusbmgrcsp\"/>\n\t\t\t\t<parm name=\"class\" value=\"com.motorolasolutions.emdk.mxframework.mxusbmgrcsp.MxUsbMgrCSPService\"/>\n\t\t\t</characteristic>\n\t\t</characteristic>\n\t\t<characteristic type=\"CspMgr\">\n\t\t\t<characteristic type=\"csp-details\">\n\t\t\t\t<parm name=\"characteristic\" value=\"TouchMgr\"/>\n\t\t\t\t<parm name=\"package\" value=\"com.motorolasolutions.emdk.mxframework.mxtouchmngr\"/>\n\t\t\t\t<parm name=\"class\" value=\"com.motorolasolutions.emdk.mxframework.mxtouchmngr.MxTouchMngrCSPService\"/>\n\t\t\t</characteristic>\n\t\t</characteristic>\n\t\t<characteristic type=\"CspMgr\">\n\t\t\t<characteristic type=\"csp-details\">\n\t\t\t\t<parm name=\"characteristic\" value=\"WirelessMgr\"/>\n\t\t\t\t<parm name=\"package\" value=\"com.motorolasolutions.emdk.mxframework.wirelessmgr\"/>\n\t\t\t\t<parm name=\"class\" value=\"com.motorolasolutions.emdk.mxframework.wirelessmgr.MxWirelessMgrCSPService\"/>\n\t\t\t</characteristic>\n\t\t</characteristic>\n\t\t<characteristic type=\"CspMgr\">\t\t\t\n\t\t\t<characteristic type=\"csp-details\">\n\t\t\t\t<parm name=\"characteristic\" value=\"GprsMgr\"/>\n\t\t\t\t<parm name=\"package\" value=\"com.motorolasolutions.emdk.mxframework.mxgprsmngr\"/>\n\t\t\t\t<parm name=\"class\" value=\"com.motorolasolutions.emdk.mxframework.mxgprsmngr.MxGPRSMngrCSPService\"/>\n\t\t\t</characteristic>\n\t\t</characteristic>\n\t\t<characteristic type=\"CspMgr\">\n\t\t\t<characteristic type=\"csp-details\"><parm name=\"characteristic\" value=\"UiMgr\"/>\n\t\t\t\t<parm name=\"package\" value=\"com.motorolasolutions.emdk.mxframework.uimanager\"/>\n\t\t\t\t<parm name=\"class\" value=\"com.motorolasolutions.emdk.mxframework.uimanager.MxUIManagerCSPService\"/>\n\t\t\t</characteristic>\n\t\t</characteristic>\n\t\t<characteristic type=\"CspMgr\">\n\t\t\t<characteristic type=\"csp-details\">\n\t\t\t\t<parm name=\"characteristic\" value=\"PowerMgr\"/>\n\t\t\t\t<parm name=\"package\" value=\"com.motorolasolutions.emdk.mxframework.mxpowermgr\"/>\n\t\t\t\t<parm name=\"class\" value=\"com.motorolasolutions.emdk.mxframework.mxpowermgr.MxPowerMgrCSPService\"/>\n\t\t\t</characteristic>\n\t\t</characteristic>\n\t</wap-provisioningdoc>\n\n## Getting CSP Version\n\nThe following XML block queries for CSP Version information: \n\n    :::xml\n    <wap-provisioningdoc>\n        <characteristic type=\"AppMgr\">\n             <parm-query name=\"Version\">\n             </parm-query>\n        </characteristic>\n    </wap-provisioningdoc>\n\nExample Output: \n\n    :::xml\n    <wap-provisioningdoc>\n        <characteristic type=\"AppMgr\" version=\"4.2\">\n            <parm name=\"Version\" value=\"4.2.4\"/>\n\t    </characteristic>\n    </wap-provisioningdoc>\n\n## Grouping Queries\n\n\nXML Queries can be combined. For example, we can query for MXMS version and the list of CSPs:\n\n     :::xml\n     <wap-provisioningdoc>\n         <characteristic-query type=\"MX\">\n         \t<characteristic-query type=\"CspMgr\">\n         \t</characteristic-query>\"\n         </characteristic-query>\"\n    </wap-provisioningdoc>\n\n\nThe output XML will then be combined:\n\n\t:::xml\n    <wap-provisioningdoc>\n\t\t<characteristic type=\"MX\" version=\"4.2\">\n\t\t\t<parm name=\"Version\" value=\"4.2.0.3\"/>\n\t\t</characteristic>\n\t\t<characteristic type=\"CspMgr\">\n\t\t\t<characteristic type=\"csp-details\">\n\t\t\t\t<parm name=\"characteristic\" value=\"AccessMgr\"/>\n\t\t\t\t<parm name=\"package\" value=\"com.motorolasolutions.emdk.mxframework.accessmngr\"/>\n\t\t\t\t<parm name=\"class\" value=\"com.motorolasolutions.emdk.mxframework.accessmngr.MxAccessMngrCSPService\"/>\n\t\t\t</characteristic>\n\t\t</characteristic>\n\t \n\t\t.........\n\t \n\t\t<characteristic type=\"CspMgr\">\n\t\t\t<characteristic type=\"csp-details\">\n\t\t\t\t<parm name=\"characteristic\" value=\"UiMgr\"/>\n\t\t\t\t<parm name=\"package\" value=\"com.motorolasolutions.emdk.mxframework.uimanager\"/>\n\t\t\t\t<parm name=\"class\" value=\"com.motorolasolutions.emdk.mxframework.uimanager.MxUIManagerCSPService\"/>\n\t\t\t</characteristic>\n\t\t</characteristic>\n\t\t<characteristic type=\"CspMgr\">\n\t\t\t<characteristic type=\"csp-details\">\n\t\t\t\t<parm name=\"characteristic\" value=\"PowerMgr\"/>\n\t\t\t\t<parm name=\"package\" value=\"com.motorolasolutions.emdk.mxframework.mxpowermgr\"/>\n\t\t\t\t<parm name=\"class\" value=\"com.motorolasolutions.emdk.mxframework.mxpowermgr.MxPowerMgrCSPService\"/>\n\t\t\t</characteristic>\n\t\t</characteristic>\n\t</wap-provisioningdoc>\n\n"},{"key":"guide-xml-response","name":" XML Responses","md":"# XML Responses\n\nWhen submitting a Request XML document, knowing what happened will require at least some minimal parsing of the Result XML document. The required parsing can be simplified by taking advantage of the following aspects of MXMS XML: \n\n* All three types of behaviors (Set Configuration, Perform Action, and Query Configuration) have the same format for their Result XML documents\n* The presence of TLC errors and the (absence of) XML equivalence can be used to quickly separate successes from failures\n* If an operation was performed, but not exactly as requested, Parm Value Extraction can be used to compare requested and resulting values to determine any deviation\n* When an XML query is issued, Parm Value Extraction can be used to extract key values that were the primary purpose of the XML query \n\nThis document will describe how to handle response from MXMS:\n\n* Success Response\n* Error Responses\n\n## Parm Value Extraction\n\nA simple and quite useful method for simplifying the extraction of relevant information from an XML Result document is Parm Value Extraction. It is simply the process of searching an XML document for a parm with a given name and extracting the value associated with it. Parm Value Extraction is most commonly applied to Non-Pivotal Parms since they are the mostly likely to contain useful information. This is because Pivotal Parms are typically \"canned\" as part of an XML Template used to create an Request XML document and are simply replicated into the Result XML document. It is an important aspect of the XML used by MXMS that a given parm can only appear once within a given TLC since this can make it much easier to extract of the value of a given named parm from within a Result XML document.\n\n## Success Response\n\nIf the call to MXMS is successful, the XML returned from MXMS will exactly match the XML sent to MXMS.   \n\nXML Submitted\n\n    :::xml\n    <wap-provisioningdoc>\n        <characteristic type=\"Clock\" version=\"4.3\">\n            <parm name=\"AutoTime\" value=\"false\"/>\n            <parm name=\"TimeZone\" value=\"GMT-5\"/>\n            <parm name=\"Date\" value=\"2014-01-19\"/>\n            <parm name=\"Time\" value=\"17:00:00\"/>\n        </characteristic>\n    </wap-provisioningdoc>\n\nXML Returned\n\n\t:::xml\n    <wap-provisioningdoc>\n        <characteristic type=\"Clock\" version=\"4.3\">\n            <parm name=\"AutoTime\" value=\"false\"/>\n            <parm name=\"TimeZone\" value=\"GMT-5\"/>\n            <parm name=\"Date\" value=\"2014-01-19\"/>\n            <parm name=\"Time\" value=\"17:00:00\"/>\n        </characteristic>\n    </wap-provisioningdoc>\n\n\n## Error Responses \n\nEach CSP will handle errors according to their specific implementation. If the call to the MXMS fails the response XML will contain information about the failure and contain the text \"-error\". Overall, there are a few common error types:\n\n* Framework Error\n* CSP Error\n* Sub Characteristic Error\n* Parm Error\n\n### Framework Error\nThe MXMS typically passes the submitted XML directly to the CSP, but may return errors if a CSP is not found or if the XML is malformed in general. Below is an example:\n\n\nXML Submitted\n\n    :::xml\n    <wap-provisioningdoc>\n        <characteristic type=\"SomeCSP\" version=\"4.3\">\n            <parm name=\"SomeParm\" value=\"false\"/>\n        </characteristic>\n    </wap-provisioningdoc>\n\nXML Returned\n\n    :::xml\n    <wap-provisioningdoc>\n        <characteristic-error type=\"SomeCSP\" version=\"4.3\" desc=\" has not registered with MX Framework yet\">\n            <parm name=\"SomeParm\" value=\"false\"/>\n        </characteristic-error>\n    </wap-provisioningdoc>\n\n### CSP Error\nA CSP is considered a 'top-level characteristic' within the context of the XML. An error indicated at this level is considered a major error by the CSP and typically means that none of the parms were processed. \n\nBelow is an example:\n\nXML Submitted\n\n    :::xml\n    <wap-provisioningdoc>\n        <characteristic type=\"Clock\" version=\"100\" >\n            <parm name=\"AutoTime\" value=\"true\"/>\n        </characteristic>\n    </wap-provisioningdoc>\n\n\nXML Returned\n\n    :::xml\n    <wap-provisioningdoc>\n        <characteristic-error type=\"Clock\" version=\"100\" desc=\"The DSD version is higher than current supported DSD 4.3\">\n            <parm name=\"AutoTime\" value=\"true\"/>\n        </characteristic-error>\n    </wap-provisioningdoc>\n\n>Note: The XML CSP enables you to control how MXMS will handle top-level characteristic errors. Consult the XML CSP reference in this guide for more information.\n\n### Sub Characteristic Error\nSome CSPs contain 'sub-characteristics' which provide for a grouping of settings to be applied to a specific feature of the CSP. The CSP may report a `characteristic-error` at this level when all settings within that sub-characteristic have failed to be applied. Other settings outside of the sub-characteristic may have been applied. Below is an example:\n\n\nXML Submitted\n\n    :::xml\n    <wap-provisioningdoc>\n        <characteristic type=\"Clock\" version=\"4.3\" >\n            <parm name=\"AutoTime\" value=\"true\"/>\n            <characteristic type=\"AutoTimeDetails\">\n                <parm name=\"somParm\" value=\"00:30:00\"/>\n            </characteristic>\n        </characteristic>\n    </wap-provisioningdoc>\n\nXML Returned\n\n    :::xml\n    <wap-provisioningdoc>\n        <characteristic type=\"Clock\" version=\"4.3\">\n            <parm name=\"AutoTime\" value=\"true\"/>\n            <characteristic-error type=\"AutoTimeDetails\" desc=\"unsupported\">\n                <parm-error name=\"someParm\" value=\"00:30:00\" desc=\"Param type is not supported\"/>\n            </characteristic-error>\n        </characteristic>\n    </wap-provisioningdoc>\n\n\n### Parm Error\nSome CSPs may report a `parm-error` when that setting for that specific parm have failed to be applied. Other settings outside of parm may have been applied. Below is an example:\n\n\nXML Submitted\n\n    :::xml\n    <wap-provisioningdoc>\n        <characteristic type=\"Clock\" version=\"4.3\">\n            <parm name=\"SomeParm\" value=\"false\"/>\n        </characteristic>\n    </wap-provisioningdoc>\n\nXML Returned\n\n    :::xml\n    <wap-provisioningdoc>\n        <characteristic type=\"Clock\" version=\"4.3\">\n            <parm-error name=\"SomeParm\" value=\"false\" desc=\"Param type is not supported\"/>\n        </characteristic>\n    </wap-provisioningdoc>\n\n## Notes\n\nXML sent into and returned from MXMS may differ in white spacing both before and after XML nodes and within XML nodes. When comparing returned XML to submitted XML you should format the white spacing to a unified pattern before making comparisons. "},{"key":"guide-xml-submit","name":" XML Submission","md":"# XML Submission\n\n## Overview\nThis document will describe how to send XML to MXMS for setting parameter values for CSPs:\n\n* Sending XML\n* Group Submission\n\nThe structure of the XML is based on a standard format that is being used by the MXMS. Each CSP offers different options for parameters and sub-characteristics, but all follow the same structure:\n\n\t\t:::xml\n\t\t<wap-provisioningdoc>\n\t\t\t<characteristic type=\"SomeCSP\" version=\"SpecificVersionToUse\">\n\t\t\t\t<parm name=\"SomeParm\" value=\"SomeValue\"/>\n\t\t\t</characteristic>\n\t\t\t<characteristic type=\"SomeCSPWithSubCharacteristic\" version=\"SpecificVersionToUse\">\n\t\t\t\t<parm name=\"SomeParm\" value=\"SomeValue\"/>\n\t\t\t\t<characteristic type=\"SomeSubChar\">\n\t\t\t\t\t<parm name=\"SomeParmofSubChar\" value=\"SomeValue\"/>\n\t\t\t\t</characteristic>\n\t\t\t</characteristic>\t\n\t\t</wap-provisioningdoc>\n\n### General Submission Rules\n\n* Characteristics must be wrapped in a `wap-provisioningdoc` node\n* Each characteristic must contain a version attribute that indicates the version to use\n* Multiple characteristics can be sent in one XML package\n* Characteristics are processed synchronously in the order they appear in the XML\n\n\n## Single Characteristic\n\nThe following sample code shows how to submit XML to the MXMS to set the date and time of the device's clock.\n\n>Note: The code below uses the `MXservice` variable we used in the binding example. You will need to use the same reference that you established in your MXMS binding code.\n\n    :::java\n    //MX can through exceptions when processing XML \n\ttry {\n\t    //Check if the MX service is null \n\t    if(MXservice != null){\n\t        //MX Response XML\n\t\t\tString MxResXML = \"\";\n\t\t\t\t\t\t\n\t\t\t//MX XML\n\t\t\tString MxXML = \"<wap-provisioningdoc>\"\n\t\t\t\t\t\t +     \"<characteristic type=\\\"Clock\\\" version=\\\"4.2\\\">\"\n\t\t\t\t\t\t +         \"<parm name=\\\"AutoTime\\\" value=\\\"false\\\"/>\"\n\t\t\t\t\t\t +         \"<parm name=\\\"TimeZone\\\" value=\\\"GMT-5\\\"/>\"\n\t\t\t\t\t\t +         \"<parm name=\\\"Date\\\" value=\\\"2013-11-19\\\"/>\"\n\t\t\t\t\t\t +         \"<parm name=\\\"Time\\\" value=\\\"10:10:10\\\"/>\"\n\t\t\t\t\t\t +     \"</characteristic>\"\n\t\t\t\t\t\t + \"</wap-provisioningdoc>\";\n\t\t\t\t\t\t\n\t\t\t\t\t\t\n\t\t\t//Send XML to MX for processing \n\t\t\tMxResXML = MXservice.processXML(MxXML);\n\t\t\t\t\t\t\n\t\t\t//Log result XML\n\t\t    Log.i(\"MX\", \"MxResXML: \" + MxResXML);\n\t    }\n\t    else{\n\t        Log.e(\"MX\", \"Service is null\");\n\t    }\n\t} \n\tcatch (Exception e) {\n\t    Log.e(\"MX\", e.toString());\n    }\n\n## Multiple Characteristics\n\nYou can combine multiple settings together inside on `wap-provisioningdoc` by including multiple `characteristic` XML that was generated individually. These settings will be applied in the order they are represented in the file. Further handling can be controlled by the [XML Manager](#csp-xml) that can control behavior of error handling.  \n\nFor example we will set the date and time as two separate instructions as well as add a new WiFi network:\n\n    :::xml\n    <wap-provisioningdoc>\n\t    <characteristic type=\"Clock\" version=\"4.2\">\n\t\t    <parm name=\"AutoTime\" value=\"false\">\n\t\t\t<parm name=\"Date\" value=\"2013-11-19\">\n        </characteristic>\n        <characteristic type=\"Clock\" version=\"4.2\">\n\t\t    <parm name=\"AutoTime\" value=\"false\">\n\t\t\t<parm name=\"Time\" value=\"10:10:10\">\n        </characteristic>\n\t\t<characteristic type=\"Wi-Fi\" version=\"2.7\" >\n\t\t\t<parm name=\"UseRegulatory\" value=\"0\"/>\n\t\t\t<parm name=\"UseAdvancedOptions\" value=\"0\"/>\n\t\t\t<parm name=\"NetworkAction\" value=\"Add\"/>\n\t\t\t<characteristic type=\"network-profile\">\n\t\t\t\t<parm name=\"SSID\" value=\"PLACEHODLER-SSID\"/>\n\t\t\t\t<parm name=\"SecurityMode\" value=\"2\"/>\n\t\t\t\t<parm name=\"WPAMode\" value=\"1\"/>\n\t\t\t\t<parm name=\"Authentication\" value=\"1\"/>\n\t\t\t\t<characteristic type=\"auth-details\">\n\t\t\t\t\t<parm name=\"OptionalServerCertificate\" value=\"\"/>\n\t\t\t\t\t<parm name=\"MandatoryClientCertificate\" value=\"\"/>\n\t\t\t\t</characteristic>\n\t\t\t\t<parm name=\"UseDHCP\" value=\"1\"/>\n\t\t\t\t<parm name=\"UseProxy\" value=\"0\"/>\n\t\t\t</characteristic>\n\t\t</characteristic>\n\n    </wap-provisioningdoc>"},{"key":"guide-xml-xmlparser","name":" XML Parser ","md":"# XML Parser \n\n## Overview\n\nThe XML Parser class is a Java class for assisting with MXMS XML on Android. It has been developed to assist in starting MXMS development, and to offer suggestion as to how your application might process MXMS XML. Your application does not need to use the XML Parser class. It is up to your development teams to determine the best way for your application to handle MXMS XML for your needs. \n\n## Main Features\n\n### Validate Set Responses\n\nThe XML Parser class can assist you in validating responses from MXMS through the help of the `isXmlEquivalent` function. When an MXMS set is successful the response XML should be equivalent to the set XML, besides for white space. To use the `isXmlEquivalent` function pass in the XML string you have submitted to MXMS and the XML string response from MXMS. If the XML is equivalent, the function will return `true` if not it will return `false`. If the function  returns `false` it should contain error parms or characteristics.\n\nFor Example:\n\n    :::java\n    //Check for Errors\n    Boolean isXmlGood = XmlParser.isXmlEquivalent(XML, resXML);\n\n### Validate Query Responses \n\nThe XML Parser class assist you in validating query responses from MXMS through the help of the `isQueryXmlResponseValid` function. You can pass in the response XML from MXMS and if the XML is error free it will return `true` if there is an error it will return `false`. \n\nFor Example:\n\n    :::java\n    //Check for Errors\n\tBoolean isXmlGood = XmlParser.isQueryXmlResponseValid(resXML);\n\n### Counting Errors in Response XML\n\nThe XML Parser class helps you count the number of errors in the XML returned from the MXMS through the use of the function `countCharErrors` and `countParmErrors`. Both functions take in the response XML string from MXMS and return the number of errors of their specified type. \n\nFor Example: \n\n    :::java\n    //Count Errors \n    int charErrors = XmlParser.countCharErrors(resXML);\n    int parmErrors = XmlParser.countParmErrors(resXML);\n\n### Modifying XML Documents\n\nThe XML Parser class helps you modify MXMS XML. For example you can use it to replace values in a template XML with values given to your program through a user input. The function `replaceParms` allows you to specify the XML string to modify, the list of MXMS parm values to set, and outputs the updated XML string. \n\nFor Example:\n\n    :::java\n    //Setup parm value\n\tParmValue parmValue = new ParmValue(\"charType\", \"parmName\", \"value\");\n\t    \t\t\t\t \n\t//Setup parm value array list\n\tArrayList<ParmValue> parmValues = new ArrayList<ParmValue>();\n\t    \t\t\t\t \n\t//Add parm value\n\tparmValues.add(parmValue);\n\t    \t\t\t\t \n\t//Modify XML\n\tString newXML = XmlParser.replaceParms(xml, parmValues);\n\n### Reading XML Documents\n\nThe XML Parser class helps you read MXMS XML through the use of the `fetchParms` function. For example you can use this function to confirm parm values in set XML or read parm values in query xml. To use this function pass in the XML and a list of parm selectors, and the function will return an array list of parm values. \n\nFor Example:\n\n    :::java\n    //Setup parm selector\n\tParmSelector parmSelector = new ParmSelector(\"charType\", \"parmName\");\n\t    \t\t\t\t \n\t//Setup parm value array list\n\tArrayList<ParmSelector> parmSelectors = new ArrayList<ParmSelector>();\n\t    \t\t\t\t \n\t//Add parm value\n\tparmSelectors.add(parmSelector);\n\t    \t\t\t\t \n\t//Get parm values\n\tArrayList<ParmValue> parmValues = XmlParser.fetchParms(xml, parmSelectors);\n\n## Main Methods\n\n### boolean isXmlEquivalent(String inXml,String outXml)\n\nFunction for comparing if two MXMS XML's are equivalent, this can be used for validating set results\n\n**Parameters:**\n\n**inXml-** XML submitted to MXMS\n\n**outXml-** XML revived from MXMS\n\n**Returns:** boolean- True if XML is equivalent false if XMLs are different \n\n### boolean isQueryXmlResponseValid(String resXml)\n\nChecks Query response XML for Errors\n\n**Parameters:**\n\n**resXml**- XML to check for errors\n\n**Returns:** boolean- True for no errors false for errors \n\n### String formatXml(String xml)\n\nFormats XML to eliminate XML formatting issues in XML Nodes\n\n**Parameters:**\n\n**xml**- XML to format\n\n**Returns:** String- Cleaned XML\n\n### int countCharErrors(String xml)\n\nCounts the number of characteristic errors in a block of MXMS XML\n\n**Parameters:**\n\n**xml**- XML to count errors on\n\n**Returns:** int- Number of errors\n\n### int countParmErrors(String xml)\n\nCounts the number of parm errors in a block of MXMS XML\n\n**Parameters:**\n\n**xml**- XML to count errors on\n\n**Returns:** int- Number of errors\n\n### String getParmQuery(String charType,String parmName)\n\nHelper function for creating a parm query\n\n**Parameters:**\n\n**charType**- Characteristic type\n\n**parmName**- Parm Name to query \n\n**Returns:** String- MXMS query XML\n\n### String getCharQuery(String charType)\n\nHelper function for creating a characteristic query\n\n**Parameters:** \n\n**charType**- Characteristic type\n\n**Returns:** String- MXMS query XML\n\n### String replaceParms(String xml,ArrayList<ParmValue> values)\n\nUpdates XML with specified parm changes \n\n**Parameters:**\n\n**xml**- XML to update\n\n**values**- Values to replace\n\n**Returns:** String- Updated XML\n\n###  ArrayList<ParmValue> fetchParms(String xml,ArrayList<ParmSelector> selectors)\n\nFind parm value in xml\n\n**Parameters:**\n\n**xml**- XML to find parms in\n\n**selectors**- Parm selectors to find \n\n**Returns:** String- List of parm selector values or null on error\n\n### String fetchParm(String xml,ParmSelector selector)\n\nFind parm value in xml\n\n**Parameters:**\n\n**xml**- XML to find parm in\n\n**selector**- Parm selector\n\n**Returns:** String- Parm value\n\n## XML Parser Class\n\n    :::java\n    package com.example.mdmtester;\n\n\timport java.io.BufferedReader;\n\timport java.io.ByteArrayInputStream;\n\timport java.io.ByteArrayOutputStream;\n\timport java.io.IOException;\n\timport java.io.InputStream;\n\timport java.io.OutputStream;\n\timport java.io.StringReader;\n\timport java.util.ArrayList;\n\timport java.util.Properties;\n\timport javax.xml.parsers.DocumentBuilderFactory;\n\timport javax.xml.transform.OutputKeys;\n\timport javax.xml.transform.Transformer;\n\timport javax.xml.transform.TransformerFactory;\n\timport javax.xml.transform.dom.DOMSource;\n\timport javax.xml.transform.stream.StreamResult;\n\timport org.w3c.dom.Document;\n\timport org.w3c.dom.NamedNodeMap;\n\timport org.w3c.dom.Node;\n\timport android.app.Activity;\n\timport android.content.res.AssetManager;\n\n\t/** \n\t * Helper class for working with MXMS XML\n\t */\n\tpublic class XmlParser\n\t{\n\t\t//Variables\n\t\tstatic private ArrayList<ParmSelector> m_selectors;\n\t\tstatic private ArrayList<ParmValue> m_values;\n\t\tstatic private String m_fetchParm;\n\t\tstatic private int m_countCharErrors;\n\t\tstatic private int m_countParmErrors;\n\t\tstatic private String m_char;\n\n\t\t/**\n\t\t * Takes in a list of parm selectors and returns the value for that parm \n\t\t * @param xml XML to find parms in\n\t\t * @param selectors Parm selectors to find \n\t\t * @return List of parm selector values or null on error\n\t\t */\n\t\tstatic public ArrayList<ParmValue> fetchParms(String xml,ArrayList<ParmSelector> selectors)\n\t\t{\n\t\t\tif ( xml == null ) return null;\n\t\t\tif ( selectors == null ) return null;\n\t\t\tif ( selectors.size() == 0 ) return null;\n\t\t\t\n\t\t\tDocParser parser = new DocParser(xml)\n\t\t\t{\n\t\t\t\t@Override public boolean test(Node node)\n\t\t\t\t{\n\t\t\t\t\tif ( isChar(node) && !isChar(node.getParentNode()) ) m_char = getCharType(node);\n\t\t\t\t\treturn isParm(node);\n\t\t\t\t}\n\t\t\t\t@Override public void process(Node node)\n\t\t\t\t{\n\t\t\t\t\tString name = getParmName(node); if ( name == null ) return;\n\t\t\t\t\tfor(ParmSelector selector:m_selectors)\n\t\t\t\t\t{\n\t\t\t\t\t\tif ( ( selector != null ) && selector.getParmName().equalsIgnoreCase(name) )\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tString charType = selector.getCharType(); \n\t\t\t\t\t\t\tif ( ( charType != null ) && !charType.equalsIgnoreCase(m_char) ) continue;\n\t\t\t\t\t\t\tm_values.add(new ParmValue(selector,getParmValue(node)));\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tif ( !parser.isValid() ) return null;\n\n\t\t\tm_char = null;\n\t\t\tm_selectors = selectors;\n\t\t\tm_values = new ArrayList<ParmValue>();\n\t\t\tif ( !parser.parse(null,-1) ) return null; \n\t\t\t\n\t\t\treturn m_values;\n\t\t}\n\n\t\t/**\n\t\t * Find parm value in xml\n\t\t * @param xml XML to find parm in\n\t\t * @param selector Parm selector\n\t\t * @return Parm value\n\t\t */\n\t\tstatic public String fetchParm(String xml,ParmSelector selector)\n\t\t{\n\t\t\tif ( xml == null ) return null;\n\t\t\tif ( selector == null ) return null;\n\t\t\t\n\t\t\tDocParser parser = new DocParser(xml)\n\t\t\t{\n\t\t\t\t@Override public boolean test(Node node) { return isParm(node); }\n\t\t\t\t@Override public void process(Node node) { m_fetchParm = getParmValue(node); }\n\t\t\t};\n\n\t\t\tif ( !parser.isValid() ) return null;\n\n\t\t\tm_fetchParm = null;\n\t\t\tif ( !parser.parse(null,-1) ) return null; \n\t\t\t\n\t\t\treturn m_fetchParm;\n\t\t}\n\t\t\n\t\t/**\n\t\t * Updates XML with specified parm changes \n\t\t * @param xml XML to update\n\t\t * @param values Values to replace\n\t\t * @return Updated XML\n\t\t */\n\t\tstatic public String replaceParms(String xml,ArrayList<ParmValue> values)\n\t\t{\n\t\t\tif ( values == null ) return null;\n\t\t\t\n\t\t\tDocParser parser = new DocParser(xml)\n\t\t\t{\n\t\t\t\t@Override public boolean test(Node node)\n\t\t\t\t{\n\t\t\t\t\tif ( isChar(node) )\n\t\t\t\t\t\tif ( !isChar(node.getParentNode()) )\n\t\t\t\t\t\t\tm_char = getCharType(node);\n\t\t\t\t\t\n\t\t\t\t\treturn isParm(node);\n\t\t\t\t}\n\t\t\t\t@Override public void process(Node node)\n\t\t\t\t{\n\t\t\t\t\tString name = getParmName(node); if ( name == null ) return;\n\t\t\t\t\tfor(ParmValue value:m_values)\n\t\t\t\t\t{\n\t\t\t\t\t\tif ( ( value != null ) && value.getParmName().equalsIgnoreCase(name) )\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tString charType = value.getCharType(); \n\t\t\t\t\t\t\tif ( ( charType != null ) && !charType.equalsIgnoreCase(m_char) ) continue;\n\t\t\t\t\t\t\treplaceParmValue(node,value);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tif ( !parser.isValid() ) return null;\n\n\t\t\tm_values = values;\n\t\t\tif ( !parser.parse(null,-1) ) return null; \n\t\t\t\n\t\t\treturn parser.toXml(false);\n\t\t}\n\t\t\n\t\t/**\n\t\t * Helper function for creating a characteristic query\n\t\t * @param charType Characteristic type\n\t\t * @return MXMS query XML \n\t\t */\n\t\tstatic public String getCharQuery(String charType)\n\t\t{\n\t\t\tif ( charType == null ) return null;\n\t\t\t\n\t\t\treturn \"<wap-provisioningdoc><characteristic-query type=\\\"\" + charType + \"\\\" /></wap-provisioningdoc>\";\n\t\t}\n\n\t\t/**\n\t\t * Helper function for creating a parm query\n\t\t * @param charType Characteristic type\n\t\t * @param parmName Parm Name to query \n\t\t * @return MXMS query XML \n\t\t */\n\t\tstatic public String getParmQuery(String charType,String parmName)\n\t\t{\n\t\t\tif ( charType == null ) return null;\n\t\t\tif ( parmName == null ) return null;\n\t\t\t\n\t\t\treturn \"<wap-provisioningdoc><characteristic type=\\\"\" + charType + \"\\\"><parm-query name=\\\"\" + parmName + \"\\\"/>\" + \"</characteristic></wap-provisioningdoc>\";\n\t\t}\n\t\t\n\t\t/**\n\t\t * Reads in input stream and saves the XML to a string \n\t\t * @param stream Input stream to read XML from \n\t\t * @return Null on error or XML string on success \n\t\t */\n\t\tpublic static String readXml(InputStream stream)\n\t\t{\n\t\t\tif ( stream == null ) return null;\n\t\t\t\n\t\t\tStringBuilder xml = new StringBuilder();\n\t\t\tbyte[] buffer = new byte[256];\n\t\t\tint count;\n\t\t\t\n\t\t\ttry { while ( ( count = stream.read(buffer) ) > 0 ) for(int i=0;i<count;i++) xml.append((char)buffer[i]); } catch ( Exception e ) { }\n\t\t\t\n\t\t\ttry { stream.close(); } catch ( Exception e ) { }\n\t\t\t\n\t\t\treturn xml.toString();\n\t\t}\n\n\t\t/**\n\t\t * Counts the number of characteristic errors in a block of MXMS XML\n\t\t * @param xml XML to count errors on \n\t\t * @return Number of errors \n\t\t */\n\t\tstatic public int countCharErrors(String xml)\n\t\t{\n\t\t\tif ( xml == null ) return -1;\n\t\t\t\n\t\t\tDocParser parser = new DocParser(xml)\n\t\t\t{\n\t\t\t\t@Override public boolean test(Node node) { return isChar(node); }\n\t\t\t\t@Override public void process(Node node) { if ( isError(node) ) m_countParmErrors++; }\n\t\t\t};\n\t\t\tif ( !parser.isValid() ) return -2;\n\t\t\t\n\t\t\tm_countParmErrors = 0;\n\t\t\tif ( !parser.parse(null,-1) ) return -3; \n\t\t\t\n\t\t\treturn m_countParmErrors;\n\t\t}\n\t\t\n\t\t/**\n\t\t * Counts the number of parm errors in a block of MXMS XML\n\t\t * @param xml XML to count errors on \n\t\t * @return Number of errors \n\t\t */\n\t\tstatic public int countParmErrors(String xml)\n\t\t{\n\t\t\tif ( xml == null ) return -1;\n\t\t\t\n\t\t\tDocParser parser = new DocParser(xml)\n\t\t\t{\n\t\t\t\t@Override public boolean test(Node node) { return isParm(node); }\n\t\t\t\t@Override public void process(Node node) { if ( isError(node) ) m_countCharErrors++; }\n\t\t\t};\n\t\t\tif ( !parser.isValid() ) return -2;\n\t\t\t\n\t\t\tm_countCharErrors = 0;\n\t\t\tif ( !parser.parse(null,-1) ) return -3; \n\t\t\t\n\t\t\treturn m_countCharErrors;\n\t\t}\n\n\t\t/** \n\t\t * Formats XML to eliminate XML formatting issues in XML Nodes\n\t\t * @param xml XML to format \n\t\t * @return Cleaned XML\n\t\t */\n\t\tpublic static String formatXml(String xml)\n\t\t{\n\t\t\tif ( xml == null ) return null;\n\t\t\t\n\t\t\tDocParser parser = new DocParser(xml);\n\t\t\tif ( !parser.isValid() ) return null;\n\t\t\t\n\t\t\treturn parser.toXml(true);\n\t\t}\n\n\t\t/**\n\t\t * Function for comparing if two MXMS XML's are equivalent. This can be used for validating set results.\n\t\t * @param inXml XML submitted to MXMS \n\t\t * @param outXml XML revived from MXMS\n\t\t * @return True if XML is equivalent false if XMLs are different \n\t\t */\n\t\tstatic public boolean isXmlEquivalent(String inXml,String outXml)\n\t\t{\n\t\t\tif ( inXml == null ) return false;\n\t\t\tif ( outXml == null ) return false;\n\t\t\t\n\t\t\treturn formatXml(trimWhiteSpace(inXml)).equalsIgnoreCase(formatXml(trimWhiteSpace(outXml)));\n\t\t}\n\t\t\n\t\t/**\n\t\t * Checks Query response XML for Errors\n\t\t * @param resXml XML to check for errors \n\t\t * @return True for no errors false for errors \n\t\t */\n\t\tstatic public boolean isQueryXmlResponseValid(String resXml)\n\t\t{\n\t\t\tif (resXml == null ) return false;\n\t\t\t\n\t\t\tif(resXml.contains(\"<characteristic-error\") || resXml.contains(\"<characteristic-query-error\") || resXml.contains(\"<parm-error\") || resXml.contains(\"<parm-query-error\") )\n\t\t\t{\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\t\n\t\t/**\n\t\t * Removes white space charters from the begging and end of lines in an XML string\n\t\t * @param inputXML XML to clean\n\t\t * @return Cleaned XML\n\t\t */\n\t\tprivate static String trimWhiteSpace(String inputXML) \n\t\t{\n\t\t\tBufferedReader readerBuffer = new BufferedReader(new StringReader(inputXML));\n\t\t\tStringBuffer resultBuffer = new StringBuffer();\n\t\t\ttry \n\t\t\t{\n\t\t\t\tString xmlLine;\n\t\t\t\twhile ((xmlLine = readerBuffer.readLine()) != null)\n\t\t\t\t{\n\t\t\t\t\tresultBuffer.append(xmlLine.trim());\n\t\t\t\t}\n\t\t\t\treturn resultBuffer.toString();\n\t\t\t} \n\t\t\tcatch (IOException e) \n\t\t\t{\n\t\t\t\tthrow new RuntimeException(e);\n\t\t\t}\n\t\t}\n\t\t\n\t\t/** \n\t\t * Reads an application asset file and loads it into a string\n\t\t * @param activity Activity to get asset for\n\t\t * @param assetName file name\n\t\t * @return XML on success or null on frailer \n\t\t */\n\t\tstatic public String getAssetXml(Activity activity,String assetName)\n\t\t{\n\t\t\tif ( activity == null ) return null;\n\t\t\tif ( assetName == null ) return null;\n\t\t\t\n\t\t\tAssetManager assetManager = activity.getAssets();\n\t\t\tif ( assetManager == null ) return null; \n\t\t\t\n\t\t\tString readXml = null;\n\t\t\ttry { readXml = XmlParser.readXml(assetManager.open(assetName)); } catch ( Exception e) { }\n\t\t\tif ( readXml == null ) return null;\n\t\t\t\n\t\t\treturn readXml;\n\t\t}\n\t\t\n\t\t/**\n\t\t * Helper class for selecting xml parms by characteristic type parm name \n\t\t */\n\t\tpublic static class ParmSelector\n\t\t{ \n\t\t\t//Variables\n\t\t\tprotected String m_charType;\n\t\t\tprotected String m_parmName;\n\t\t\t\n\t\t\t/**\n\t\t\t * Creates a new Parm Selector Object\n\t\t\t * @param selector Existing Parm Selector to duplicate\n\t\t\t */\n\t\t\tpublic ParmSelector(ParmSelector selector)\n\t\t\t{\n\t\t\t\tm_charType = selector.m_charType;\n\t\t\t\tm_parmName = selector.m_parmName;\n\t\t\t}\n\t\t\t\n\t\t\t/**\n\t\t\t * Creates a new Parm Selector Object\n\t\t\t * @param charType Characteristic Type\n\t\t\t * @param parmName Parm Name\n\t\t\t */\n\t\t\tpublic ParmSelector(String charType,String parmName)\n\t\t\t{\n\t\t\t\tm_charType = charType;\n\t\t\t\tm_parmName = parmName;\n\t\t\t}\n\t\t\t\n\t\t\t/**\n\t\t\t * Get the Characteristic Type\n\t\t\t * @return Characteristic\n\t\t\t */\n\t\t\tpublic String getCharType() \n\t\t\t{ \n\t\t\t\treturn m_charType; \n\t\t\t}\n\t\t\t\n\t\t\t/**\n\t\t\t * Get the Parm Name\n\t\t\t * @return Parm name\n\t\t\t */\n\t\t\tpublic String getParmName() \n\t\t\t{ \n\t\t\t\treturn m_parmName; \n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * Helper class for holding parm information\n\t\t */\n\t\tpublic static class ParmValue extends ParmSelector\n\t\t{\n\t\t\t//Variables\n\t\t\tprotected String m_value;\n\t\t\t\n\t\t\t/**\n\t\t\t * Creates a new Parm value object\n\t\t\t * @param selector Parm selector object\n\t\t\t * @param value Parm value\n\t\t\t */\n\t\t\tpublic ParmValue(ParmSelector selector,String value)\n\t\t\t{\n\t\t\t\tsuper(selector);\n\t\t\t\t\n\t\t\t\tm_value = value;\n\t\t\t}\n\n\t\t\t/**\n\t\t\t * Creates a new parm value object\n\t\t\t * @param charType Characteristic Type\n\t\t\t * @param parmName Parm name\n\t\t\t * @param value Parm value\n\t\t\t */\n\t\t\tpublic ParmValue(String charType,String parmName,String value)\n\t\t\t{\n\t\t\t\tsuper(charType,parmName);\n\t\t\t\t\n\t\t\t\tm_value = value;\n\t\t\t}\n\t\t\t\n\t\t\t/**\n\t\t\t * Get parm selector\n\t\t\t * @return Parm selector \n\t\t\t */\n\t\t\tpublic ParmSelector getSelector() \n\t\t\t{ \n\t\t\t\treturn this; \n\t\t\t}\n\t\t\t\n\t\t\t/**\n\t\t\t * Get parm value\n\t\t\t * @return Parm value \n\t\t\t */\n\t\t\tpublic String getValue() \n\t\t\t{ \n\t\t\t\treturn m_value; \n\t\t\t}\n\t\t}\n\t\t\n\t\t/** \n\t\t * Helper class for parsing MXMS XML documents \n\t\t */\n\t\tprivate static class DocParser\n\t\t{\n\t\t\t//Variables\n\t\t\tprivate Document m_doc;\n\t\t\t\n\t\t\t/** \n\t\t\t * Creates a new instance of the doc parser \n\t\t\t * @param xml XML string to parse\n\t\t\t */\n\t\t\tpublic DocParser(String xml)\n\t\t\t{\n\t\t\t\tDocumentBuilderFactory dbf = DocumentBuilderFactory.newInstance();\n\t\t\t\tdbf.setNamespaceAware(true);\n\t\t\t\tdbf.setCoalescing(true);\n\t\t\t\tdbf.setIgnoringElementContentWhitespace(true);\n\t\t\t\tdbf.setIgnoringComments(true);\n\t\t\t\t\n\t\t\t\ttry { m_doc = dbf.newDocumentBuilder().parse(new ByteArrayInputStream(xml.getBytes())); } catch ( Exception e) { m_doc = null; }\n\t\t\t}\n\n\t\t\t/**\n\t\t\t * Checks if doc is null\n\t\t\t * @return True if doc is not null false if doc is null \n\t\t\t */\n\t\t\tpublic boolean isValid() \n\t\t\t{ \n\t\t\t\treturn ( m_doc != null ); \n\t\t\t}\n\t\t\t\n\t\t\t/**\n\t\t\t * Recursive function for processing XML\n\t\t\t * @param node XML node to process \n\t\t\t * @param depth Depth of node\n\t\t\t * @return Returns true when finished \n\t\t\t */\n\t\t\tpublic boolean parse(Node node,int depth)\n\t\t\t{\n\t\t\t\tif ( node == null ) { node = m_doc.getFirstChild(); depth--; }\n\t\t\t\tif ( node == null ) return false;\n\n\t\t\t\twhile ( node != null )\n\t\t\t\t{\n\t\t\t\t\tif ( node.getNodeType() != Node.TEXT_NODE )\n\t\t\t\t\t{\n\t\t\t\t\t\tif ( test(node) ) process(node); \n\t\t\t\t\t\t\n\t\t\t\t\t\tNode child;\n\t\t\t\t\t\tif ((depth != 0) && ((child = node.getFirstChild()) != null )) \n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif (!parse(child,depth-1))\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tnode = node.getNextSibling();\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\t\n\t\t\t/**\n\t\t\t * Stub function for testing an XML node. Should be override in real use case.  \n\t\t\t * @param node XML node to test\n\t\t\t * @return\n\t\t\t */\n\t\t\tpublic boolean test(Node node) \n\t\t\t{ \n\t\t\t\treturn false; \n\t\t\t}\n\t\t\t\n\t\t\t/**\n\t\t\t * Stub function for processing an XML node. Should be override in real use case.  \n\t\t\t * @param node XML node to process\n\t\t\t */\n\t\t\tpublic void process(Node node) \n\t\t\t{ \n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\t/**\n\t\t\t * Checks if an XML node is of type characteristic\n\t\t\t * @param node XML node to check if node is a characteristic \n\t\t\t * @return True if XML nod is characteristic\n\t\t\t */\n\t\t\tpublic boolean isChar(Node node)\n\t\t\t{\n\t\t\t\tif ( node == null ) return false;\n\t\t\t\tString name = node.getNodeName().toLowerCase();\n\t\t\t\treturn ( name.startsWith(\"characteristic\") ); \n\t\t\t}\n\t\t\t\n\t\t\t/**\n\t\t\t * Checks if an XML node is of type parm\n\t\t\t * @param node XML node to check if node is a parm\n\t\t\t * @return True if XML nod is parm\n\t\t\t */\n\t\t\tpublic boolean isParm(Node node)\n\t\t\t{\n\t\t\t\tif ( node == null ) return false;\n\t\t\t\tString name = node.getNodeName().toLowerCase();\n\t\t\t\treturn ( name.startsWith(\"parm\") ); \n\t\t\t}\n\t\t\t\n\t\t\t/**\n\t\t\t * Checks if an XML node is of type error\n\t\t\t * @param node XML node to check if node is of type error \n\t\t\t * @return True if XML nod is of type error \n\t\t\t */\n\t\t\tpublic boolean isError(Node node)\n\t\t\t{\n\t\t\t\tif ( node == null ) return false;\n\t\t\t\tString name = node.getNodeName().toLowerCase();\n\t\t\t\treturn ( name.endsWith(\"-error\") ); \n\t\t\t}\n\t\t\t\n\t\t\t/**\n\t\t\t * Checks if an XML node is of type query\n\t\t\t * @param node XML node to check if node is of type query \n\t\t\t * @return True if XML nod is of type query \n\t\t\t */\n\t\t\tpublic boolean isQuery(Node node)\n\t\t\t{\n\t\t\t\tif ( node == null ) return false;\n\t\t\t\tString name = node.getNodeName().toLowerCase();\n\t\t\t\treturn ( name.endsWith(\"-query\") ); \n\t\t\t}\n\t\t\t\n\t\t\t/**\n\t\t\t * Get the parm name from an XML node\n\t\t\t * @param node XML node to get parm name from\n\t\t\t * @return Parm name\n\t\t\t */\n\t\t\tpublic String getParmName(Node node)\n\t\t\t{\n\t\t\t\tif ( !isParm(node) && !isQuery(node) ) return null;\n\t\t\t\treturn getAttrValue(node,\"name\");\n\t\t\t}\n\t\t\t\n\t\t\t/**\n\t\t\t * Get the characteristic type from an XML node\n\t\t\t * @param node XML node to get characteristic type from\n\t\t\t * @return Characteristic type\n\t\t\t */\n\t\t\tpublic String getCharType(Node node)\n\t\t\t{\n\t\t\t\tif ( !isChar(node) ) return null;\n\t\t\t\treturn getAttrValue(node,\"type\");\n\t\t\t}\n\t\t\t\n\t\t\t/**\n\t\t\t * Get the parm value from an XML node\n\t\t\t * @param node XML node to get parm value from\n\t\t\t * @return Parm value\n\t\t\t */\n\t\t\tpublic String getParmValue(Node node)\n\t\t\t{\n\t\t\t\tif ( !isParm(node) && !isQuery(node) ) return null;\n\t\t\t\treturn getAttrValue(node,\"value\");\n\t\t\t}\n\t\t\t\n\t\t\t/**\n\t\t\t * Replace parm value in XML node\n\t\t\t * @param node XML node to replace value in\n\t\t\t * @param value Parm value to set\n\t\t\t * @return True on successes false on failure\n\t\t\t */\n\t\t\tpublic boolean replaceParmValue(Node node,ParmValue value)\n\t\t\t{\n\t\t\t\tif ( node == null ) return false;\n\t\t\t\tif ( value == null ) return false;\n\t\t\t\tif ( !isParm(node) && !isQuery(node) ) return false;\n\t\t\t\treturn setAttrValue(node,\"value\",value.getValue());\n\t\t\t}\n\t\t\t\n\t\t\t/**\n\t\t\t * Get the value of an attribute in an XML node\n\t\t\t * @param node XML Node to get value from\n\t\t\t * @param name Attribute to get value of\n\t\t\t * @return Attribute\n\t\t\t */\n\t\t\tpublic String getAttrValue(Node node,String name)\n\t\t\t{\n\t\t\t\tNamedNodeMap map = node.getAttributes(); if ( map == null ) return null;\n\t\t\t\tNode attr = map.getNamedItem(name); if ( attr == null ) return null;\n\t\t\t\treturn attr.getNodeValue();\n\t\t\t}\n\t\t\t\n\t\t\t/**\n\t\t\t * Sets attribute value in XML node \n\t\t\t * @param node XML Node to set value in \n\t\t\t * @param name XML attribute name \n\t\t\t * @param value XML attribute value \n\t\t\t * @return True on successes false on failure\n\t\t\t */\n\t\t\tpublic boolean setAttrValue(Node node,String name,String value)\n\t\t\t{\n\t\t\t\tif ( node == null ) return false;\n\t\t\t\tif ( name == null ) return false;\n\t\t\t\tif ( value == null ) return false;\n\t\t\t\t\n\t\t\t\tNamedNodeMap map = node.getAttributes(); if ( map == null ) return false;\n\t\t\t\tNode attr = map.getNamedItem(name); if ( attr == null ) return false;\n\t\t\t\tattr.setNodeValue(value);\n\t\t\t\t\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\t\n\t\t\t/**\n\t\t\t * Format XML doc through XML Transformer and returns formatted XML as a string\n\t\t\t * @param indent True if XML Transformer should indent XML or False if it should not indent XML\n\t\t\t * @return Formatted XML\n\t\t\t */\n\t\t\tpublic String toXml(boolean indent)\n\t\t\t{\n\t\t\t\tif ( m_doc == null ) return null;\n\t\t\t\t\n\t\t\t\ttry\n\t\t\t\t{\n\t\t\t\t\tTransformerFactory factory = TransformerFactory.newInstance();\n\t\t\t\t\tTransformer transformer = factory.newTransformer();\n\t\t\t\t\tProperties outFormat = new Properties();\n\t\t\t\t\toutFormat.setProperty(OutputKeys.INDENT,indent?\"yes\":\"no\"); \n\t\t\t\t\toutFormat.setProperty(OutputKeys.METHOD,\"xml\");\n\t\t\t\t\toutFormat.setProperty(OutputKeys.OMIT_XML_DECLARATION,\"yes\");\n\t\t\t\t\toutFormat.setProperty(OutputKeys.VERSION,\"1.0\");\n\t\t\t\t\toutFormat.setProperty(OutputKeys.ENCODING,\"UTF-8\");\n\t\t\t\t\ttransformer.setOutputProperties(outFormat);\n\t\t\t\t\t\n\t\t\t\t\tDOMSource domSource = new DOMSource(m_doc.getDocumentElement());\n\t\t\t\t\tOutputStream output = new ByteArrayOutputStream();\n\t\t\t\t\tStreamResult result = new StreamResult(output);\n\t\t\t\t\ttransformer.transform(domSource,result);\n\t\t\t\t\treturn output.toString();\n\t\t\t\t}\n\t\t\t\tcatch ( Exception e) { return null; }\n\t\t\t}\n\t\t}\n\t}\n"},{"key":"guide-xml-xml_overview","name":" MXMS XML Overview","md":"# MXMS XML Overview\n\n## XML Schema\n\nMXMS utilizes XML that conforms to the PROV DTD and more specifically to the Microsoft-defined dialect, which is defined by the MSPROV DTD. PROV DTD is the XML schema used by the OMA CP (Open Mobile Alliance Client Provisioning) Standard. Use of this XML schema means that XML that can be consumed by MXMS will be familiar to MDM Vendors that are already familiar with OMA CP and/or the PROV DTD. Use of this XML schema also means that MXMS can be more easily leveraged by existing MDMs that are based on or can already leverage OMA CP.\n\n## XML Elements\n\n### Characteristics\n\nA characteristic is an element that appears in an XML document or DSD and that is used to define hierarchical organization of parms and characteristics. \n\nTop-Level Characteristics (TLCs) must appear at the outermost level of a document (XML or DSD). Every XML document must contain at least one TLC and every DSD must contain **exactly one** TLC. There is a one to one mapping between TLCs and DSDs/CSPs. The type of a TLC specified in the XML or DSD exactly matches the CSP name. A Request TLC appears in a Request XML Document to specify one or more Set Configuration and/or Perform Action Behaviors. A Result TLC provides information about the success or failure of the behavior(s) requested by the corresponding Request TLC.\n\nSub-Group Characteristic (SGCs) may appear in TLCs/SGCs. A TLC may have any number (including zero) of SGCs and an SGC may have any number (including zero) of SGCs. A Request SGC provides information about a behavior to be performed by its enclosing Result TLC. A Result SGC provides information about the behavior performed for its enclosing Result SGC.\n\n### Characteristic-Errors\n\nA Characteristic-Error is an element that appears in a Result XML document that is used to indicate a failure when processing a corresponding characteristic in a Request XML document. \n\nTop-Level Characteristic-Errors (TLC Errors) are those that appear at the outermost level of a Result XML document. A Result XML document may contain zero or more TLC errors. If a Result XML document contains a TLC error, it indicates that the corresponding characteristic in the Request XML document was completely rejected. This means that none of the behaviors requested by that TLC were performed by the CSP. \n\nSub-Group Characteristic-Errors (SGC Errors) are those that appear within TLCs/SGCs. If a TLC or SGC in a Result XML document contains an SGC error, it indicates that the Behavior requested by the corresponding SGC was rejected. This means a that portion of the behavior requested by the enclosing TLC was not performed by the CSP.\n\n### Characteristic-Queries\n\nA Characteristic-Query is an element that appears in a Request XML document that is used to request a query of some or all of the current configurations of the features in the subsystem that are managed by a CSP.\n\nTop-Level Queries (TLQs) must appear at the outermost level of an XML document. A Request XML document may contain zero or more TLQs. A TLQ cannot contain any sub-elements. A TLQ in a Request XML document will result in a TLC or TLC error in the corresponding location in the Result XML document.\n\nSub-Group Queries (SGQs) may appear in TLCs/SGCs. An SGQ must appear within a TLC or a SGC (never within another query). It may contain a parm to act as a query index to select which configuration to query. A request SGQ in a Request XML document will either result in a Characteristic-Query-Error or in the matching SGC in the corresponding location in the Result XML Document.\n\n### Characteristic-Query-Errors\n\nA Characteristic-Query-Error is an element that appears in a Result XML document that is used to indicate that a failure occurred when processing a corresponding Characteristic-Query element in a Request XML document. This could occur because the TLC or SGC being queried does not support Characteristic-Query. This could also occur because the SGC being queried requires a query index and none was supplied or the query index parm supplied did not have a value that selected a valid configuration to query.\n\n### Parms\n\nA parm is an element that appears in a Request XML document or a Result XML document and that is used to hold a single data item. Every parm must have a name that is unique within a given TLC (even across different SGCs within that TLC). A given parm can appear only once within a given TLC. It may appear more than once within an XML document as long as that XML document contains multiple TLCs and that parm appears only once within each TLC.\n\nA parm is the desired configuration and a desired action selector or action parameter value when it is a part of a Request XML document for a Set Configuration behavior. It is also used to represent the current configuration value of a feature on the device when it is part of a Result XML document for a Query Configuration behavior.\n\nIf the processing of a parm in a Request XML document by a CSP is successful, then the Result XML document will contain a Parm element, which typically will have the same value. The Parm element may have a different value in the Result XML document if the CSP determined that the value requested was not supported but was \"close enough\" to a supported value that substituting the closest supported value was reasonable. In such a case, the value actually used will be returned in the parm in the Result XML document instead of the value requested.\n\n### Parm-errors\n\nA Parm-Error is an element that appears in a Result XML document that is used to indicate a failure when processing a corresponding parm in a Request XML document.\n\nIf the processing of a parm in a Request XML document by a CSP is unsuccessful, then the Result XML document will contain a Parm-Error element instead of a Parm element. The Parm-Error element will contain the same name and value as the failed Parm element plus a description explaining the reason for the failure. If a Result XML document contains a Parm-Error element, then it indicates that the behavior requested by the Request XML document could not be completely achieved.\n\n### Parm-Queries\n\nA Parm-Query is an element that appears in a Request XML document that is used to request a query of a single current configuration value of the subsystem managed by a CSP. Every Parm-Query must have a name that is unique within a given TLC, even across different SGCs within that TLC. A given Parm-Query can appear only once within a given TLC. It may appear more than once within an XML document if that XML document contains multiple TLCs and that Parm-Query appears only once within each TLC.\n\nA Parm-Query requests a value that is part of the current configuration of the subsystem managed by a CSP. It is used to request a current configuration value when sent in a Request XML document. The queried value will be returned via a Parm element in the Result XML document.\n\nIf the processing of a Parm-Query in a Request XML document by a CSP is successful, then the Result XML Document will contain a Parm Element, with the current Configuration Value of that Parm. \n\n### Parm-Query-Errors\n\nA Parm-Query-Error is an element that appears in a Result XML document that is used to indicate that a failure occurred when processing a corresponding Parm-Query element in a Request XML document. \n\nIf the processing of a Parm-Query in a Request XML document by a CSP is unsuccessful, then the Result XML document will contain a Parm-Query-Error element instead of a Parm element. The Parm-Query-Error element will contain the same name as the failed Parm-Query element plus a description explaining the reason for the failure.\n\n## Request and Result XML Documents\n\nTo request the MXMS to perform some behavior(s), a Request XML must be created and submitted to MXMS by a requesting application. A Request XML Document consists of one or more TLCs that define the behavior(s) requested by that Request XML Document. The MXMS breaks the Request XML Document into its component Request Top Level Characteristic (TLC) and delivers each Request TLC, in the order it appears in the Request XML Document, to a corresponding CSP.\n\nRequest TLCs in Request XML Documents can be used to perform three primary types of behaviors:\n\n1. Set Configuration - Almost every CSP supports a Request TLC that can be used to set or modify the configuration of the subsystem that is managed by that CSP\n2. Perform Action - Some CSPs support Request TLCs that can be used to perform discrete actions upon the subsystem managed by that CSP. This is opposed to behaviors that involve changing the configuration of the subsystem. For example, an action that could be performed through a CSP is rebooting the device. \n3. Query Configuration - Some CSPs support Request TLCs that can be used to obtain the current configuration of the subsystem managed by that CSP\n\nA CSP processes a Request TLC and returns a Result TLC or TLC Error based on the results of processing that TLC. The MXMS aggregates Request TLCs and TLC Errors into a Result XML document in the same order as the corresponding Request TLCs in the Request XML document. The MXMS returns the Result XML document to the requesting application to communicate the results of the attempt to perform the behavior(s) requested in the Request XML Document.\n\nQuery Configuration behaviors are not reflexive, which means that a Result XML document has an intentionally different format than a successfully completed Request XML document. The XML that is returned from a successful Query Configuration behavior will contain the information that was returned from the query, which is in the same format as Request XML documents and Result XML documents. This means that the result of a query is able to be used as a Request XML document for a Set Configuration behavior.\n\nA characteristic (either a TLC or SGC) in a Request XML document will result in one of the following in the Result XML document:\n\n* The request characteristic in the Request XML document was performed successfully by the corresponding CSP. This means that the characteristic in the Result XML document will be in the same format as the characteristic in the Request XML document.\n* The request characteristic was rejected by the corresponding CSP. This means that this characteristic will be a Characteristic-Error in the Result XML document.\n* The request characteristic was ignored by MXMS and not sent to the corresponding CSP. This means that neither a result characteristic nor a Characteristic-Error will appear in the corresponding location in the Result XML.\n\nA parm in a Request XML document will result in one of the following in the Result XML Document:\n\n* The request parm was accepted by the corresponding CSP, in which case, the value of that parm will be used by the CSP when performing the requested behavior. This means that the parm value in the Result XML document will be identical to the corresponding parm value in the Request XML, which indicates that the value was used successfully.\n* The request parm can be rejected by the corresponding CSP, in which case the parm value will not be used to perform a requested behavior. The CSP might consider this parm value to be critical and will return a Parm-Error element in the corresponding location in the Result XML document. Otherwise, the CSP might consider the parm value to be non-critical (i.e. merely a \"suggestion\") and will use a different value to perform the behavior. The CSP will then return the value that was actually used in the corresponding location of the Result XML document instead of the value specified in the Request XML document.\n\n\n## XML Equivalence\n\nTwo XML documents are equivalent if they represent the same data even if they do not have identical text. Two XML documents are equivalent if they differ only in white space, for example:\n\n\t:::XML\n\t<characteristic type=\"Wi-Fi\" version=\"2.1\" >\n\t\nvs.\n\n\t:::XML\n\t<characteristic type=\"Wi-Fi\"                       version=\"2.1\" >\n\nTwo XML documents may be equivalent if they differ only in order and order is not relevant, for example:\n\n\t:::XML\n\t<characteristic  version=\"2.1\" type=\"Wi-Fi\" >\n\t\nvs.\n\n\t:::XML\n\t<characteristic  type=\"Wi-Fi\" version=\"2.1\" >\t\n\nEquivalence is a key concept when taken together with the reflexive nature of Set Configuration and Perform Action behaviors. \"Total Success\" is indicated by Request and Result XML documents being equivalent since it means that what was done was exactly what was requested.\n\n## DSDs and Conditional Elements\n\nA primary purpose of a DSD is to provide the information required to present a viable Data-Driven UI to create XML that can be consumed by the CSP corresponding to that DSD.\n\nIn many cases, a CSP will support multiple use-cases, sub-use-cases, modes, options, or functions. In order to effectively describe such cases, the XML sent to a CSP may need to be conditional in nature. For example, the presence of one parm or characteristic may be optional depending on the value selected or entered for a prior parm. To reliably generate such conditional XML, the Data-Driven UI must reflect the conditional nature of the XML and hence the DSD can utilize the PresentIf attribute.\n\nA PresentIf attribute that is specified for a Characteristic or Parm element includes a Boolean expression that must be evaluated to determine whether that characteristic or parm should be \"presented\" within the Data-Driven UI. If a characteristic or parm is not presented, then no UI will be displayed based on those elements and they will not be present in the XML that is generated. This enables flexibility in the DSD, permitting definition of complex relationships.\n\n### Pivotal Parms\n\nUse the PresentIf attribute in Characteristic or Parm elements within a DSD causes certain Parm elements to become \"Pivotal\" with respect to the UI that will be displayed and the XML that will be generated.\n\nA Pivotal Parm is simply a parm where the value selected or entered determines which SGCs and/or parms will be presented by the UI and included in the generated XML. \n\nWhen using Data-Driven UI to generate XML, the Data-Driven UI will enforce the PresentIf attributes defined in the DSD and the generated XML will automatically be compliant to the DSD and therefore will be consumable by the corresponding CSP.\n\nBut when generating XML programmatically, it can be of critical importance to know about Pivotal Parms since failure to properly account for them can lead to the generation of XML does not conform to the DSD and hence cannot be successfully consumed by the corresponding CSP. In many cases, the existence of Pivotal Parms will indicate that the CSP can be used to accomplish multiple logical use cases, where each use case is achieved by taking a given path through the DSD by making certain selections for one or more Pivotal Parms.\n\n### Error Handling Rules\n\nIf a Result XML document is equivalent to the corresponding Request XML document, then it indicates a \"total success\" and that all of the behavior(s) that were requested were performed exactly as specified. However, if a Result XML Document contains any TLC errors, then the behaviors requested by the TLCs in the corresponding Request XML document were not performed at all. \n\nTo find out which behaviors were not performed and why, the TLC errors in the Result XML document will need to be examined. \n\nIf a Result XML document contains no TLC errors but is not equivalent to the corresponding Request XML document, then some of the behaviors requested by the corresponding Request XML document were either not performed or were performed but not exactly as specified. \n\nTo find out which behaviors were not executed, examine the SGC errors or Parm-Errors in the Result XML document. To find out which behaviors were executed, but not exactly as specified, examine the values of parms in the Result XML document and see how they differ from the requested values in the Request XML document.\n\n### CSPs and Enterprise and Factory Resets\n\nConfiguration performed by all CSPs is stored such that it is intentionally lost on every Enterprise Reset and Factory Reset. This means that the CSPs and the subsystems they manage intentionally do not store configuration in a manner that would cause it to be persistent across an Enterprise or Factory Reset. By definition, it is NOT possible to make any configuration persistent across Factory Reset since Factory Reset must always return a device to its Factory Default state and hence must discard all configuration that has been applied.\n\nHowever, it is possible to make Set Configuration behaviors effectively persistent across an Enterprise Reset by using the PersistMgr. This is done by appending a PersistMgr TLC to the Request XML document. The PersistMgr CSP will then store the entire Request XML document in a special secure location that will survive an Enterprise Reset. Following Enterprise Reset, the PersistMgr CSP will automatically resubmit all saved Request XML documents, thus effectively restoring their effects. \n\nA PersistMgr TLC can specify whether the containing Request XML document should always be saved or only if it was initially applied without TLC errors. Each Request XML document to be made persistent using the PersistMgr CSP must be given a unique name to identify it, which can then be used to later enumerate and/or remove saved Request XML documents. A PersistMgr TLC can specify the order in which various Request XML Documents should be reapplied following an Enterprise Reset. More information about the PersistMgr can be found in the CSP reference section.\n"}];